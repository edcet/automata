{"task_id": "ContextCodeRetrieval/0", "query": "What class adds edges to the `MultiDiGraph` for relationships between `Symbol` nodes?", "truth_top_match": "automata.symbol.graph.symbol_relationships.RelationshipProcessor", "top_k_matches": ["automata.symbol.graph.symbol_relationships.RelationshipProcessor", "automata.symbol.graph.symbol_relationships.RelationshipProcessor.process", "automata.symbol.graph.symbol_caller_callees.CallerCalleeProcessor", "automata.symbol.graph.symbol_references.ReferenceProcessor", "automata.symbol.graph.symbol_caller_callees.CallerCalleeProcessor.process", "automata.symbol.graph.graph_builder.GraphBuilder._process_relationships", "automata.symbol.graph.graph_builder.GraphBuilder", "automata.symbol.graph.symbol_graph.SymbolGraph", "automata.symbol.graph.symbol_navigator.SymbolGraphNavigator.get_symbol_relationships", "automata.symbol.graph.symbol_references.ReferenceProcessor.process"], "k": 20}
{"task_id": "ContextCodeRetrieval/1", "query": "What method is used to merge a pull request on the remote?", "truth_top_match": "automata.singletons.github_client.RepositoryClient.merge_pull_request", "top_k_matches": ["automata.singletons.github_client.RepositoryClient.merge_pull_request", "automata.singletons.github_client.GitHubClient.merge_pull_request", "automata.tests.unit.github.test_github_client.test_merge_pull_request", "automata.singletons.github_client.RepositoryClient.create_pull_request", "automata.tests.unit.singletons.test_singletons_github_client.test_create_pull_request", "automata.singletons.github_client.GitHubClient.create_pull_request", "automata.tests.unit.singletons.test_singletons_github_client.test_commit_and_push_changes", "automata.singletons.github_client.GitHubClient.get_open_pull_requests", "automata.tests.unit.github.test_github_client.test_create_pull_request", "automata.tests.unit.singletons.test_singletons_github_client.test_stage_all_changes"], "k": 20}
{"task_id": "ContextCodeRetrieval/2", "query": "What method is used to delete data from a table in SQLDatabase?", "truth_top_match": "automata.core.base.database.relational_database.SQLDatabase.delete", "top_k_matches": ["automata.tests.unit.database.test_database_sql.test_delete", "automata.core.base.database.relational_database.SQLDatabase.delete", "automata.core.base.database.relational_database.RelationalDatabase.delete", "automata.core.base.database.relational_database.SQLDatabase", "automata.tests.unit.task.test_task_database.test_get_tasks_by_query_with_sql_string", "automata.tasks.task_database.AutomataAgentTaskDatabase", "automata.tests.unit.automata_agent.test_automata_agent.test_db_cleanup", "automata.tests.unit.task.test_task_database.test_get_tasks_by_query", "automata.tests.unit.task.test_task_database.test_contains", "automata.core.base.database.relational_database.SQLDatabase.close"], "k": 20}
{"task_id": "ContextCodeRetrieval/3", "query": "How can DependencyFactory create `PyCodeWriter` instance?", "truth_top_match": "automata.singletons.dependency_factory.DependencyFactory.create_py_writer", "top_k_matches": ["automata.singletons.dependency_factory.DependencyFactory.create_py_writer", "automata.tests.unit.code_writers.test_py_writer.py_writer", "automata.tests.unit.singletons.test_singletons_dependency_factory.dependency_factory", "automata.singletons.dependency_factory.DependencyFactory", "automata.tests.unit.code_writers.test_py_writer_tool.python_writer_tool_builder", "automata.tools.builders.py_writer_builder.PyCodeWriterOpenAIToolkitBuilder", "automata.singletons.dependency_factory.DependencyFactory.create_py_reader", "automata.tests.unit.code_writers.test_py_writer.test_write_and_retrieve_mock_code", "automata.code_writers.py.py_code_writer.PyCodeWriter", "automata.tools.builders.py_writer_builder.PyCodeWriterToolkitBuilder.__init__"], "k": 20}
{"task_id": "ContextCodeRetrieval/4", "query": "What method in ISymbolProvider abstract class is meant to get a sorted list of supported symbols?", "truth_top_match": "automata.symbol.symbol_base.ISymbolProvider._get_sorted_supported_symbols", "top_k_matches": ["automata.symbol.symbol_base.ISymbolProvider", "automata.context_providers.symbol_synchronization_context.SymbolProviderRegistry.get_sorted_supported_symbols", "automata.symbol.symbol_base.ISymbolProvider._get_sorted_supported_symbols", "automata.symbol.symbol_base.ISymbolProvider.get_sorted_supported_symbols", "automata.symbol_embedding.symbol_embedding_handler.SymbolEmbeddingHandler._get_sorted_supported_symbols", "automata.symbol.graph.symbol_graph.SymbolGraph._get_sorted_supported_symbols", "automata.context_providers.symbol_synchronization_context.SymbolProviderRegistry", "automata.symbol.graph.symbol_navigator.SymbolGraphNavigator.get_sorted_supported_symbols", "automata.symbol.symbol_base.ISymbolProvider.filter_symbols", "automata.context_providers.symbol_synchronization_context.SymbolProviderRegistry.synchronize"], "k": 20}
{"task_id": "ContextCodeRetrieval/5", "query": "How does the agent model select the best match from the query result?", "truth_top_match": "automata.experimental.tools.builders.agentified_search_builder.AgentifiedSearchToolkitBuilder._agent_selected_best_match", "top_k_matches": ["automata.experimental.tools.builders.agentified_search_builder.AgentifiedSearchToolkitBuilder._agent_selected_best_match", "automata.experimental.tools.builders.symbol_search_builder.SymbolSearchToolkitBuilder._symbol_agent_search_processor", "automata.experimental.tools.builders.agentified_search_builder.AgentifiedSearchToolkitBuilder._get_top_matches", "automata.experimental.tools.builders.agentified_search_builder.AgentifiedSearchToolkitBuilder._get_code_for_best_match", "automata.tests.unit.agentified_search.test_agentified_search.test_get_top_matches", "automata.experimental.tools.builders.agentified_search_builder.AgentifiedSearchToolkitBuilder", "automata.experimental.tools.builders.agentified_search_builder.AgentifiedSearchToolkitBuilder._get_docs_for_best_match", "automata.eval.agent.agent_eval.AgentEvalResult", "automata.experimental.search.symbol_search.SymbolSearch.process_query", "automata.experimental.tools.builders.document_oracle_builder.DocumentOracleToolkitBuilder._get_best_match"], "k": 20}
{"task_id": "ContextCodeRetrieval/6", "query": "What method builds the tools associated with the agentified search for the OpenAI API?", "truth_top_match": "automata.experimental.tools.builders.agentified_search_builder.AgentifiedSearchOpenAIToolkitBuilder.build_for_open_ai", "top_k_matches": ["automata.experimental.tools.builders.agentified_search_builder.AgentifiedSearchOpenAIToolkitBuilder.build_for_open_ai", "automata.experimental.tools.builders.agentified_search_builder.AgentifiedSearchOpenAIToolkitBuilder", "automata.experimental.tools.builders.agentified_search_builder.AgentifiedSearchToolkitBuilder", "automata.experimental.tools.builders.advanced_context_oracle_builder.AdvancedContextOracleOpenAIToolkitBuilder.build_for_open_ai", "automata.experimental.tools.builders.document_oracle_builder.DocumentOracleOpenAIToolkitBuilder.build_for_open_ai", "automata.experimental.tools.builders.agentified_search_builder.AgentifiedSearchToolkitBuilder.build", "automata.experimental.tools.builders.symbol_search_builder.SymbolSearchOpenAIToolkitBuilder.build_for_open_ai", "automata.experimental.tools.builders.symbol_search_builder.SymbolSearchOpenAIToolkitBuilder", "automata.tests.unit.agentified_search.test_agentified_search.test_build", "automata.experimental.tools.builders.py_interpreter.PyInterpreterOpenAIToolkitBuilder.build_for_open_ai"], "k": 20}
{"task_id": "ContextCodeRetrieval/7", "query": "What private method is used to process references between `Symbol` nodes?", "truth_top_match": "automata.symbol.graph.graph_builder.GraphBuilder._process_references", "top_k_matches": ["automata.symbol.graph.graph_builder.GraphBuilder._process_references", "automata.symbol.graph.symbol_references.ReferenceProcessor.process", "automata.symbol.graph.symbol_caller_callees.CallerCalleeProcessor.process", "automata.symbol.graph.symbol_references.ReferenceProcessor", "automata.symbol.graph.symbol_navigator.SymbolGraphNavigator.get_references_to_symbol", "automata.symbol.graph.symbol_relationships.RelationshipProcessor.process", "automata.symbol.graph.symbol_navigator.SymbolGraphNavigator._get_symbol_references_in_scope", "automata.symbol.graph.graph_builder.GraphBuilder._process_caller_callee_relationships", "automata.symbol.graph.symbol_graph.SymbolGraph.get_references_to_symbol", "automata.experimental.search.symbol_search.SymbolSearch.symbol_references"], "k": 20}
{"task_id": "ContextCodeRetrieval/8", "query": "Which method in SymbolEmbeddingHandler is used to process the embedding for a symbol?", "truth_top_match": "automata.symbol_embedding.symbol_embedding_handler.SymbolEmbeddingHandler.process_embedding", "top_k_matches": ["automata.experimental.memory_store.symbol_doc_embedding_handler.SymbolDocEmbeddingHandler", "automata.symbol_embedding.symbol_embedding_handler.SymbolEmbeddingHandler", "automata.experimental.memory_store.symbol_doc_embedding_handler.SymbolDocEmbeddingHandler.process_embedding", "automata.symbol_embedding.symbol_embedding_handler.SymbolEmbeddingHandler.process_embedding", "automata.memory_store.symbol_code_embedding_handler.SymbolCodeEmbeddingHandler", "automata.memory_store.symbol_code_embedding_handler.SymbolCodeEmbeddingHandler.process_embedding", "automata.cli.scripts.run_code_embedding.process_embeddings", "automata.embedding.embedding_base.EmbeddingHandler.process_embedding", "automata.embedding.embedding_base.EmbeddingHandler", "automata.experimental.memory_store.symbol_doc_embedding_handler.SymbolDocEmbeddingHandler._create_new_embedding"], "k": 20}
{"task_id": "ContextCodeRetrieval/9", "query": "What function creates a task with the given parameters?", "truth_top_match": "automata.core.run_handlers.create_task", "top_k_matches": ["automata.core.run_handlers.create_task", "automata.core.run_handlers.run_with_task", "automata.core.run_handlers.run_with_eval", "automata.tasks.task_executor.IAutomataTaskExecution", "automata.tasks.task_base.Task", "automata.tasks.task_executor.IAutomataTaskExecution._build_agent", "automata.tests.unit.task.test_task.test_task_inital_state", "automata.tests.unit.task.test_task_environment.test_commit_task", "automata.tests.unit.task.test_task_database.task", "automata.tasks.task_base.ITaskExecution.execute"], "k": 20}
{"task_id": "ContextCodeRetrieval/10", "query": "What method builds all search tools defined in the toolkit?", "truth_top_match": "automata.experimental.tools.builders.symbol_search_builder.SymbolSearchToolkitBuilder.build", "top_k_matches": ["automata.experimental.tools.builders.symbol_search_builder.SymbolSearchOpenAIToolkitBuilder", "automata.experimental.tools.builders.symbol_search_builder.SymbolSearchToolkitBuilder.build", "automata.experimental.tools.builders.document_oracle_builder.DocumentOracleToolkitBuilder.build", "automata.experimental.tools.builders.agentified_search_builder.AgentifiedSearchOpenAIToolkitBuilder", "automata.experimental.tools.builders.agentified_search_builder.AgentifiedSearchToolkitBuilder", "automata.experimental.tools.builders.symbol_search_builder.SymbolSearchToolkitBuilder", "automata.tests.unit.symbol.test_symbol_search.test_build", "automata.tests.unit.symbol.test_symbol_search_tool.test_build", "automata.experimental.tools.builders.agentified_search_builder.AgentifiedSearchToolkitBuilder.build", "automata.experimental.tools.builders.advanced_context_oracle_builder.AdvancedContextOracleToolkitBuilder.build"], "k": 20}
{"task_id": "ContextCodeRetrieval/11", "query": "Which method in the _SymbolParser class produces a pointer error?", "truth_top_match": "automata.symbol.symbol_parser._SymbolParser.error", "top_k_matches": ["automata.symbol.symbol_parser._SymbolParser", "automata.tests.unit.context_retriever.test_context_retriever.test_process_symbol_error", "automata.symbol.symbol_parser._SymbolParser.error", "automata.experimental.search.symbol_search.SymbolSearch.symbol_references", "automata.tests.unit.symbol.test_symbol_base.test_parsed_symbol", "automata.symbol.symbol_parser._SymbolParser.parse_descriptor", "automata.tests.unit.context_retriever.test_context_retriever.test_interface_recursion_error", "automata.tests.unit.cli.test_cli_scripts_run_doc_embedding.FakeSymbol", "automata.symbol.graph.symbol_caller_callees.CallerCalleeProcessor.process", "automata.symbol.symbol_base.Symbol"], "k": 20}
{"task_id": "ContextCodeRetrieval/12", "query": "What method is used to convert the chat message to a dictionary?", "truth_top_match": "automata.llm.providers.openai_llm.OpenAIChatMessage.to_dict", "top_k_matches": ["automata.llm.providers.openai_llm.OpenAIChatMessage.to_dict", "automata.llm.providers.openai_llm.OpenAIChatMessage", "automata.llm.llm_base.LLMChatMessage", "automata.llm.providers.openai_llm.OpenAIConversation.__init__", "automata.eval.agent.openai_function_eval.OpenAIFunctionEval.extract_action", "automata.eval.agent.code_writing_eval.CodeWritingEval.extract_action", "automata.llm.providers.openai_llm.OpenAIChatMessage.__str__", "automata.llm.providers.openai_llm.OpenAIChatCompletionProvider", "automata.eval.agent.agent_eval_composite.AgentEvalComposite.extract_action", "automata.llm.providers.openai_llm.OpenAIChatCompletionProvider._stream_message"], "k": 20}
{"task_id": "ContextCodeRetrieval/13", "query": "What method in the SymbolEmbeddingHandler is used to perform any remaining updates that do not form a complete batch?", "truth_top_match": "automata.symbol_embedding.symbol_embedding_handler.SymbolEmbeddingHandler.flush", "top_k_matches": ["automata.symbol_embedding.symbol_embedding_handler.SymbolEmbeddingHandler", "automata.symbol_embedding.symbol_embedding_handler.SymbolEmbeddingHandler.flush", "automata.embedding.embedding_base.EmbeddingHandler", "automata.experimental.memory_store.symbol_doc_embedding_handler.SymbolDocEmbeddingHandler", "automata.memory_store.symbol_code_embedding_handler.SymbolCodeEmbeddingHandler", "automata.cli.scripts.run_code_embedding.process_embeddings", "automata.memory_store.symbol_code_embedding_handler.SymbolCodeEmbeddingHandler.process_embedding", "automata.experimental.memory_store.symbol_doc_embedding_handler.SymbolDocEmbeddingHandler.process_embedding", "automata.tests.unit.symbol_embedding.test_symbol_embedding.test_update_embeddings", "automata.tests.unit.symbol_embedding.test_symbol_embedding.test_update_embedding"], "k": 20}
{"task_id": "ContextCodeRetrieval/14", "query": "What class Handles a database for `Symbol` source code embeddings?", "truth_top_match": "automata.memory_store.symbol_code_embedding_handler.SymbolCodeEmbeddingHandler", "top_k_matches": ["automata.memory_store.symbol_code_embedding_handler.SymbolCodeEmbeddingHandler", "automata.experimental.memory_store.symbol_doc_embedding_handler.SymbolDocEmbeddingHandler", "automata.symbol_embedding.symbol_embedding_builders.SymbolCodeEmbeddingBuilder", "automata.symbol_embedding.symbol_embedding_handler.SymbolEmbeddingHandler", "automata.experimental.memory_store.symbol_doc_embedding_handler.SymbolDocEmbeddingHandler._create_new_embedding", "automata.experimental.memory_store.symbol_doc_embedding_handler.SymbolDocEmbeddingHandler.process_embedding", "automata.symbol_embedding.symbol_embedding_builders.SymbolCodeEmbeddingBuilder.build", "automata.experimental.symbol_embedding.symbol_doc_embedding_builder.SymbolDocEmbeddingBuilder", "automata.memory_store.symbol_code_embedding_handler.SymbolCodeEmbeddingHandler.process_embedding", "automata.symbol_embedding.symbol_embedding_base.SymbolDocEmbedding"], "k": 20}
{"task_id": "ContextCodeRetrieval/15", "query": "Which private method is used to write the source code to disk and format it using 'black' and 'isort'?", "truth_top_match": "automata.code_writers.py.py_code_writer.PyCodeWriter._write_to_disk_and_format", "top_k_matches": ["automata.code_writers.py.py_code_writer.PyCodeWriter._write_to_disk_and_format", "automata.tests.unit.code_writers.test_py_writer.test_write_to_disk_and_format", "automata.code_writers.py.py_code_writer.PyCodeWriter", "automata.tests.unit.context_retriever.test_context_retriever.test_source_code_2", "automata.tests.unit.context_retriever.test_context_retriever.test_source_code", "automata.tests.unit.code_writers.test_py_writer.test_write_module_to_disk", "automata.tests.unit.code_writers.test_py_writer.MockCodeGenerator.generate_code", "automata.tests.unit.code_writers.test_py_writer.test_create_function_source_function", "automata.tests.unit.code_writers.test_py_writer.MockCodeGenerator", "automata.code_writers.py.py_code_writer.PyCodeWriter.create_new_module"], "k": 20}
{"task_id": "ContextCodeRetrieval/16", "query": "What function is used to recursively convert strings to dictionaries?", "truth_top_match": "automata.eval.agent.agent_eval_harness.load_payload", "top_k_matches": ["automata.eval.agent.agent_eval_harness.load_payload", "automata.llm.llm_base.FunctionCall.from_response_dict", "automata.llm.llm_base.FunctionCall.to_dict", "automata.eval.agent.agent_eval_harness.create_payload", "automata.llm.providers.openai_llm.OpenAIChatMessage.to_dict", "automata.eval.agent.agent_eval_harness.AgentEvalSetLoader.format_values", "automata.eval.tool.tool_eval_harness.ToolEvalSetLoader.format_values", "automata.llm.llm_base.FunctionCall", "automata.llm.llm_base.FunctionCall.handle_termination", "automata.core.utils.RootDict"], "k": 20}
{"task_id": "ContextCodeRetrieval/17", "query": "What method is used to add an entry to the database in JSONVectorDatabase?", "truth_top_match": "automata.core.base.database.vector_database.JSONVectorDatabase.add", "top_k_matches": ["automata.core.base.database.vector_database.JSONVectorDatabase", "automata.tests.unit.database.test_database_vector.test_save", "automata.tests.unit.database.test_database_vector.test_add_symbol", "automata.tests.unit.database.test_database_vector.test_load", "automata.tests.unit.database.test_database_vector.test_add_symbols", "automata.tests.unit.database.test_database_vector.test_lookup_symbol", "automata.symbol_embedding.vector_databases.JSONSymbolEmbeddingVectorDatabase", "automata.tests.unit.database.test_database_vector.test_delete_symbol", "automata.core.base.database.vector_database.VectorDatabaseProvider.add", "automata.core.base.database.vector_database.JSONVectorDatabase.load"], "k": 20}
{"task_id": "ContextCodeRetrieval/18", "query": "What private method finds exact line matches for a given pattern string in all modules?", "truth_top_match": "automata.experimental.search.symbol_search.SymbolSearch._find_pattern_in_modules", "top_k_matches": ["automata.experimental.search.symbol_search.SymbolSearch._find_pattern_in_modules", "automata.experimental.search.symbol_search.SymbolSearch.exact_search", "automata.tests.unit.agentified_search.test_agentified_search.test_get_code_for_best_match", "automata.experimental.scripts.run_update_tool_eval.process_modules", "automata.tests.regression.test_symbol_searcher_regression.test_exact_search", "automata.experimental.scripts.run_update_tool_eval.call_completion_provider", "automata.tests.unit.symbol.test_symbol_search.test_exact_search", "automata.tests.unit.symbol.test_symbol_search_tool.test_exact_search", "automata.tests.unit.module_loader.test_module_loader.test_load_module", "automata.tests.unit.symbol.test_symbol_utils.test_get_rankable_symbols"], "k": 20}
{"task_id": "ContextCodeRetrieval/19", "query": "What procedure is followed to reveal the value of a key to the user?", "truth_top_match": "automata.cli.env_operations.show_key_value", "top_k_matches": ["automata.cli.env_operations.show_key_value", "automata.tests.unit.cli.test_cli_env_operations.test_show_key_value", "automata.cli.env_operations.update_key_value", "automata.tests.unit.cli.test_cli_env_operations.test_delete_key_value", "automata.tests.unit.cli.test_cli_env_operations.test_update_key_value", "automata.tests.unit.context_retriever.test_context_retriever.testprocess_method", "automata.cli.env_operations.delete_key_value", "automata.tests.unit.context_retriever.test_context_retriever.test_process_symbol_source", "automata.tests.unit.cli.test_cli_env_operations.test_get_key", "automata.tests.unit.context_retriever.test_context_retriever.test_process_headline"], "k": 20}
{"task_id": "ContextCodeRetrieval/20", "query": "What function retrieves the value of an existing key from a .env file?", "truth_top_match": "automata.cli.env_operations.get_key", "top_k_matches": ["automata.cli.env_operations.get_key", "automata.tests.unit.cli.test_cli_env_operations.test_get_key", "automata.tests.unit.cli.test_cli_env_operations.test_show_key_value", "automata.tests.unit.cli.test_cli_env_operations.test_delete_key_value", "automata.cli.env_operations.delete_key_value", "automata.cli.env_operations.show_key_value", "automata.cli.env_operations.update_key_value", "automata.tests.unit.cli.test_cli_env_operations.test_update_key_value", "automata.cli.env_operations.replace_key", "automata.tests.unit.cli.test_cli_env_operations.test_replace_key"], "k": 20}
{"task_id": "ContextCodeRetrieval/21", "query": "What method is used to build tools associated with context oracle for the OpenAI API using AdvancedContextOracleOpenAIToolkitBuilder?", "truth_top_match": "automata.experimental.tools.builders.advanced_context_oracle_builder.AdvancedContextOracleOpenAIToolkitBuilder.build_for_open_ai", "top_k_matches": ["automata.experimental.tools.builders.advanced_context_oracle_builder.AdvancedContextOracleOpenAIToolkitBuilder", "automata.experimental.tools.builders.advanced_context_oracle_builder.AdvancedContextOracleToolkitBuilder", "automata.experimental.tools.builders.advanced_context_oracle_builder.AdvancedContextOracleOpenAIToolkitBuilder.build_for_open_ai", "automata.experimental.tools.builders.document_oracle_builder.DocumentOracleOpenAIToolkitBuilder", "automata.experimental.tools.builders.document_oracle_builder.DocumentOracleOpenAIToolkitBuilder.build_for_open_ai", "automata.experimental.tools.builders.advanced_context_oracle_builder.AdvancedContextOracleToolkitBuilder.build", "automata.experimental.tools.builders.document_oracle_builder.DocumentOracleToolkitBuilder.build", "automata.tests.unit.context_oracle.test_context_oracle_tool.test_build", "automata.experimental.tools.builders.agentified_search_builder.AgentifiedSearchOpenAIToolkitBuilder", "automata.agent.openai_agent.OpenAIAgentToolkitBuilder"], "k": 20}
{"task_id": "ContextCodeRetrieval/22", "query": "Which method sets the temperature setting for the agent's configuration?", "truth_top_match": "automata.config.config_base.AgentConfigBuilder.with_temperature", "top_k_matches": ["automata.config.config_base.AgentConfigBuilder.with_temperature", "automata.agent.agent.Agent._setup", "automata.tests.unit.automata_agent.test_automata_agent_builder.test_builder_provided_parameters_override_defaults", "automata.config.openai_config.OpenAIAutomataAgentConfig.setup", "automata.config.openai_config.OpenAIAutomataAgentConfig", "automata.tests.unit.automata_agent.test_automata_agent_builder.test_builder_default_config", "automata.agent.openai_agent.OpenAIAutomataAgent._setup", "automata.config.config_base.AgentConfig", "automata.tests.unit.automata_agent.test_automata_agent_builder.test_builder_accepts_all_fields", "automata.config.config_base.AgentConfigBuilder.with_verbose"], "k": 20}
{"task_id": "ContextCodeRetrieval/23", "query": "Which function returns the path to the serialized data directory?", "truth_top_match": "automata.symbol.symbol_utils.load_data_path", "top_k_matches": ["automata.symbol.symbol_utils.load_data_path", "automata.config.config_base.SerializedDataCategory", "automata.core.utils.get_embedding_data_fpath", "automata.core.utils.get_config_fpath", "automata.core.utils.get_root_py_fpath", "automata.core.utils.get_root_fpath", "automata.symbol.symbol_base.Symbol.module_path", "automata.cli.install_indexing.get_project_paths", "automata.tasks.task_base.Task._get_log_dir", "automata.tests.unit.cli.test_cli_env_operations.dotenv_path"], "k": 20}
{"task_id": "ContextCodeRetrieval/24", "query": "What property is used to retrieve the total number of partial matches?", "truth_top_match": "automata.eval.tool.tool_eval_metrics.ToolEvaluationMetrics.total_partial_matches", "top_k_matches": ["automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics.total_partial_matches", "automata.eval.tool.tool_eval_metrics.ToolEvaluationMetrics.total_partial_matches", "automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics.total_full_matches", "automata.eval.tool.tool_eval_metrics.ToolEvaluationMetrics.total_full_matches", "automata.eval.tool.tool_eval_metrics.ToolEvaluationMetrics.partial_match_rate", "automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics.partial_match_rate", "automata.eval.agent.agent_eval.AgentEvalResult.is_partial_match", "automata.eval.eval_base.EvalResult.is_partial_match", "automata.eval.tool.search_eval.SymbolSearchEvalResult.is_partial_match", "automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics.total_actions"], "k": 20}
{"task_id": "ContextCodeRetrieval/25", "query": "What method validates the type of provided value?", "truth_top_match": "automata.config.config_base.AgentConfigBuilder._validate_type", "top_k_matches": ["automata.config.config_base.AgentConfigBuilder._validate_type", "automata.tasks.task_base.TaskEnvironment.validate", "automata.symbol.graph.symbol_graph_types.SymbolGraphType", "automata.tasks.task_environment.AutomataTaskEnvironment.validate", "automata.code_writers.py.py_code_writer.PyCodeWriter.InvalidArgumentsError", "automata.tests.unit.automata_agent.test_automata_agent_builder.test_builder_invalid_input_types", "automata.tests.unit.sample_modules.sample3.MyClass", "automata.tests.conftest.embedding_type", "automata.tests.unit.symbol.test_symbol_rank.test_pagerank_config_validation", "automata.symbol.symbol_base.SymbolDescriptor.PyKind"], "k": 20}
{"task_id": "ContextCodeRetrieval/26", "query": "Which method registers a symbol provider?", "truth_top_match": "automata.context_providers.symbol_synchronization_context.SymbolProviderRegistry.register_provider", "top_k_matches": ["automata.context_providers.symbol_synchronization_context.SymbolProviderSynchronizationContext.register_provider", "automata.context_providers.symbol_synchronization_context.SymbolProviderRegistry.register_provider", "automata.context_providers.symbol_synchronization_context.SymbolProviderRegistry", "automata.context_providers.symbol_synchronization_context.SymbolProviderSynchronizationContext", "automata.singletons.dependency_factory.DependencyFactory._synchronize_provider", "automata.context_providers.symbol_synchronization_context.SymbolProviderSynchronizationContext.synchronize", "automata.symbol.symbol_base.ISymbolProvider", "automata.context_providers.symbol_synchronization_context.SymbolProviderRegistry.reset", "automata.context_providers.symbol_synchronization_context.SymbolProviderRegistry.synchronize", "automata.tests.regression.test_dependencies.test_automata_symbol_providers"], "k": 20}
{"task_id": "ContextCodeRetrieval/27", "query": "What property determines the partial match success rate?", "truth_top_match": "automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics.partial_match_rate", "top_k_matches": ["automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics.partial_match_rate", "automata.eval.tool.tool_eval_metrics.ToolEvaluationMetrics.partial_match_rate", "automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics.full_match_rate", "automata.eval.tool.tool_eval_metrics.ToolEvaluationMetrics.total_partial_matches", "automata.eval.eval_base.EvalResult.is_partial_match", "automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics.total_partial_matches", "automata.eval.tool.tool_eval_metrics.ToolEvaluationMetrics.full_match_rate", "automata.eval.agent.agent_eval.AgentEvalResult.is_partial_match", "automata.eval.tool.search_eval.SymbolSearchEvalResult.is_partial_match", "automata.eval.eval_base.EvalResult.is_full_match"], "k": 20}
{"task_id": "ContextCodeRetrieval/28", "query": "What abstract base class represents the different types of database providers?", "truth_top_match": "automata.llm.llm_base.LLMConversationDatabaseProvider", "top_k_matches": ["automata.core.base.database.vector_database.VectorDatabaseProvider", "automata.core.base.database.relational_database.RelationalDatabase", "automata.llm.llm_base.LLMConversationDatabaseProvider", "automata.core.base.database.relational_database.SQLDatabase", "automata.agent.agent.Agent.set_database_provider", "automata.core.base.database.vector_database.ChromaVectorDatabase", "automata.agent.error.AgentDatabaseError", "automata.symbol_embedding.symbol_embedding_handler.SymbolEmbeddingHandler.__init__", "automata.core.base.database.relational_database.SQLDatabase.__init__", "automata.config.config_base.LLMProvider"], "k": 20}
{"task_id": "ContextCodeRetrieval/29", "query": "Which method in automata.eval.tool.tool_eval.ToolEval extracts a list of action from the given message?", "truth_top_match": "automata.eval.tool.tool_eval.ToolEval.extract_action", "top_k_matches": ["automata.eval.agent.agent_eval_composite.AgentEvalComposite.extract_action", "automata.eval.agent.openai_function_eval.OpenAIFunctionEval.extract_action", "automata.eval.eval_base.Eval.extract_action", "automata.eval.agent.code_writing_eval.CodeWritingEval.extract_action", "automata.eval.tool.tool_eval.ToolEval.extract_action", "automata.eval.tool.tool_eval.ToolEval", "automata.eval.tool.tool_eval.ToolEval._filter_actions", "automata.eval.tool.search_eval.SymbolSearchEval", "automata.eval.agent.openai_function_eval.OpenAIFunctionEval", "automata.tests.unit.tool_eval.test_symbol_search_eval.test_symbol_search_eval_extract_action"], "k": 20}
{"task_id": "ContextCodeRetrieval/30", "query": "How to build tools associated with python interpreter for OpenAI API?", "truth_top_match": "automata.experimental.tools.builders.py_interpreter.PyInterpreterOpenAIToolkitBuilder.build_for_open_ai", "top_k_matches": ["automata.experimental.tools.builders.py_interpreter.PyInterpreterOpenAIToolkitBuilder.build_for_open_ai", "automata.experimental.tools.builders.py_interpreter.PyInterpreterOpenAIToolkitBuilder", "automata.experimental.tools.builders.advanced_context_oracle_builder.AdvancedContextOracleOpenAIToolkitBuilder.build_for_open_ai", "automata.experimental.tools.builders.document_oracle_builder.DocumentOracleOpenAIToolkitBuilder.build_for_open_ai", "automata.tools.builders.py_reader_builder.PyReaderOpenAIToolkitBuilder.build_for_open_ai", "automata.tools.builders.py_writer_builder.PyCodeWriterOpenAIToolkitBuilder.build_for_open_ai", "automata.experimental.tools.builders.agentified_search_builder.AgentifiedSearchOpenAIToolkitBuilder.build_for_open_ai", "automata.experimental.tools.builders.agentified_search_builder.AgentifiedSearchToolkitBuilder.build", "automata.tools.builders.py_writer_builder.PyCodeWriterOpenAIToolkitBuilder", "automata.experimental.tools.builders.symbol_search_builder.SymbolSearchOpenAIToolkitBuilder.build_for_open_ai"], "k": 20}
{"task_id": "ContextCodeRetrieval/31", "query": "What is the configuration class for class Tool?", "truth_top_match": "automata.tools.tool_base.Tool.Config", "top_k_matches": ["automata.tools.tool_base.Tool", "automata.tools.tool_executor.ToolExecutor", "automata.llm.providers.openai_llm.OpenAITool", "automata.agent.openai_agent.OpenAIAutomataAgent.tools", "automata.tools.tool_executor.ToolExecution", "automata.experimental.tools.builders.advanced_context_oracle_builder.AdvancedContextOracleToolkitBuilder.build", "automata.tools.tool_base.Tool.Config", "automata.tests.conftest.test_tool", "automata.experimental.tools.builders.document_oracle_builder.DocumentOracleToolkitBuilder.build", "automata.config.config_base.AgentConfig.Config"], "k": 20}
{"task_id": "ContextCodeRetrieval/32", "query": "Which class in automata.eval.tool.search_eval represents the result of a symbol search eval?", "truth_top_match": "automata.eval.tool.search_eval.SymbolSearchEvalResult", "top_k_matches": ["automata.eval.tool.search_eval.SymbolSearchEval", "automata.eval.tool.search_eval.SymbolSearchEvalResult", "automata.tests.unit.tool_eval.test_symbol_search_eval.test_symbol_search_eval_to_tool_result", "automata.eval.tool.tool_eval.ToolEvalResult", "automata.tests.unit.tool_eval.test_symbol_search_eval.symbol_search_eval", "automata.tests.unit.tool_eval.test_symbol_search_eval.test_symbol_search_eval_extract_action", "automata.tests.conftest.search_evaluator", "automata.experimental.tools.builders.symbol_search_builder.SearchTool", "automata.tests.unit.tool_eval.test_symbol_search_eval.test_generate_eval_result", "automata.eval.tool.search_eval.SymbolSearchEval.to_tool_result"], "k": 20}
{"task_id": "ContextCodeRetrieval/33", "query": "What is the Enum type used for Embedding normalization?", "truth_top_match": "automata.embedding.embedding_base.EmbeddingNormType", "top_k_matches": ["automata.embedding.embedding_base.EmbeddingNormType", "automata.config.config_base.EmbeddingDataCategory", "automata.symbol.graph.symbol_graph_types.SymbolGraphType", "automata.symbol.symbol_base.SymbolDescriptor.PyKind", "automata.embedding.embedding_base.EmbeddingSimilarityCalculator._normalize_embeddings", "automata.experimental.code_parsers.py.context_processing.context_retriever.ContextComponent", "automata.tests.conftest.embedding_type", "automata.embedding.embedding_base.Embedding", "automata.tests.unit.symbol_embedding.test_persistent_symbol_embedding.test_symbol_embedding", "automata.symbol_embedding.symbol_embedding_base.SymbolCodeEmbedding"], "k": 20}
{"task_id": "ContextCodeRetrieval/34", "query": "What method is used to update a specific entry in JSONVectorDatabase?", "truth_top_match": "automata.core.base.database.vector_database.JSONVectorDatabase.update_entry", "top_k_matches": ["automata.core.base.database.vector_database.JSONVectorDatabase", "automata.core.base.database.vector_database.JSONVectorDatabase.update_entry", "automata.symbol_embedding.vector_databases.ChromaSymbolEmbeddingVectorDatabase.update_entry", "automata.tests.unit.chroma.test_chroma_vector.test_update_database", "automata.tests.unit.database.test_database_vector.test_save", "automata.symbol_embedding.vector_databases.JSONSymbolEmbeddingVectorDatabase", "automata.tests.unit.database.test_database_vector.test_load", "automata.tests.unit.database.test_database_vector.test_lookup_symbol", "automata.tests.unit.database.test_database_vector.test_delete_symbol", "automata.tests.unit.database.test_database_vector.test_add_symbol"], "k": 20}
{"task_id": "ContextCodeRetrieval/35", "query": "What abstract base class provides the methods for implementing a task task_environment?", "truth_top_match": "automata.tasks.task_base.TaskEnvironment", "top_k_matches": ["automata.tasks.task_base.TaskEnvironment", "automata.tasks.task_base.TaskEnvironment.teardown", "automata.tasks.task_environment.AutomataTaskEnvironment", "automata.tasks.task_base.TaskEnvironment.setup", "automata.tasks.task_base.TaskEnvironment.validate", "automata.tasks.task_environment.AutomataTaskEnvironment.validate", "automata.tasks.task_environment.AutomataTaskEnvironment.reset", "automata.tasks.task_environment.AutomataTaskEnvironment.teardown", "automata.tests.conftest.task_environment", "automata.tests.unit.task.test_task.test_setup_environment"], "k": 20}
{"task_id": "ContextCodeRetrieval/36", "query": "Which builder class extends from both PyReaderToolkitBuilder and OpenAIAgentToolkitBuilder?", "truth_top_match": "automata.tools.builders.py_reader_builder.PyReaderOpenAIToolkitBuilder", "top_k_matches": ["automata.tools.builders.py_reader_builder.PyReaderOpenAIToolkitBuilder", "automata.agent.openai_agent.OpenAIAgentToolkitBuilder", "automata.tools.builders.py_reader_builder.PyReaderToolkitBuilder", "automata.tools.builders.py_writer_builder.PyCodeWriterOpenAIToolkitBuilder", "automata.experimental.tools.builders.py_interpreter.PyInterpreterOpenAIToolkitBuilder", "automata.experimental.tools.builders.py_interpreter.PyInterpreterToolkitBuilder", "automata.singletons.toolkit_registry.OpenAIAutomataAgentToolkitRegistry.get_all_builders", "automata.experimental.tools.builders.document_oracle_builder.DocumentOracleOpenAIToolkitBuilder", "automata.tools.builders.py_writer_builder.PyCodeWriterToolkitBuilder", "automata.experimental.tools.builders.advanced_context_oracle_builder.AdvancedContextOracleOpenAIToolkitBuilder"], "k": 20}
{"task_id": "ContextCodeRetrieval/37", "query": "Which method sets the session id for the agent's configuration?", "truth_top_match": "automata.config.config_base.AgentConfigBuilder.with_session_id", "top_k_matches": ["automata.config.config_base.AgentConfigBuilder.with_session_id", "automata.tests.unit.task.test_task.test_session_id_determinism", "automata.config.openai_config.OpenAIAutomataAgentConfig.setup", "automata.tests.conftest.task_w_agent_matched_session", "automata.tests.unit.task.test_task_executor.test_agent_session_id_matches_task", "automata.agent.agent.Agent._setup", "automata.memory_store.conversation_database_providers.OpenAIAutomataConversationDatabase._get_last_interaction_id", "automata.agent.openai_agent.OpenAIAutomataAgent.__init__", "automata.config.openai_config.OpenAIAutomataAgentConfig", "automata.tests.unit.automata_agent.test_automata_agent_builder.test_builder_provided_parameters_override_defaults"], "k": 20}
{"task_id": "ContextCodeRetrieval/38", "query": "What method is used to get the messages for the next completion?", "truth_top_match": "automata.llm.providers.openai_llm.OpenAIConversation.get_messages_for_next_completion", "top_k_matches": ["automata.llm.llm_base.LLMConversation.get_messages_for_next_completion", "automata.llm.providers.openai_llm.OpenAIConversation.get_messages_for_next_completion", "automata.llm.providers.openai_llm.OpenAIChatCompletionProvider.get_next_assistant_completion", "automata.llm.llm_base.LLMChatCompletionProvider.get_next_assistant_completion", "automata.llm.llm_base.LLMChatCompletionProvider", "automata.agent.openai_agent.OpenAIAutomataAgent.__next__", "automata.llm.providers.openai_llm.OpenAIChatCompletionProvider", "automata.llm.providers.openai_llm.OpenAIChatMessage.from_completion_result", "automata.llm.providers.openai_llm.OpenAIConversation.get_latest_message", "automata.llm.providers.openai_llm.OpenAIChatCompletionProvider.standalone_call"], "k": 20}
{"task_id": "ContextCodeRetrieval/39", "query": "What class loads a list of tasks from a JSON file?", "truth_top_match": "automata.eval.agent.agent_eval_harness.AgentEvalSetLoader", "top_k_matches": ["automata.eval.agent.agent_eval_harness.AgentEvalSetLoader", "automata.eval.tool.tool_eval_harness.ToolEvalSetLoader.load_json", "automata.eval.tool.tool_eval_harness.ToolEvalSetLoader", "automata.eval.agent.agent_eval_harness.AgentEvalSetLoader.load_json", "automata.eval.agent.agent_eval_harness.AgentEvalSetLoader.__init__", "automata.experimental.scripts.run_update_tool_eval.load_json_data", "automata.tasks.task_registry.AutomataTaskRegistry.get_all_tasks", "automata.core.base.database.vector_database.JSONVectorDatabase.load", "automata.tasks.task_database.AutomataAgentTaskDatabase", "automata.eval.tool.tool_eval_harness.ToolEvalSetLoader.__init__"], "k": 20}
{"task_id": "ContextCodeRetrieval/40", "query": "What property is used to retrieve the total number of full matches?", "truth_top_match": "automata.eval.tool.tool_eval_metrics.ToolEvaluationMetrics.total_full_matches", "top_k_matches": ["automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics.total_full_matches", "automata.eval.tool.tool_eval_metrics.ToolEvaluationMetrics.total_full_matches", "automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics.total_partial_matches", "automata.eval.tool.tool_eval_metrics.ToolEvaluationMetrics.total_partial_matches", "automata.eval.tool.tool_eval_metrics.ToolEvaluationMetrics.full_match_rate", "automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics.full_match_rate", "automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics.partial_match_rate", "automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics.total_actions", "automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics.total_successful_actions", "automata.eval.agent.agent_eval.AgentEvalResult.is_full_match"], "k": 20}
{"task_id": "ContextCodeRetrieval/41", "query": "Which function checks if a name is a simple identifier?", "truth_top_match": "automata.symbol.symbol_parser.is_simple_identifier", "top_k_matches": ["automata.symbol.symbol_parser.is_simple_identifier", "automata.symbol.symbol_base.SymbolDescriptor.is_simple_identifier", "automata.symbol.symbol_parser._SymbolParser.is_identifier_character", "automata.symbol.symbol_base.SymbolDescriptor.get_escaped_name", "automata.symbol.symbol_parser._SymbolParser.accept_identifier", "automata.symbol.symbol_parser.get_escaped_name", "automata.tests.unit.code_writers.test_py_writer.MockCodeGenerator._check_function_obj", "automata.tests.unit.code_writers.test_py_writer.test_create_function_source_function", "automata.eval.agent.openai_function_eval.OpenAIFunctionCallAction.__eq__", "automata.symbol.symbol_parser._SymbolParser.accept_backtick_escaped_identifier"], "k": 20}
{"task_id": "ContextCodeRetrieval/42", "query": "How are the initial rank values for each node in the graph prepared?", "truth_top_match": "automata.experimental.search.symbol_rank.SymbolRank._prepare_initial_ranks", "top_k_matches": ["automata.tests.unit.symbol.test_symbol_rank.test_prepare_initial_ranks", "automata.experimental.search.symbol_rank.SymbolRank._prepare_initial_ranks", "automata.experimental.search.symbol_rank.SymbolRank.get_ordered_ranks", "automata.experimental.search.symbol_rank.SymbolRank", "automata.tests.unit.symbol.test_symbol_rank.test_get_ranks", "automata.tests.unit.symbol.test_symbol_rank.test_get_ranks_small_graph", "automata.experimental.search.symbol_rank.SymbolRank._prepare_graph", "automata.experimental.search.symbol_search.SymbolSearch.symbol_rank", "automata.symbol.graph.symbol_graph.SymbolGraph._build_default_rankable_subgraph", "automata.symbol.graph.symbol_navigator.SymbolGraphNavigator._pre_compute_rankable_bounding_boxes"], "k": 20}
{"task_id": "ContextCodeRetrieval/43", "query": "What method in `AgentEvalComposite` generates an eval result for a given set of instructions and expected actions?", "truth_top_match": "automata.eval.agent.agent_eval_composite.AgentEvalComposite.generate_eval_result", "top_k_matches": ["automata.eval.agent.agent_eval.AgentEval", "automata.eval.agent.agent_eval_composite.AgentEvalComposite", "automata.eval.agent.agent_eval_composite.AgentEvalComposite.generate_eval_result", "automata.core.run_handlers.run_with_eval", "automata.eval.agent.agent_eval_harness.AgentEvaluationHarness.evaluate", "automata.eval.agent.agent_eval_harness.AgentEvaluationHarness", "automata.tests.regression.test_agent_end_to_end.test_action_based_eval_tasks", "automata.eval.agent.agent_eval.AgentEval.generate_eval_result", "automata.eval.tool.tool_eval.ToolEval.generate_eval_result", "automata.tests.conftest.composite_evaluator"], "k": 20}
{"task_id": "ContextCodeRetrieval/44", "query": "What method is used to add a new entry to the collection?", "truth_top_match": "automata.symbol_embedding.vector_databases.ChromaSymbolEmbeddingVectorDatabase.add", "top_k_matches": ["automata.symbol_embedding.vector_databases.ChromaSymbolEmbeddingVectorDatabase.add", "automata.core.base.database.vector_database.VectorDatabaseProvider.add", "automata.core.base.database.vector_database.ChromaVectorDatabase.add", "automata.core.base.database.vector_database.JSONVectorDatabase.add", "automata.symbol_embedding.vector_databases.ChromaSymbolEmbeddingVectorDatabase.batch_add", "automata.core.base.database.vector_database.VectorDatabaseProvider.batch_add", "automata.symbol_embedding.vector_databases.ChromaSymbolEmbeddingVectorDatabase.update_entry", "automata.core.base.database.vector_database.ChromaVectorDatabase.clear", "automata.tests.unit.database.test_database_vector.test_save", "automata.tests.unit.database.test_database_vector.test_add_symbol"], "k": 20}
{"task_id": "ContextCodeRetrieval/45", "query": "Which class provides an abstraction for evaluating an LLM's performance?", "truth_top_match": "automata.eval.agent.agent_eval.AgentEval", "top_k_matches": ["automata.eval.eval_base.Eval", "automata.eval.agent.agent_eval.AgentEval", "automata.config.config_base.LLMProvider", "automata.llm.llm_base.LLMConversation", "automata.eval.tool.search_eval.SymbolSearchEval", "automata.llm.llm_base.LLMCompletionResult", "automata.eval.agent.code_writing_eval.CodeWritingEval", "automata.config.config_base.AgentConfig.get_llm_provider", "automata.eval.eval_base.EvalResult", "automata.llm.llm_base.LLMChatCompletionProvider"], "k": 20}
{"task_id": "ContextCodeRetrieval/46", "query": "What method is used to update a specific entry in ChromaVectorDatabase?", "truth_top_match": "automata.core.base.database.vector_database.ChromaVectorDatabase.update_entry", "top_k_matches": ["automata.tests.unit.chroma.test_chroma_vector.test_update_database", "automata.core.base.database.vector_database.ChromaVectorDatabase", "automata.symbol_embedding.vector_databases.ChromaSymbolEmbeddingVectorDatabase", "automata.tests.unit.chroma.test_chroma_vector.test_vector_initialization", "automata.tests.unit.chroma.test_chroma_vector.test_clear", "automata.core.base.database.vector_database.ChromaVectorDatabase.load", "automata.core.base.database.vector_database.JSONVectorDatabase.update_entry", "automata.tests.unit.chroma.test_chroma_vector.test_delete_single_symbol", "automata.tests.unit.chroma.test_chroma_vector.test_contains", "automata.core.base.database.vector_database.JSONVectorDatabase"], "k": 20}
{"task_id": "ContextCodeRetrieval/47", "query": "What property is used to determine if a symbol search evaluation was a full match?", "truth_top_match": "automata.eval.tool.search_eval.SymbolSearchEvalResult.is_full_match", "top_k_matches": ["automata.eval.eval_base.EvalResult.is_full_match", "automata.eval.eval_base.EvalResult.is_partial_match", "automata.eval.agent.agent_eval.AgentEvalResult.is_full_match", "automata.tests.unit.tool_eval.test_symbol_search_eval.test_symbol_search_eval_result_partial_match", "automata.eval.tool.search_eval.SymbolSearchEvalResult.is_full_match", "automata.tests.unit.tool_eval.test_symbol_search_eval.test_symbol_search_eval_result", "automata.eval.tool.search_eval.SymbolSearchEval", "automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics.total_full_matches", "automata.eval.tool.tool_eval_metrics.ToolEvaluationMetrics.full_match_rate", "automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics.total_partial_matches"], "k": 20}
{"task_id": "ContextCodeRetrieval/48", "query": "What class builds tools providing an execution environment for the agent?", "truth_top_match": "automata.experimental.tools.builders.py_interpreter.PyInterpreterToolkitBuilder", "top_k_matches": ["automata.experimental.tools.builders.py_interpreter.PyInterpreterToolkitBuilder", "automata.tools.tool_executor.ToolExecutor", "automata.agent.openai_agent.OpenAIAgentToolkitBuilder", "automata.tests.unit.sample_modules.sample2.PythonAgentToolkit", "automata.experimental.tools.builders.py_interpreter.PyInterpreterOpenAIToolkitBuilder", "automata.agent.agent.AgentToolkitBuilder", "automata.tools.tool_executor.ToolExecution", "automata.experimental.tools.builders.advanced_context_oracle_builder.AdvancedContextOracleOpenAIToolkitBuilder", "automata.agent.openai_agent.OpenAIAutomataAgent", "automata.experimental.tools.builders.agentified_search_builder.AgentifiedSearchToolkitBuilder"], "k": 20}
{"task_id": "ContextCodeRetrieval/49", "query": "Which function sets up the automata task environment?", "truth_top_match": "automata.core.run_handlers.run_setup", "top_k_matches": ["automata.tests.regression.test_agent_end_to_end.automata_setup", "automata.core.run_handlers.initialize_automata", "automata.tasks.task_base.TaskEnvironment.setup", "automata.tasks.task_environment.AutomataTaskEnvironment", "automata.tests.conftest.setup", "automata.tasks.task_environment.AutomataTaskEnvironment.setup", "automata.tests.conftest.matched_setup", "automata.tasks.task_base.TaskEnvironment", "automata.tests.conftest.task_environment", "automata.core.run_handlers.run_setup"], "k": 20}
{"task_id": "ContextCodeRetrieval/50", "query": "How does the OpenAIAutomataAgentToolkitRegistry initialize and automatically import all available builders?", "truth_top_match": "automata.singletons.toolkit_registry.OpenAIAutomataAgentToolkitRegistry.initialize", "top_k_matches": ["automata.singletons.toolkit_registry.OpenAIAutomataAgentToolkitRegistry", "automata.singletons.toolkit_registry.OpenAIAutomataAgentToolkitRegistry.initialize", "automata.singletons.toolkit_registry.OpenAIAutomataAgentToolkitRegistry.get_all_builders", "automata.experimental.tools.builders.agentified_search_builder.AgentifiedSearchOpenAIToolkitBuilder", "automata.tools.builders.py_reader_builder.PyReaderOpenAIToolkitBuilder", "automata.experimental.tools.builders.symbol_search_builder.SymbolSearchOpenAIToolkitBuilder", "automata.experimental.tools.builders.advanced_context_oracle_builder.AdvancedContextOracleOpenAIToolkitBuilder", "automata.experimental.tools.builders.document_oracle_builder.DocumentOracleOpenAIToolkitBuilder", "automata.tools.builders.py_writer_builder.PyCodeWriterOpenAIToolkitBuilder", "automata.experimental.tools.builders.py_interpreter.PyInterpreterOpenAIToolkitBuilder"], "k": 20}
{"task_id": "ContextCodeRetrieval/51", "query": "Which method in the PyReader class is responsible for getting code for a specified module, class, or function/method without its docstrings?", "truth_top_match": "automata.code_parsers.py.py_reader.PyReader.get_source_code_without_docstrings", "top_k_matches": ["automata.code_parsers.py.py_reader.PyReader", "automata.code_parsers.py.py_reader.PyReader.get_source_code_without_docstrings", "automata.tools.builders.py_reader_builder.PyReaderToolkitBuilder._run_indexer_retrieve_code", "automata.code_parsers.py.py_reader.PyReader.get_source_code", "automata.code_parsers.py.py_reader.PyReader.get_docstring", "automata.tools.builders.py_reader_builder.PyReaderToolkitBuilder._run_indexer_retrieve_docstring", "automata.tests.unit.code_readers.test_py_reader.test_get_code_module", "automata.tests.unit.code_writers.test_py_writer.test_write_and_retrieve_mock_code", "automata.tools.builders.py_reader_builder.PyReaderToolkitBuilder", "automata.tests.unit.code_readers.test_py_reader.test_get_code_no_docstring_method"], "k": 20}
{"task_id": "ContextCodeRetrieval/52", "query": "What class removes docstrings from a class or function?", "truth_top_match": "automata.core.ast_handlers.DocstringRemover", "top_k_matches": ["automata.core.ast_handlers.DocstringRemover", "automata.tests.unit.sample_modules.sample.OuterClass.InnerClass", "automata.tests.unit.sample_modules.sample.OuterClass", "automata.core.ast_handlers.ImportRemover", "automata.core.ast_handlers.get_node_without_docstrings", "automata.code_writers.py.py_doc_writer.PyDocWriter", "automata.tests.unit.context_retriever.test_context_retriever.test_interface_exclude_docstrings", "automata.code_parsers.py.py_reader.PyReader.get_docstring", "automata.tests.unit.context_retriever.test_context_retriever.test_constructor_and_attributes.MyClass", "automata.code_parsers.py.py_reader.PyReader"], "k": 20}
{"task_id": "ContextCodeRetrieval/53", "query": "Which method in the DotPathMap class gets the filepath of a module given its dotpath?", "truth_top_match": "automata.code_parsers.py.dotpath_map.DotPathMap.get_module_fpath_by_dotpath", "top_k_matches": ["automata.code_parsers.py.dotpath_map.DotPathMap.get_module_fpath_by_dotpath", "automata.code_parsers.py.dotpath_map.DotPathMap.get_module_dotpath_by_fpath", "automata.singletons.py_module_loader.PyModuleLoader.fetch_existing_module_fpath_by_dotpath", "automata.code_parsers.py.dotpath_map.DotPathMap.contains_dotpath", "automata.singletons.py_module_loader.PyModuleLoader.fetch_ast_module", "automata.code_parsers.py.dotpath_map.DotPathMap", "automata.singletons.py_module_loader.PyModuleLoader.get_module_dotpath_by_fpath", "automata.code_parsers.py.dotpath_map.DotPathMap.contains_fpath", "automata.code_parsers.py.dotpath_map.DotPathMap.put_module", "automata.singletons.py_module_loader.PyModuleLoader.fetch_existing_module_dotpath"], "k": 20}
{"task_id": "ContextCodeRetrieval/54", "query": "Which method in the _SymbolParser class returns the current character in the Symbol?", "truth_top_match": "automata.symbol.symbol_parser._SymbolParser.current", "top_k_matches": ["automata.symbol.symbol_parser._SymbolParser.current", "automata.symbol.symbol_parser._SymbolParser", "automata.symbol.symbol_parser._SymbolParser.peek_next", "automata.symbol.symbol_parser._SymbolParser.parse_descriptor", "automata.symbol_embedding.symbol_embedding_base.SymbolEmbedding.symbol", "automata.symbol.symbol_parser._SymbolParser.accept_character", "automata.symbol.symbol_base.Symbol", "automata.symbol.symbol_parser.parse_symbol", "automata.symbol.graph.symbol_graph_types.SymbolGraphType", "automata.symbol.symbol_base.Symbol.from_string"], "k": 20}
{"task_id": "ContextCodeRetrieval/55", "query": "How can a task be fetched based on its recorded session id?", "truth_top_match": "automata.tasks.task_registry.AutomataTaskRegistry.fetch_task_by_id", "top_k_matches": ["automata.tasks.task_registry.AutomataTaskRegistry.fetch_task_by_id", "automata.tests.unit.task.test_task_database.test_fetch_task_by_id", "automata.tests.unit.task.test_task_database.test_get_tasks_by_query_with_sql_string", "automata.tasks.task_database.AutomataAgentTaskDatabase.contains", "automata.tests.unit.task.test_task_database.test_get_all_tasks", "automata.tests.unit.task.test_task.test_session_id_determinism", "automata.tests.unit.task.test_task_executor.test_agent_session_id_matches_task", "automata.memory_store.conversation_database_providers.OpenAIAutomataConversationDatabase._get_last_interaction_id", "automata.tests.unit.task.test_task_database.test_register_and_update_task", "automata.tasks.task_database.AutomataAgentTaskDatabase"], "k": 20}
{"task_id": "ContextCodeRetrieval/56", "query": "Which method of the task database checks if a task already exists?", "truth_top_match": "automata.tasks.task_database.AutomataAgentTaskDatabase.contains", "top_k_matches": ["automata.tasks.task_database.AutomataAgentTaskDatabase.contains", "automata.tests.unit.task.test_task_database.test_contains", "automata.tests.unit.task.test_task_database.test_insert_and_contains_task", "automata.tasks.task_database.AutomataAgentTaskDatabase", "automata.tests.unit.task.test_task_database.test_get_tasks_by_query", "automata.tests.unit.task.test_task_database.test_insert_task", "automata.tests.unit.task.test_task_database.test_register_existing_task", "automata.tests.unit.task.test_task_database.test_update_task_2", "automata.tests.unit.task.test_task_database.test_get_all_tasks", "automata.tests.unit.task.test_task_database.test_update_task"], "k": 20}
{"task_id": "ContextCodeRetrieval/57", "query": "Which method of the Python context handler is used to get the top N symbols that a given symbol depends on?", "truth_top_match": "automata.experimental.code_parsers.py.context_processing.context_handler.PyContextHandler.get_symbol_dependencies", "top_k_matches": ["automata.experimental.code_parsers.py.context_processing.context_handler.PyContextHandler", "automata.experimental.code_parsers.py.context_processing.context_handler.PyContextHandler.get_symbol_dependencies", "automata.experimental.code_parsers.py.context_processing.context_handler.PyContextHandler.get_symbol_rank_matches", "automata.symbol.graph.symbol_graph.SymbolGraph.get_symbol_dependencies", "automata.experimental.search.symbol_rank.SymbolRank.get_top_symbols", "automata.experimental.tools.builders.symbol_search_builder.SymbolSearchToolkitBuilder._symbol_references_processor", "automata.tests.unit.context_retriever.test_context_handler.test_construct_symbol_context_interface", "automata.tests.unit.context_retriever.test_context_handler.context_handler", "automata.experimental.scripts.run_update_tool_eval.process_symbol_graph", "automata.experimental.code_parsers.py.context_processing.context_handler.PyContextHandler.construct_symbol_context"], "k": 20}
{"task_id": "ContextCodeRetrieval/58", "query": "What is the abstract class for implementing an observer?", "truth_top_match": "automata.core.base.patterns.observer.Observer", "top_k_matches": ["automata.core.base.patterns.observer.Observer", "automata.llm.llm_base.LLMConversationDatabaseProvider", "automata.llm.llm_base.LLMConversation", "automata.llm.llm_base.LLMConversation.__init__", "automata.core.base.patterns.observer.Observer.update", "automata.tasks.task_base.Task.notify_observer", "automata.llm.llm_base.LLMConversation.register_observer", "automata.llm.llm_base.LLMConversation.unregister_observer", "automata.singletons.github_client.RepositoryClient", "automata.llm.llm_base.LLMConversationDatabaseProvider.update"], "k": 20}
{"task_id": "ContextCodeRetrieval/59", "query": "Which method sets the verbosity of the agent's configuration?", "truth_top_match": "automata.config.config_base.AgentConfigBuilder.with_verbose", "top_k_matches": ["automata.config.config_base.AgentConfigBuilder.with_verbose", "automata.tests.unit.automata_agent.test_automata_agent_builder.test_builder_provided_parameters_override_defaults", "automata.agent.agent.Agent._setup", "automata.config.openai_config.OpenAIAutomataAgentConfig.setup", "automata.tests.unit.automata_agent.test_automata_agent_builder.test_builder_accepts_all_fields", "automata.config.config_base.AgentConfigBuilder.with_stream", "automata.tests.unit.automata_agent.test_automata_agent_builder.test_builder_default_config", "automata.config.openai_config.OpenAIAutomataAgentConfig", "automata.config.config_base.AgentConfigBuilder.with_model", "automata.config.config_base.AgentConfig"], "k": 20}
{"task_id": "ContextCodeRetrieval/60", "query": "Which function retrieves the processed paths from the data?", "truth_top_match": "automata.experimental.scripts.run_update_tool_eval.get_processed_paths", "top_k_matches": ["automata.experimental.scripts.run_update_tool_eval.get_processed_paths", "automata.experimental.scripts.run_update_tool_eval.load_and_process_data", "automata.experimental.scripts.run_update_tool_eval.process_modules", "automata.experimental.scripts.run_update_tool_eval.process_missing_symbols", "automata.symbol.symbol_utils.load_data_path", "automata.experimental.scripts.run_update_tool_eval.filter_and_log_symbols", "automata.experimental.scripts.run_update_tool_eval.process_payload", "automata.tools.builders.py_reader_builder.PyReaderToolkitBuilder._run_indexer_retrieve_code", "automata.config.config_base.SerializedDataCategory", "automata.experimental.scripts.run_update_tool_eval.get_extra_symbols"], "k": 20}
{"task_id": "ContextCodeRetrieval/61", "query": "What operation is performed by the `load_env_vars` function in the system?", "truth_top_match": "automata.cli.env_operations.load_env_vars", "top_k_matches": ["automata.tests.unit.cli.test_cli_commands.test_configure_load_env_vars_called", "automata.tests.unit.cli.test_cli_env_operations.test_load_env_vars", "automata.cli.env_operations.load_env_vars", "automata.cli.commands.configure", "automata.tests.unit.cli.test_cli_env_operations.test_show_key_value", "automata.tests.unit.cli.test_cli_env_operations.test_update_key_value", "automata.cli.cli_utils.setup_files", "automata.cli.env_operations.update_key_value", "automata.tests.unit.cli.test_cli_env_operations.test_delete_key_value", "automata.config.openai_config.OpenAIAutomataAgentConfig._formatted_instruction"], "k": 20}
{"task_id": "ContextCodeRetrieval/62", "query": "What function does 'ITaskExecution' provide for executing a task?", "truth_top_match": "automata.tasks.task_base.ITaskExecution.execute", "top_k_matches": ["automata.tasks.task_base.ITaskExecution", "automata.tasks.task_executor.IAutomataTaskExecution", "automata.tasks.task_executor.AutomataTaskExecutor", "automata.tests.unit.task.test_task_executor.TestExecuteBehavior", "automata.tasks.task_executor.AutomataTaskExecutor.__init__", "automata.tools.tool_executor.ToolExecutor", "automata.tools.tool_executor.ToolExecution", "automata.tasks.task_base.ITaskExecution.execute", "automata.tools.tool_executor.IToolExecution", "automata.tests.unit.task.test_task_executor.test_execute_automata_task_success"], "k": 20}
{"task_id": "ContextCodeRetrieval/63", "query": "What configuration class is used for SymbolRank?", "truth_top_match": "automata.experimental.search.symbol_rank.SymbolRankConfig", "top_k_matches": ["automata.experimental.search.symbol_rank.SymbolRankConfig", "automata.experimental.search.symbol_search.SymbolSearch.symbol_rank", "automata.singletons.dependency_factory.DependencyFactory.create_symbol_rank", "automata.experimental.search.symbol_rank.SymbolRank", "automata.experimental.search.symbol_rank.SymbolRank.__init__", "automata.tests.unit.symbol.test_symbol_rank.test_prepare_initial_ranks", "automata.tests.unit.symbol.test_symbol_rank.test_get_ranks", "automata.experimental.search.symbol_search.SymbolSearch", "automata.singletons.dependency_factory.DependencyFactory.create_symbol_search", "automata.experimental.search.symbol_search.SymbolSearch.__init__"], "k": 20}
{"task_id": "ContextCodeRetrieval/64", "query": "Which method is invoked to run evaluation for a list of tasks specified in a JSON file?", "truth_top_match": "automata.cli.scripts.run_agent_eval.run_eval_harness", "top_k_matches": ["automata.cli.scripts.run_tool_eval.run_eval_harness", "automata.cli.scripts.run_agent_eval.run_eval_harness", "automata.eval.tool.tool_eval_harness.ToolEvalSetLoader", "automata.eval.agent.agent_eval_harness.AgentEvalSetLoader", "automata.eval.tool.tool_eval_harness.ToolEvalSetLoader.load_json", "automata.eval.agent.agent_eval_harness.AgentEvalSetLoader.load_json", "automata.eval.agent.agent_eval_harness.AgentEvalSetLoader.__init__", "automata.cli.commands.run_tool_eval", "automata.core.run_handlers.run_with_eval", "automata.eval.agent.agent_eval_harness.AgentEvaluationHarness.evaluate"], "k": 20}
{"task_id": "ContextCodeRetrieval/65", "query": "What function in the script is responsible for running the evaluation harness?", "truth_top_match": "automata.cli.scripts.run_tool_eval.run_eval_harness", "top_k_matches": ["automata.cli.scripts.run_agent_eval.main", "automata.cli.scripts.run_tool_eval.main", "automata.tests.conftest.agent_eval_harness", "automata.eval.tool.tool_eval_harness.ToolEvaluationHarness", "automata.tests.unit.agent_eval.test_agent_evaluation_harness_and_metrics.test_evaluation_harness_and_metrics", "automata.cli.scripts.run_agent_eval.run_eval_harness", "automata.cli.scripts.run_tool_eval.run_eval_harness", "automata.tests.unit.tool_eval.test_tool_eval_harness_and_metrics.test_tool_evaluation_harness_and_metrics", "automata.eval.agent.agent_eval_harness.AgentEvaluationHarness", "automata.cli.commands.run_agent_eval"], "k": 20}
{"task_id": "ContextCodeRetrieval/66", "query": "How does the PyDocWriter generate index files?", "truth_top_match": "automata.code_writers.py.py_doc_writer.PyDocWriter.generate_index_files", "top_k_matches": ["automata.code_writers.py.py_doc_writer.PyDocWriter.generate_index_files", "automata.code_writers.py.py_doc_writer.PyDocWriter", "automata.tests.unit.code_writers.test_py_doc_writer.test_write_documentation", "automata.code_writers.py.py_doc_writer.PyDocWriter.write_documentation", "automata.tests.unit.code_writers.test_py_doc_writer.test_generate_module_summary", "automata.code_writers.py.py_doc_writer.PyDocWriter.generate_rst_files", "automata.tests.unit.code_writers.test_py_doc_writer.test_init", "automata.tests.unit.code_writers.test_py_writer.test_write_and_retrieve_mock_code", "automata.cli.install_indexing.generate_local_indices", "automata.tests.unit.code_writers.test_py_writer.test_write_module_to_disk"], "k": 20}
{"task_id": "ContextCodeRetrieval/67", "query": "Which function is used to change the graph type in the local environment?", "truth_top_match": "automata.cli.env_operations.update_graph_type", "top_k_matches": ["automata.cli.env_operations.update_graph_type", "automata.cli.env_operations.select_graph_type", "automata.symbol.graph.symbol_graph_types.SymbolGraphType", "automata.cli.env_operations.update_key_value", "automata.experimental.scripts.run_update_tool_eval.process_symbol_graph", "automata.tasks.task_environment.EnvironmentMode", "automata.cli.env_operations.load_env_vars", "automata.tests.utils.factories.static_indices_graph_dynamic", "automata.tests.unit.symbol.test_symbol_subgraph.symbol_graph_mocked_index", "automata.cli.commands.configure"], "k": 20}
{"task_id": "ContextCodeRetrieval/68", "query": "Which method in the PyReader class is responsible for getting the docstring from the specified node?", "truth_top_match": "automata.code_parsers.py.py_reader.PyReader.get_docstring_from_node", "top_k_matches": ["automata.code_parsers.py.py_reader.PyReader.get_docstring_from_node", "automata.code_parsers.py.py_reader.PyReader.get_docstring", "automata.tests.unit.ast_utils.test_ast_utils.test_get_docstring_from_node_with_docstring", "automata.code_parsers.py.py_reader.PyReader", "automata.core.ast_handlers.get_docstring_from_node", "automata.tests.unit.ast_utils.test_ast_utils.test_get_docstring_from_node_without_docstring", "automata.tools.builders.py_reader_builder.PyReaderToolkitBuilder._run_indexer_retrieve_docstring", "automata.code_parsers.py.py_reader.PyReader.get_source_code_without_docstrings", "automata.tests.unit.code_readers.test_py_reader.test_get_docstring_from_node_no_docstring", "automata.tests.unit.code_readers.test_py_reader.test_get_docstring_from_node"], "k": 20}
{"task_id": "ContextCodeRetrieval/69", "query": "How is the similarity score between the embedding and all symbols embeddings calculated?", "truth_top_match": "automata.embedding.embedding_base.EmbeddingSimilarityCalculator._calculate_embedding_similarity", "top_k_matches": ["automata.embedding.embedding_base.EmbeddingSimilarityCalculator", "automata.experimental.search.symbol_search.SymbolSearch.get_symbol_code_similarity_results", "automata.embedding.embedding_base.EmbeddingSimilarityCalculator._calculate_embedding_similarity", "automata.embedding.embedding_base.EmbeddingSimilarityCalculator.calculate_query_similarity_dict", "automata.embedding.embedding_base.EmbeddingSimilarityCalculator.__init__", "automata.experimental.memory_store.symbol_doc_embedding_handler.SymbolDocEmbeddingHandler.process_embedding", "automata.experimental.search.symbol_search.SymbolSearch", "automata.tests.unit.chroma.test_chroma_vector.test_get_ordered_embeddings", "automata.experimental.search.symbol_search.SymbolSearch.get_symbol_rank_results", "automata.tests.unit.symbol_embedding.test_symbol_embedding.test_get_embedding"], "k": 20}
{"task_id": "ContextCodeRetrieval/70", "query": "What function is associated with the tool 'retrieve-docstring' in PyReaderToolkitBuilder?", "truth_top_match": "automata.tools.builders.py_reader_builder.PyReaderToolkitBuilder._run_indexer_retrieve_docstring", "top_k_matches": ["automata.tools.builders.py_reader_builder.PyReaderToolkitBuilder", "automata.tools.builders.py_reader_builder.PyReaderToolkitBuilder.build", "automata.tests.unit.code_readers.test_py_reader_tool.test_tool_execution", "automata.experimental.tools.builders.document_oracle_builder.DocumentOracleToolkitBuilder", "automata.tests.unit.code_readers.test_py_reader_tool.python_retriever_tool_builder", "automata.tools.builders.py_reader_builder.PyReaderOpenAIToolkitBuilder", "automata.experimental.tools.builders.document_oracle_builder.DocumentOracleToolkitBuilder.build", "automata.experimental.tools.builders.document_oracle_builder.DocumentOracleOpenAIToolkitBuilder", "automata.code_parsers.py.py_reader.PyReader", "automata.tests.unit.code_readers.test_py_reader_tool.test_init"], "k": 20}
{"task_id": "ContextCodeRetrieval/71", "query": "What is the utility class for writing Python code along Abstract Syntax Tree nodes?", "truth_top_match": "automata.code_writers.py.py_code_writer.PyCodeWriter", "top_k_matches": ["automata.code_writers.py.py_code_writer.PyCodeWriter", "automata.tools.builders.py_writer_builder.PyCodeWriterToolkitBuilder", "automata.code_parsers.py.py_reader.PyReader", "automata.tools.builders.py_writer_builder.PyCodeWriterOpenAIToolkitBuilder", "automata.code_writers.py.py_doc_writer.PyDocWriter", "automata.eval.agent.code_writing_eval.CodeWritingAction", "automata.eval.agent.code_writing_eval.CodeWritingEval", "automata.tools.builders.py_reader_builder.PyReaderToolkitBuilder", "automata.experimental.code_parsers.py.context_processing.context_retriever.SourceCodeContextComponent", "automata.code_parsers.py.py_reader.PyReader.get_source_code"], "k": 20}
{"task_id": "ContextCodeRetrieval/72", "query": "What abstract base class represents the result of an evaluation?", "truth_top_match": "automata.eval.eval_base.EvalResult", "top_k_matches": ["automata.eval.eval_base.EvalResult", "automata.eval.tool.tool_eval.ToolEvalResult", "automata.eval.agent.agent_eval.AgentEvalResult", "automata.eval.tool.search_eval.SymbolSearchEvalResult", "automata.eval.eval_base.Eval", "automata.eval.agent.agent_eval.AgentEval", "automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics", "automata.eval.tool.tool_eval.ToolEval", "automata.eval.tool.tool_eval_metrics.ToolEvaluationMetrics", "automata.eval.tool.search_eval.SymbolSearchEvalResult.__repr__"], "k": 20}
{"task_id": "ContextCodeRetrieval/73", "query": "Which class maps module dotpaths to module filepaths?", "truth_top_match": "automata.code_parsers.py.dotpath_map.DotPathMap", "top_k_matches": ["automata.code_parsers.py.dotpath_map.DotPathMap", "automata.code_parsers.py.dotpath_map.DotPathMap.get_module_fpath_by_dotpath", "automata.code_parsers.py.dotpath_map.DotPathMap.contains_dotpath", "automata.code_parsers.py.dotpath_map.DotPathMap.get_module_dotpath_by_fpath", "automata.singletons.py_module_loader.PyModuleLoader.fetch_existing_module_fpath_by_dotpath", "automata.singletons.py_module_loader.PyModuleLoader.put_module", "automata.singletons.py_module_loader.PyModuleLoader.fetch_ast_module", "automata.code_parsers.py.dotpath_map.DotPathMap.put_module", "automata.code_parsers.py.dotpath_map.DotPathMap.contains_fpath", "automata.code_parsers.py.dotpath_map.DotPathMap._build_module_dotpath_to_fpath_map"], "k": 20}
{"task_id": "ContextCodeRetrieval/74", "query": "Which method is used to get all keys in the database sorted?", "truth_top_match": "automata.symbol_embedding.vector_databases.JSONSymbolEmbeddingVectorDatabase.get_ordered_keys", "top_k_matches": ["automata.symbol_embedding.vector_databases.ChromaSymbolEmbeddingVectorDatabase.get_ordered_keys", "automata.core.base.database.vector_database.VectorDatabaseProvider.get_ordered_keys", "automata.core.base.database.vector_database.JSONVectorDatabase.get_ordered_keys", "automata.symbol_embedding.vector_databases.JSONSymbolEmbeddingVectorDatabase.get_ordered_keys", "automata.core.base.database.vector_database.ChromaVectorDatabase.get_ordered_keys", "automata.symbol_embedding.vector_databases.ChromaSymbolEmbeddingVectorDatabase.get_all_ordered_embeddings", "automata.symbol_embedding.symbol_embedding_handler.SymbolEmbeddingHandler.get_all_ordered_embeddings", "automata.symbol_embedding.vector_databases.JSONSymbolEmbeddingVectorDatabase.get_all_ordered_embeddings", "automata.core.base.database.vector_database.VectorDatabaseProvider.get_all_ordered_embeddings", "automata.core.base.database.vector_database.JSONVectorDatabase.get_all_ordered_embeddings"], "k": 20}
{"task_id": "ContextCodeRetrieval/75", "query": "What function is used to execute git commands in the local environment?", "truth_top_match": "automata.cli.install_indexing.git", "top_k_matches": ["automata.cli.install_indexing.git", "automata.singletons.github_client.GitHubClient.clone_repository", "automata.tests.unit.singletons.test_singletons_github_client.test_stage_all_changes", "automata.tests.unit.singletons.test_singletons_github_client.test_commit_and_push_changes", "automata.tests.unit.singletons.test_singletons_github_client.test_checkout_branch", "automata.tasks.task_environment.EnvironmentMode", "automata.singletons.github_client.GitHubClient.stage_all_changes", "automata.tests.unit.cli.test_cli_commands.test_configure_load_env_vars_called", "automata.cli.env_operations.update_key_value", "automata.tests.unit.singletons.test_singletons_github_client.test_clone_repository"], "k": 20}
{"task_id": "ContextCodeRetrieval/76", "query": "What class extends AgentToolkitBuilder to interact with the PythonIndexer API?", "truth_top_match": "automata.tools.builders.py_reader_builder.PyReaderToolkitBuilder", "top_k_matches": ["automata.tools.builders.py_reader_builder.PyReaderToolkitBuilder", "automata.experimental.tools.builders.py_interpreter.PyInterpreterToolkitBuilder", "automata.experimental.tools.builders.py_interpreter.PyInterpreterOpenAIToolkitBuilder", "automata.experimental.tools.builders.symbol_search_builder.SymbolSearchToolkitBuilder", "automata.tests.unit.sample_modules.sample2.PythonAgentToolkit", "automata.tools.builders.py_reader_builder.PyReaderOpenAIToolkitBuilder", "automata.tools.builders.py_writer_builder.PyCodeWriterToolkitBuilder", "automata.experimental.tools.builders.agentified_search_builder.AgentifiedSearchToolkitBuilder", "automata.experimental.tools.builders.agentified_search_builder.AgentifiedSearchOpenAIToolkitBuilder", "automata.tools.builders.py_writer_builder.PyCodeWriterOpenAIToolkitBuilder"], "k": 20}
{"task_id": "ContextCodeRetrieval/77", "query": "What abstract method gets the next assistant completion from the LLM?", "truth_top_match": "automata.llm.llm_base.LLMChatCompletionProvider.get_next_assistant_completion", "top_k_matches": ["automata.llm.llm_base.LLMChatCompletionProvider.get_next_assistant_completion", "automata.llm.llm_base.LLMChatCompletionProvider", "automata.llm.providers.openai_llm.OpenAIChatCompletionProvider.get_next_assistant_completion", "automata.agent.openai_agent.OpenAIAutomataAgent.__next__", "automata.llm.llm_base.LLMConversation.get_messages_for_next_completion", "automata.config.config_base.AgentConfig.get_llm_provider", "automata.agent.agent.Agent.__next__", "automata.agent.openai_agent.OpenAIAutomataAgent._get_next_user_response", "automata.llm.providers.openai_llm.OpenAIChatCompletionProvider", "automata.llm.llm_base.LLMCompletionResult"], "k": 20}
{"task_id": "ContextCodeRetrieval/78", "query": "What method is used to create a new branch in the repository?", "truth_top_match": "automata.singletons.github_client.RepositoryClient.create_branch", "top_k_matches": ["automata.singletons.github_client.RepositoryClient.create_branch", "automata.singletons.github_client.GitHubClient.create_branch", "automata.tests.unit.singletons.test_singletons_github_client.test_create_branch", "automata.singletons.github_client.GitHubClient.create_pull_request", "automata.singletons.github_client.RepositoryClient.create_pull_request", "automata.tests.unit.singletons.test_singletons_github_client.test_checkout_branch", "automata.singletons.github_client.GitHubClient.checkout_branch", "automata.singletons.github_client.RepositoryClient", "automata.singletons.github_client.RepositoryClient.checkout_branch", "automata.tests.unit.github.test_github_client.test_branch_exists"], "k": 20}
{"task_id": "ContextCodeRetrieval/79", "query": "What function is used to convert a symbol into its corresponding `ast.AST` object?", "truth_top_match": "automata.symbol.symbol_utils.convert_to_ast_object", "top_k_matches": ["automata.symbol.symbol_utils.convert_to_ast_object", "automata.experimental.code_parsers.py.context_processing.context_retriever.SourceCodeContextComponent.generate", "automata.experimental.code_parsers.py.context_processing.context_retriever.SourceCodeContextComponent", "automata.symbol.graph.symbol_navigator.process_symbol_bounds", "automata.tests.unit.symbol.test_symbol_utils.test_convert_to_ast_object", "automata.experimental.code_parsers.py.context_processing.context_retriever.BaseContextComponent.generate", "automata.symbol.symbol_parser._SymbolParser", "automata.symbol.symbol_parser.parse_symbol", "automata.experimental.search.symbol_search.SymbolSearch.retrieve_source_code_by_symbol", "automata.symbol.symbol_base.Symbol"], "k": 20}
{"task_id": "ContextCodeRetrieval/80", "query": "What abstract base class is used for evaluating an LLM's performance?", "truth_top_match": "automata.eval.eval_base.Eval", "top_k_matches": ["automata.eval.eval_base.Eval", "automata.eval.agent.agent_eval.AgentEval", "automata.llm.llm_base.LLMCompletionResult", "automata.llm.llm_base.LLMConversation", "automata.eval.tool.search_eval.SymbolSearchEval", "automata.eval.eval_base.EvalResult", "automata.config.config_base.LLMProvider", "automata.eval.agent.code_writing_eval.CodeWritingEval", "automata.llm.llm_base.LLMChatCompletionProvider", "automata.eval.tool.tool_eval.ToolEvalResult"], "k": 20}
{"task_id": "ContextCodeRetrieval/81", "query": "What method of ISymbolProvider instigates the ISymbolProvider instance into a synchronized state?", "truth_top_match": "automata.symbol.symbol_base.ISymbolProvider.set_synchronized", "top_k_matches": ["automata.context_providers.symbol_synchronization_context.SymbolProviderSynchronizationContext", "automata.singletons.dependency_factory.DependencyFactory._synchronize_provider", "automata.context_providers.symbol_synchronization_context.SymbolProviderSynchronizationContext.synchronize", "automata.context_providers.symbol_synchronization_context.SymbolProviderRegistry", "automata.context_providers.symbol_synchronization_context.SymbolProviderSynchronizationContext.register_provider", "automata.context_providers.symbol_synchronization_context.SymbolProviderRegistry.register_provider", "automata.symbol.symbol_base.ISymbolProvider", "automata.context_providers.symbol_synchronization_context.SymbolProviderRegistry.synchronize", "automata.tests.unit.synchronizer.test_synchronizer.test_synchronize", "automata.tests.unit.symbol.test_symbol_graph_static.sync_context"], "k": 20}
{"task_id": "ContextCodeRetrieval/82", "query": "What method extracts the coding action in CodeWritingEval?", "truth_top_match": "automata.eval.agent.code_writing_eval.CodeWritingEval.extract_action", "top_k_matches": ["automata.eval.agent.code_writing_eval.CodeWritingEval", "automata.eval.agent.code_writing_eval.CodeWritingEval.extract_action", "automata.eval.agent.code_writing_eval.CodeWritingAction", "automata.eval.agent.openai_function_eval.OpenAIFunctionEval.extract_action", "automata.eval.agent.code_writing_eval.CodeWritingAction.from_payload", "automata.eval.agent.code_writing_eval.CodeWritingEval._filter_actions", "automata.eval.agent.code_writing_eval.CodeWritingAction.__repr__", "automata.tests.unit.tool_eval.test_symbol_search_eval.test_symbol_search_eval_extract_action", "automata.eval.agent.code_writing_eval.CodeWritingAction.to_payload", "automata.eval.agent.code_writing_eval.CodeWritingEval._parse_code_snippet"], "k": 20}
{"task_id": "ContextCodeRetrieval/83", "query": "What method builds tools for OpenAI?", "truth_top_match": "automata.experimental.tools.builders.symbol_search_builder.SymbolSearchOpenAIToolkitBuilder.build_for_open_ai", "top_k_matches": ["automata.tools.builders.py_reader_builder.PyReaderOpenAIToolkitBuilder.build_for_open_ai", "automata.tools.builders.py_writer_builder.PyCodeWriterOpenAIToolkitBuilder.build_for_open_ai", "automata.experimental.tools.builders.advanced_context_oracle_builder.AdvancedContextOracleOpenAIToolkitBuilder.build_for_open_ai", "automata.experimental.tools.builders.py_interpreter.PyInterpreterOpenAIToolkitBuilder.build_for_open_ai", "automata.experimental.tools.builders.document_oracle_builder.DocumentOracleOpenAIToolkitBuilder.build_for_open_ai", "automata.experimental.tools.builders.agentified_search_builder.AgentifiedSearchOpenAIToolkitBuilder.build_for_open_ai", "automata.experimental.tools.builders.symbol_search_builder.SymbolSearchOpenAIToolkitBuilder.build_for_open_ai", "automata.agent.openai_agent.OpenAIAgentToolkitBuilder.build_for_open_ai", "automata.agent.openai_agent.OpenAIAgentToolkitBuilder", "automata.experimental.tools.builders.advanced_context_oracle_builder.AdvancedContextOracleOpenAIToolkitBuilder"], "k": 20}
{"task_id": "ContextCodeRetrieval/84", "query": "What method is used to clone a repository?", "truth_top_match": "automata.singletons.github_client.RepositoryClient.clone_repository", "top_k_matches": ["automata.tests.unit.singletons.test_singletons_github_client.test_clone_repository", "automata.singletons.github_client.GitHubClient.clone_repository", "automata.singletons.github_client.RepositoryClient", "automata.singletons.github_client.RepositoryClient.clone_repository", "automata.tests.unit.singletons.test_singletons_github_client.test_stage_all_changes", "automata.tests.unit.singletons.test_singletons_github_client.test_checkout_branch", "automata.singletons.github_client.GitHubClient", "automata.tests.unit.singletons.test_singletons_github_client.test_commit_and_push_changes", "automata.tests.unit.singletons.test_singletons_github_client.test_create_branch", "automata.singletons.github_client.GitHubClient.stage_all_changes"], "k": 20}
{"task_id": "ContextCodeRetrieval/85", "query": "What function is associated with the tool 'retrieve-code' in PyReaderToolkitBuilder?", "truth_top_match": "automata.tools.builders.py_reader_builder.PyReaderToolkitBuilder._run_indexer_retrieve_code", "top_k_matches": ["automata.tools.builders.py_reader_builder.PyReaderToolkitBuilder", "automata.tests.unit.code_readers.test_py_reader_tool.python_retriever_tool_builder", "automata.tools.builders.py_reader_builder.PyReaderToolkitBuilder.build", "automata.tests.unit.code_readers.test_py_reader_tool.test_tool_execution", "automata.tools.builders.py_reader_builder.PyReaderOpenAIToolkitBuilder", "automata.code_parsers.py.py_reader.PyReader", "automata.tests.unit.code_readers.test_py_reader_tool.test_init", "automata.tools.builders.py_reader_builder.PyReaderToolkitBuilder._run_indexer_retrieve_code", "automata.tools.builders.py_writer_builder.PyCodeWriterOpenAIToolkitBuilder", "automata.tests.unit.code_writers.test_py_writer.py_writer"], "k": 20}
{"task_id": "ContextCodeRetrieval/86", "query": "What class represents a tool used by the OpenAI agent?", "truth_top_match": "automata.llm.providers.openai_llm.OpenAITool", "top_k_matches": ["automata.llm.providers.openai_llm.OpenAITool", "automata.agent.openai_agent.OpenAIAgentToolkitBuilder", "automata.experimental.tools.builders.agentified_search_builder.AgentifiedSearchOpenAIToolkitBuilder.build_for_open_ai", "automata.agent.openai_agent.OpenAIAutomataAgent.tools", "automata.agent.openai_agent.OpenAIAutomataAgent", "automata.experimental.tools.builders.advanced_context_oracle_builder.AdvancedContextOracleOpenAIToolkitBuilder.build_for_open_ai", "automata.experimental.tools.builders.advanced_context_oracle_builder.AdvancedContextOracleOpenAIToolkitBuilder", "automata.experimental.tools.builders.document_oracle_builder.DocumentOracleOpenAIToolkitBuilder.build_for_open_ai", "automata.experimental.tools.builders.agentified_search_builder.AgentifiedSearchOpenAIToolkitBuilder", "automata.tools.builders.py_writer_builder.PyCodeWriterOpenAIToolkitBuilder.build_for_open_ai"], "k": 20}
{"task_id": "ContextCodeRetrieval/87", "query": "What function writes the result to the database?", "truth_top_match": "automata.eval.agent.agent_eval_database.AgentEvalResultDatabase.write_result", "top_k_matches": ["automata.eval.agent.agent_eval_database.AgentEvalResultDatabase.write_result", "automata.eval.agent.agent_eval_database.AgentEvalResultDatabase", "automata.tests.unit.agent_eval.test_agent_eval_database.test_eval_result_writer", "automata.tests.unit.agent_eval.test_eval_database.test_eval_result_writer", "automata.tests.unit.automata_agent.test_automata_agent.test_db_interaction", "automata.tests.unit.code_writers.test_py_writer.test_update_existing_function", "automata.tests.unit.task.test_task_database.test_update_task", "automata.tests.unit.agent_eval.test_agent_eval_actions_results.test_generate_function_eval_result_match", "automata.tests.unit.automata_agent.test_automata_database.test_persistence", "automata.tests.unit.database.test_database_sql.test_update_entry"], "k": 20}
{"task_id": "ContextCodeRetrieval/88", "query": "What class builds a `SymbolGraph` from a corresponding Index?", "truth_top_match": "automata.symbol.graph.graph_builder.GraphBuilder", "top_k_matches": ["automata.symbol.graph.graph_builder.GraphBuilder", "automata.symbol.graph.symbol_graph.SymbolGraph", "automata.symbol.graph.graph_builder.GraphBuilder.build_graph", "automata.symbol.graph.symbol_graph.SymbolGraph.__init__", "automata.tests.unit.symbol.test_symbol_graph_static.test_build_real_graph", "automata.tests.utils.factories.static_indices_graph_dynamic", "automata.tests.unit.symbol.test_symbol_graph.test_build_real_graph", "automata.symbol.graph.symbol_graph.SymbolGraph.from_graph", "automata.tests.utils.factories.static_indices_graph_static", "automata.experimental.search.symbol_search.SymbolSearch"], "k": 20}
{"task_id": "ContextCodeRetrieval/89", "query": "What class is used for handling incorrect message type exceptions?", "truth_top_match": "automata.llm.providers.openai_llm.OpenAIIncorrectMessageTypeError", "top_k_matches": ["automata.llm.providers.openai_llm.OpenAIIncorrectMessageTypeError", "automata.llm.llm_base.LLMConversation.LLMEmptyConversationError", "automata.code_writers.py.py_code_writer.PyCodeWriter.InvalidArgumentsError", "automata.llm.providers.openai_llm.OpenAIIncorrectMessageTypeError.__init__", "automata.eval.tool.tool_eval_harness.EvalLoadingError", "automata.core.base.base_error.AutomataError", "automata.eval.tool.tool_eval_harness.EvalExecutionError", "automata.tasks.task_error.TaskInstructionsError", "automata.tasks.task_error.TaskGeneralError", "automata.tools.tool_error.UnknownToolError"], "k": 20}
{"task_id": "ContextCodeRetrieval/90", "query": "What class is used to retrieve the context of a symbol in a Python project?", "truth_top_match": "automata.experimental.code_parsers.py.context_processing.context_retriever.PyContextRetriever", "top_k_matches": ["automata.experimental.code_parsers.py.context_processing.context_retriever.PyContextRetriever", "automata.experimental.code_parsers.py.context_processing.context_handler.PyContextHandler", "automata.tests.unit.context_retriever.test_context_retriever.test_process_symbol_source", "automata.tests.unit.context_retriever.test_context_retriever.test_process_symbol_interface", "automata.tests.unit.context_retriever.test_context_retriever.test_process_symbol_error", "automata.tests.unit.context_retriever.test_context_handler.test_construct_symbol_context_interface", "automata.tests.unit.context_retriever.test_context_retriever.test_source_code", "automata.tests.unit.context_retriever.test_context_handler.context_handler", "automata.tests.unit.context_retriever.test_context_retriever.test_source_code_2", "automata.tests.unit.context_retriever.test_context_retriever.test_interface_recursion_error"], "k": 20}
{"task_id": "ContextCodeRetrieval/91", "query": "What method is used to process a single payload?", "truth_top_match": "automata.experimental.scripts.run_update_tool_eval.process_payload", "top_k_matches": ["automata.experimental.scripts.run_update_tool_eval.process_payload", "automata.experimental.scripts.run_update_tool_eval.main", "automata.tests.unit.agent_eval.test_agent_eval_actions_results.test_complex_payload", "automata.eval.agent.openai_function_eval.OpenAIFunctionCallAction.from_payload", "automata.eval.agent.code_writing_eval.CodeWritingAction.from_payload", "automata.eval.eval_base.EvalResult.from_payload", "automata.eval.eval_base.parse_action_from_payload", "automata.eval.agent.agent_eval_harness.load_payload", "automata.eval.tool.search_eval.SymbolSearchAction.from_payload", "automata.eval.tool.search_eval.SymbolSearchEvalResult.from_payload"], "k": 20}
{"task_id": "ContextCodeRetrieval/92", "query": "Which method creates the specific configuration object?", "truth_top_match": "automata.config.config_base.AgentConfigBuilder.create_config", "top_k_matches": ["automata.config.config_base.AgentConfigBuilder.create_config", "automata.config.config_base.AgentConfigBuilder.from_config", "automata.config.config_base.AgentConfig.Config", "automata.config.config_base.AgentConfigBuilder.from_name", "automata.tools.tool_base.Tool.Config", "automata.config.config_base.AgentConfigBuilder.__init__", "automata.config.config_base.AgentConfigBuilder", "automata.tests.unit.automata_agent.test_automata_agent_builder.test_builder_creates_proper_instance", "automata.config.openai_config.OpenAIAutomataAgentConfigBuilder.create_config", "automata.singletons.dependency_factory.DependencyFactory.create_py_context_handler"], "k": 20}
{"task_id": "ContextCodeRetrieval/93", "query": "What method sets up the provided code and persists the context to the local execution buffer in PyInterpreter?", "truth_top_match": "automata.experimental.tools.builders.py_interpreter.PyInterpreter", "top_k_matches": ["automata.experimental.tools.builders.py_interpreter.PyInterpreter", "automata.experimental.tools.builders.py_interpreter.PyInterpreter.__init__", "automata.experimental.tools.builders.py_interpreter.PyInterpreter._execute_code", "automata.experimental.tools.builders.py_interpreter.PyInterpreter.__repr__", "automata.experimental.tools.builders.py_interpreter.PyInterpreter._attempt_execution", "automata.tests.unit.context_retriever.test_context_retriever.test_source_code", "automata.experimental.code_parsers.py.context_processing.context_retriever.PyContextRetriever", "automata.tests.unit.context_retriever.test_context_retriever.test_source_code_2", "automata.tests.unit.context_retriever.test_context_handler.context_handler", "automata.tests.unit.context_retriever.test_context_retriever.testprocess_method"], "k": 20}
{"task_id": "ContextCodeRetrieval/94", "query": "How to clear all entries in the JSONVectorDatabase?", "truth_top_match": "automata.core.base.database.vector_database.JSONVectorDatabase.clear", "top_k_matches": ["automata.core.base.database.vector_database.JSONVectorDatabase", "automata.core.base.database.vector_database.ChromaVectorDatabase.clear", "automata.core.base.database.vector_database.JSONVectorDatabase.load", "automata.core.base.database.vector_database.JSONVectorDatabase.save", "automata.tests.conftest.json_vector_db", "automata.tests.unit.database.test_database_vector.test_delete_symbol", "automata.core.base.database.vector_database.VectorDatabaseProvider.clear", "automata.symbol_embedding.vector_databases.JSONSymbolEmbeddingVectorDatabase", "automata.tests.unit.chroma.test_chroma_vector.test_clear", "automata.tests.unit.database.test_database_vector.test_save"], "k": 20}
{"task_id": "ContextCodeRetrieval/95", "query": "What interface represents the task execution behaviours?", "truth_top_match": "automata.tasks.task_base.ITaskExecution", "top_k_matches": ["automata.tasks.task_base.ITaskExecution", "automata.tests.unit.task.test_task_executor.TestExecuteBehavior", "automata.tasks.task_executor.AutomataTaskExecutor", "automata.tasks.task_executor.IAutomataTaskExecution", "automata.tasks.task_base.ITaskExecution.execute", "automata.tasks.task_base.Task", "automata.tasks.task_base.TaskEnvironment", "automata.tasks.task_base.TaskStatus", "automata.tools.tool_executor.IToolExecution", "automata.tasks.task_executor.AutomataTaskExecutor.__init__"], "k": 20}
{"task_id": "ContextCodeRetrieval/96", "query": "Which class is responsible for building advanced context oracle toolkit using OpenAI?", "truth_top_match": "automata.experimental.tools.builders.advanced_context_oracle_builder.AdvancedContextOracleOpenAIToolkitBuilder", "top_k_matches": ["automata.experimental.tools.builders.advanced_context_oracle_builder.AdvancedContextOracleOpenAIToolkitBuilder", "automata.experimental.tools.builders.advanced_context_oracle_builder.AdvancedContextOracleToolkitBuilder", "automata.experimental.tools.builders.advanced_context_oracle_builder.AdvancedContextOracleOpenAIToolkitBuilder.build_for_open_ai", "automata.experimental.tools.builders.advanced_context_oracle_builder.AdvancedContextOracleToolkitBuilder.build", "automata.experimental.tools.builders.document_oracle_builder.DocumentOracleOpenAIToolkitBuilder", "automata.experimental.tools.builders.document_oracle_builder.DocumentOracleOpenAIToolkitBuilder.build_for_open_ai", "automata.experimental.tools.builders.document_oracle_builder.DocumentOracleToolkitBuilder.build", "automata.experimental.tools.builders.document_oracle_builder.DocumentOracleToolkitBuilder", "automata.agent.openai_agent.OpenAIAgentToolkitBuilder", "automata.tests.unit.context_oracle.test_context_oracle_tool.advanced_context_oracle_tool_builder"], "k": 20}
{"task_id": "ContextCodeRetrieval/97", "query": "What abstract class provides an interface for managing repositories?", "truth_top_match": "automata.singletons.github_client.RepositoryClient", "top_k_matches": ["automata.singletons.github_client.RepositoryClient", "automata.singletons.github_client.GitHubClient", "automata.llm.llm_base.LLMConversationDatabaseProvider", "automata.core.base.database.vector_database.VectorDatabaseProvider", "automata.tasks.task_base.TaskEnvironment", "automata.core.base.database.relational_database.RelationalDatabase", "automata.singletons.github_client.GitHubClient.__init__", "automata.llm.llm_base.LLMConversation", "automata.embedding.embedding_base.EmbeddingBuilder", "automata.core.base.database.vector_database.ChromaVectorDatabase"], "k": 20}
{"task_id": "ContextCodeRetrieval/98", "query": "Which class represents a general agent error?", "truth_top_match": "automata.agent.error.AgentGeneralError", "top_k_matches": ["automata.agent.error.AgentGeneralError", "automata.agent.error.AgentResultError", "automata.tasks.task_error.TaskGeneralError", "automata.agent.error.AgentDatabaseError", "automata.agent.error.AgentStopIterationError", "automata.agent.error.AgentMaxIterError", "automata.eval.tool.tool_eval_harness.EvalExecutionError", "automata.eval.agent.code_writing_eval.CodeExecutionError", "automata.tasks.task_error.TaskInstructionsError", "automata.eval.eval_error.EvalExecutionError"], "k": 20}
{"task_id": "ContextCodeRetrieval/99", "query": "How is AgentEvalResult instance created from a dictionary using class methods?", "truth_top_match": "automata.eval.agent.agent_eval.AgentEvalResult.from_payload", "top_k_matches": ["automata.eval.agent.agent_eval.AgentEvalResult", "automata.eval.agent.agent_eval.AgentEvalResult.from_payload", "automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics", "automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics.__init__", "automata.eval.agent.agent_eval_harness.AgentEvaluationHarness.__init__", "automata.eval.eval_base.EvalResult.from_payload", "automata.eval.agent.agent_eval_database.AgentEvalResultDatabase.__init__", "automata.eval.agent.agent_eval_harness.AgentEvaluationHarness", "automata.eval.tool.search_eval.SymbolSearchEvalResult.from_payload", "automata.eval.tool.search_eval.SymbolSearchEvalResult"], "k": 20}
{"task_id": "ContextCodeRetrieval/100", "query": "What decorator is used to register an Action subclass in the ACTION_REGISTRY?", "truth_top_match": "automata.eval.eval_base.register_action", "top_k_matches": ["automata.eval.eval_base.register_action", "automata.eval.eval_base.parse_action_from_payload", "automata.eval.eval_base.Action", "automata.singletons.toolkit_registry.OpenAIAutomataAgentToolkitRegistry", "automata.singletons.toolkit_registry.OpenAIAutomataAgentToolkitRegistry.initialize", "automata.eval.tool.search_eval.SymbolSearchAction", "automata.eval.eval_base.Action.from_payload", "automata.tests.unit.task.test_task_database.task_registry", "automata.singletons.toolkit_registry.OpenAIAutomataAgentToolkitRegistry.register_tool_manager", "automata.eval.agent.openai_function_eval.OpenAIFunctionCallAction"], "k": 20}
{"task_id": "ContextCodeRetrieval/101", "query": "How do we build a subgraph of the original SymbolGraph which contains only rankable symbols?", "truth_top_match": "automata.symbol.graph.symbol_graph.SymbolGraph._build_rankable_subgraph", "top_k_matches": ["automata.symbol.graph.symbol_graph.SymbolGraph._build_rankable_subgraph", "automata.symbol.graph.symbol_graph.SymbolGraph._build_default_rankable_subgraph", "automata.cli.scripts.run_code_embedding.collect_symbols", "automata.experimental.scripts.run_update_tool_eval.process_symbol_graph", "automata.experimental.search.symbol_search.SymbolSearch.symbol_rank", "automata.experimental.search.symbol_rank.SymbolRank", "automata.singletons.dependency_factory.DependencyFactory.create_subgraph", "automata.singletons.dependency_factory.DependencyFactory.create_symbol_rank", "automata.tests.unit.symbol.test_symbol_rank.test_get_ranks_small_graph", "automata.tests.unit.symbol.test_symbol_rank.test_prepare_initial_ranks"], "k": 20}
{"task_id": "ContextCodeRetrieval/102", "query": "What is the purpose of `SQLDatabase.NullConnection`?", "truth_top_match": "automata.core.base.database.relational_database.SQLDatabase.NullConnection", "top_k_matches": ["automata.core.base.database.relational_database.SQLDatabase.NullConnection", "automata.core.base.database.relational_database.SQLDatabase.__init__", "automata.core.base.database.relational_database.SQLDatabase", "automata.core.base.database.relational_database.SQLDatabase.close", "automata.core.base.database.relational_database.SQLDatabase.NullCursor", "automata.tests.unit.database.test_database_sql.test_connect_close", "automata.tests.unit.automata_agent.test_automata_agent.test_db_connection", "automata.core.base.database.relational_database.RelationalDatabase.close", "automata.core.base.database.relational_database.RelationalDatabase.connect", "automata.core.base.database.relational_database.SQLDatabase.connect"], "k": 20}
{"task_id": "ContextCodeRetrieval/103", "query": "What class represents a conversation database for an Automata agent?", "truth_top_match": "automata.memory_store.conversation_database_providers.OpenAIAutomataConversationDatabase", "top_k_matches": ["automata.memory_store.conversation_database_providers.OpenAIAutomataConversationDatabase", "automata.agent.error.AgentDatabaseError", "automata.tasks.task_database.AutomataAgentTaskDatabase", "automata.agent.openai_agent.OpenAIAutomataAgent", "automata.memory_store.conversation_database_providers.OpenAIAutomataConversationDatabase.__init__", "automata.tasks.task_registry.AutomataTaskRegistry.__init__", "automata.tests.unit.automata_agent.test_automata_agent.test_chat_provider", "automata.llm.llm_base.LLMConversationDatabaseProvider", "automata.agent.agent.Agent", "automata.llm.providers.openai_llm.OpenAIConversation"], "k": 20}
{"task_id": "ContextCodeRetrieval/104", "query": "What abstract method is used to determine if an evaluation was a full match?", "truth_top_match": "automata.eval.eval_base.EvalResult.is_full_match", "top_k_matches": ["automata.eval.eval_base.EvalResult.is_full_match", "automata.eval.eval_base.EvalResult.is_partial_match", "automata.eval.tool.tool_eval_metrics.ToolEvaluationMetrics.full_match_rate", "automata.eval.agent.agent_eval.AgentEvalResult.is_full_match", "automata.eval.tool.search_eval.SymbolSearchEvalResult.is_full_match", "automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics.total_full_matches", "automata.eval.tool.tool_eval_metrics.ToolEvaluationMetrics.total_full_matches", "automata.eval.eval_base.EvalResult", "automata.eval.tool.search_eval.SymbolSearchEvalResult.is_partial_match", "automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics.total_partial_matches"], "k": 20}
{"task_id": "ContextCodeRetrieval/105", "query": "Which method loads the directory structure into Directory and File objects?", "truth_top_match": "automata.code_parsers.directory.DirectoryManager._load_directory_structure", "top_k_matches": ["automata.code_parsers.directory.DirectoryManager._load_directory_structure", "automata.code_parsers.directory.DirectoryManager", "automata.tests.unit.directory_manager.test_directory_manager.test_load_directory_structure", "automata.code_parsers.directory.DirectoryManager.__init__", "automata.code_parsers.directory.Directory", "automata.singletons.py_module_loader.PyModuleLoader.initialize", "automata.tests.unit.code_writers.test_py_doc_writer.test_init", "automata.singletons.py_module_loader.PyModuleLoader", "automata.tests.unit.directory_manager.test_directory_manager.test_get_subdirectories", "automata.singletons.py_module_loader.PyModuleLoader._assert_initialized"], "k": 20}
{"task_id": "ContextCodeRetrieval/106", "query": "What class represents an abstract base for different types of embeddings?", "truth_top_match": "automata.embedding.embedding_base.Embedding", "top_k_matches": ["automata.embedding.embedding_base.Embedding", "automata.embedding.embedding_base.EmbeddingVectorProvider", "automata.embedding.embedding_base.EmbeddingBuilder", "automata.symbol_embedding.symbol_embedding_base.SymbolEmbedding", "automata.embedding.embedding_base.EmbeddingHandler", "automata.symbol_embedding.vector_databases.IEmbeddingLookupProvider", "automata.symbol_embedding.symbol_embedding_handler.SymbolEmbeddingHandler", "automata.llm.providers.openai_llm.OpenAIEmbeddingProvider", "automata.embedding.embedding_base.EmbeddingNormType", "automata.symbol_embedding.symbol_embedding_handler.SymbolEmbeddingHandler.__init__"], "k": 20}
{"task_id": "ContextCodeRetrieval/107", "query": "Which method in the OpenAI agent is responsible for setting the database provider for the agent?", "truth_top_match": "automata.agent.openai_agent.OpenAIAutomataAgent.set_database_provider", "top_k_matches": ["automata.agent.agent.Agent.set_database_provider", "automata.agent.openai_agent.OpenAIAutomataAgent.set_database_provider", "automata.agent.error.AgentDatabaseError", "automata.config.openai_config.OpenAIAutomataAgentConfig.get_llm_provider", "automata.tasks.task_registry.AutomataTaskRegistry.__init__", "automata.tests.unit.automata_agent.test_automata_agent.test_chat_provider", "automata.tests.unit.automata_agent.test_automata_database.test_init", "automata.tests.unit.automata_agent.test_automata_agent.test_agent_saves_messages_to_database", "automata.config.config_base.AgentConfig.Config", "automata.agent.openai_agent.OpenAIAutomataAgent"], "k": 20}
{"task_id": "ContextCodeRetrieval/108", "query": "Which class evaluates OpenAI messages for function call actions?", "truth_top_match": "automata.eval.agent.openai_function_eval.OpenAIFunctionEval", "top_k_matches": ["automata.eval.agent.openai_function_eval.OpenAIFunctionEval", "automata.eval.agent.openai_function_eval.OpenAIFunctionCallAction", "automata.eval.agent.openai_function_eval.OpenAIFunctionEval.extract_action", "automata.llm.providers.openai_llm.OpenAIChatMessage", "automata.eval.agent.code_writing_eval.CodeWritingEval.extract_action", "automata.eval.agent.openai_function_eval.OpenAIFunctionCallAction.from_payload", "automata.llm.providers.openai_llm.OpenAIFunction", "automata.eval.agent.code_writing_eval.CodeWritingEval", "automata.llm.providers.openai_llm.OpenAIChatCompletionResult", "automata.eval.agent.openai_function_eval.OpenAIFunctionCallAction.__repr__"], "k": 20}
{"task_id": "ContextCodeRetrieval/109", "query": "What method is used to provide chat messages to the OpenAI API?", "truth_top_match": "automata.llm.providers.openai_llm.OpenAIChatCompletionProvider", "top_k_matches": ["automata.llm.providers.openai_llm.OpenAIChatCompletionProvider", "automata.llm.providers.openai_llm.OpenAIConversation", "automata.llm.providers.openai_llm.OpenAIConversation.__init__", "automata.llm.providers.openai_llm.OpenAIChatMessage", "automata.llm.providers.openai_llm.OpenAIChatCompletionProvider._stream_message", "automata.tests.unit.task.test_task_executor.mock_openai_response_with_completion_message", "automata.tests.unit.automata_agent.test_automata_agent.mock_openai_response_with_completion_message", "automata.tests.unit.automata_agent.test_automata_agent.test_run_with_completion_message", "automata.llm.providers.openai_llm.OpenAIChatCompletionProvider.get_next_assistant_completion", "automata.tests.unit.automata_agent.test_automata_agent.test_agent_saves_messages_to_database"], "k": 20}
{"task_id": "ContextCodeRetrieval/110", "query": "What Enum represents the different statuses a Task can have?", "truth_top_match": "automata.tasks.task_base.TaskStatus", "top_k_matches": ["automata.tasks.task_base.TaskStatus", "automata.tasks.task_base.Task.status", "automata.experimental.code_parsers.py.context_processing.context_retriever.ContextComponent", "automata.agent.agent.AgentToolkitNames", "automata.symbol.graph.symbol_graph_types.SymbolGraphType", "automata.tasks.task_environment.EnvironmentMode", "automata.symbol.symbol_base.SymbolDescriptor.PyKind", "automata.tasks.task_error.TaskStateError", "automata.experimental.tools.builders.symbol_search_builder.SearchTool", "automata.tasks.task_base.Task.__str__"], "k": 20}
{"task_id": "ContextCodeRetrieval/111", "query": "Which method creates an AutomataAgentConfig instance from the provided arguments?", "truth_top_match": "automata.config.openai_config.OpenAIAutomataAgentConfigBuilder.create_from_args", "top_k_matches": ["automata.config.openai_config.OpenAIAutomataAgentConfigBuilder.create_from_args", "automata.config.openai_config.OpenAIAutomataAgentConfigBuilder", "automata.tests.unit.automata_agent.test_automata_agent_builder.test_builder_creates_proper_instance", "automata.tasks.task_executor.IAutomataTaskExecution._build_agent", "automata.tests.conftest.automata_agent", "automata.config.openai_config.OpenAIAutomataAgentConfigBuilder.create_config", "automata.tests.conftest.automata_agent_config_builder", "automata.config.openai_config.OpenAIAutomataAgentConfig", "automata.config.openai_config.OpenAIAutomataAgentConfig.load", "automata.tests.unit.automata_agent.test_automata_agent.test_agent_initialization"], "k": 20}
{"task_id": "ContextCodeRetrieval/112", "query": "What enumeration does the module define?", "truth_top_match": "automata.symbol.graph.symbol_graph_types.SymbolGraphType", "top_k_matches": ["automata.experimental.code_parsers.py.context_processing.context_retriever.ContextComponent", "automata.symbol.symbol_base.SymbolDescriptor.PyKind", "automata.config.config_base.EmbeddingDataCategory", "automata.config.config_base.LLMProvider", "automata.config.config_base.InstructionConfigVersion", "automata.embedding.embedding_base.EmbeddingNormType", "automata.agent.agent.AgentToolkitNames", "automata.tasks.task_base.TaskStatus", "automata.symbol.graph.symbol_graph_types.SymbolGraphType", "automata.tasks.task_environment.EnvironmentMode"], "k": 20}
{"task_id": "ContextCodeRetrieval/113", "query": "What function is used to generate local indices?", "truth_top_match": "automata.cli.install_indexing.generate_local_indices", "top_k_matches": ["automata.cli.install_indexing.generate_local_indices", "automata.cli.commands.install_indexing", "automata.tests.unit.symbol.test_symbol_graph_static.sync_context", "automata.tests.unit.symbol.test_symbol_graph.sync_context", "automata.tests.utils.factories.static_indices_graph_dynamic", "automata.tests.unit.symbol.test_symbol_graph_static.test_build_real_graph", "automata.tests.unit.symbol.test_symbol_graph.test_build_real_graph_and_subgraph", "automata.tests.unit.symbol.test_symbol_graph_static.test_build_real_graph_and_subgraph", "automata.tests.unit.symbol.test_symbol_graph.test_build_real_graph", "automata.cli.install_indexing.install_indexing"], "k": 20}
{"task_id": "ContextCodeRetrieval/114", "query": "How can we retrieve all items from the PyModuleLoader map?", "truth_top_match": "automata.singletons.py_module_loader.PyModuleLoader.items", "top_k_matches": ["automata.tests.unit.module_loader.test_module_loader.test_get_items", "automata.singletons.py_module_loader.PyModuleLoader.items", "automata.singletons.py_module_loader.PyModuleLoader", "automata.tests.unit.task.test_task_executor.module_loader", "automata.tests.unit.module_loader.test_module_loader.test_dotpath_map", "automata.singletons.py_module_loader.PyModuleLoader.reset", "automata.tests.unit.code_writers.test_py_writer.module_loader", "automata.singletons.py_module_loader.PyModuleLoader._load_all_modules", "automata.tests.unit.code_readers.test_py_reader.module_loader", "automata.tests.unit.code_readers.test_py_reader_tool.module_loader"], "k": 20}
{"task_id": "ContextCodeRetrieval/115", "query": "Which method allows to get the sorted list of supported symbols?", "truth_top_match": "automata.symbol.symbol_base.ISymbolProvider.get_sorted_supported_symbols", "top_k_matches": ["automata.context_providers.symbol_synchronization_context.SymbolProviderRegistry.get_sorted_supported_symbols", "automata.symbol.symbol_base.ISymbolProvider.get_sorted_supported_symbols", "automata.symbol_embedding.symbol_embedding_handler.SymbolEmbeddingHandler._get_sorted_supported_symbols", "automata.symbol.graph.symbol_graph.SymbolGraph._get_sorted_supported_symbols", "automata.symbol.symbol_base.ISymbolProvider._get_sorted_supported_symbols", "automata.symbol.graph.symbol_navigator.SymbolGraphNavigator.get_sorted_supported_symbols", "automata.symbol.symbol_base.ISymbolProvider", "automata.tests.unit.symbol.test_symbol_graph.test_get_all_symbols", "automata.cli.scripts.run_code_embedding.collect_symbols", "automata.tests.unit.symbol.test_symbol_graph_static.test_get_all_symbols"], "k": 20}
{"task_id": "ContextCodeRetrieval/116", "query": "What abstract method is used to extract a list of action from the given message in the Eval class?", "truth_top_match": "automata.eval.eval_base.Eval.extract_action", "top_k_matches": ["automata.eval.agent.agent_eval_composite.AgentEvalComposite.extract_action", "automata.eval.eval_base.Eval.extract_action", "automata.eval.agent.openai_function_eval.OpenAIFunctionEval.extract_action", "automata.eval.tool.tool_eval.ToolEval.extract_action", "automata.eval.agent.code_writing_eval.CodeWritingEval.extract_action", "automata.eval.agent.openai_function_eval.OpenAIFunctionEval", "automata.eval.tool.tool_eval.ToolEval", "automata.eval.eval_base.Eval", "automata.eval.tool.tool_eval.ToolEval._filter_actions", "automata.eval.agent.agent_eval.AgentEval.process_result"], "k": 20}
{"task_id": "ContextCodeRetrieval/117", "query": "What class extends the PyCodeWriterToolkitBuilder for usage with the OpenAI toolkit?", "truth_top_match": "automata.tools.builders.py_writer_builder.PyCodeWriterOpenAIToolkitBuilder", "top_k_matches": ["automata.tools.builders.py_writer_builder.PyCodeWriterOpenAIToolkitBuilder", "automata.tools.builders.py_writer_builder.PyCodeWriterToolkitBuilder", "automata.experimental.tools.builders.py_interpreter.PyInterpreterOpenAIToolkitBuilder", "automata.tools.builders.py_reader_builder.PyReaderOpenAIToolkitBuilder", "automata.experimental.tools.builders.py_interpreter.PyInterpreterToolkitBuilder", "automata.tools.builders.py_reader_builder.PyReaderToolkitBuilder", "automata.experimental.tools.builders.advanced_context_oracle_builder.AdvancedContextOracleOpenAIToolkitBuilder", "automata.experimental.tools.builders.document_oracle_builder.DocumentOracleOpenAIToolkitBuilder", "automata.agent.openai_agent.OpenAIAgentToolkitBuilder", "automata.experimental.tools.builders.symbol_search_builder.SymbolSearchOpenAIToolkitBuilder"], "k": 20}
{"task_id": "ContextCodeRetrieval/118", "query": "How can an Action instance be created from a dictionary?", "truth_top_match": "automata.eval.eval_base.Action.from_payload", "top_k_matches": ["automata.eval.eval_base.Action.from_payload", "automata.eval.eval_base.parse_action_from_payload", "automata.eval.eval_base.Action", "automata.eval.tool.search_eval.SymbolSearchEvalResult.from_payload", "automata.eval.eval_base.Action.to_payload", "automata.eval.agent.openai_function_eval.OpenAIFunctionCallAction.from_payload", "automata.eval.agent.openai_function_eval.OpenAIFunctionCallAction", "automata.eval.agent.code_writing_eval.CodeWritingAction.from_payload", "automata.eval.agent.agent_eval.AgentEvalResult.from_payload", "automata.eval.tool.tool_eval.ToolEvalResult.__init__"], "k": 20}
{"task_id": "ContextCodeRetrieval/119", "query": "What function gets the extra symbols?", "truth_top_match": "automata.experimental.scripts.run_update_tool_eval.get_extra_symbols", "top_k_matches": ["automata.experimental.scripts.run_update_tool_eval.get_extra_symbols", "automata.tests.unit.symbol.test_symbol_utils.test_get_rankable_symbols", "automata.tests.unit.tool_eval.test_symbol_search_eval.test_symbol_search_eval_extract_action", "automata.tests.conftest.symbols", "automata.experimental.scripts.run_update_tool_eval.filter_and_log_symbols", "automata.symbol.symbol_parser._SymbolParser.peek_next", "automata.tests.unit.chroma.test_chroma_vector.test_get_all_symbols", "automata.symbol.graph.symbol_graph.SymbolGraph._get_sorted_supported_symbols", "automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics.total_extra_actions", "automata.symbol.graph.symbol_caller_callees.CallerCalleeProcessor.process"], "k": 20}
{"task_id": "ContextCodeRetrieval/120", "query": "What property determines the full match success rate?", "truth_top_match": "automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics.full_match_rate", "top_k_matches": ["automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics.full_match_rate", "automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics.partial_match_rate", "automata.eval.tool.tool_eval_metrics.ToolEvaluationMetrics.full_match_rate", "automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics.total_full_matches", "automata.eval.eval_base.EvalResult.is_full_match", "automata.eval.tool.tool_eval_metrics.ToolEvaluationMetrics.total_full_matches", "automata.eval.agent.agent_eval.AgentEvalResult.is_full_match", "automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics.total_partial_matches", "automata.eval.tool.tool_eval_metrics.ToolEvaluationMetrics.partial_match_rate", "automata.eval.tool.search_eval.SymbolSearchEvalResult.is_full_match"], "k": 20}
{"task_id": "ContextCodeRetrieval/121", "query": "Which static method of the AutomataTaskExecutor class accomplishes the exponential backoff strategy?", "truth_top_match": "automata.tasks.task_executor.AutomataTaskExecutor._exponential_backoff", "top_k_matches": ["automata.tasks.task_executor.AutomataTaskExecutor", "automata.tasks.task_executor.AutomataTaskExecutor.execute", "automata.tasks.task_executor.IAutomataTaskExecution.execute", "automata.tasks.task_executor.AutomataTaskExecutor._exponential_backoff", "automata.tasks.task_executor.IAutomataTaskExecution", "automata.tasks.task_error.TaskStateError", "automata.tasks.task_error.TaskGeneralError", "automata.tests.unit.task.test_task_executor.test_execute_automata_task_success", "automata.agent.error.AgentMaxIterError", "automata.tests.unit.task.test_task_executor.test_execute_automata_task_fail"], "k": 20}
{"task_id": "ContextCodeRetrieval/122", "query": "Which method is used to perform any remaining updates?", "truth_top_match": "automata.embedding.embedding_base.EmbeddingHandler.flush", "top_k_matches": ["automata.symbol_embedding.symbol_embedding_handler.SymbolEmbeddingHandler.flush", "automata.embedding.embedding_base.EmbeddingHandler.flush", "automata.core.base.database.vector_database.ChromaVectorDatabase.load", "automata.tests.unit.sample_modules.sample3.MyClass.my_method", "automata.core.base.database.vector_database.ChromaVectorDatabase.save", "automata.tests.unit.context_retriever.test_context_retriever.test_constructor_and_attributes.MyClass.another_test", "automata.tasks.task_database.AutomataAgentTaskDatabase.update_task", "automata.core.base.database.vector_database.JSONVectorDatabase.batch_update", "automata.core.base.patterns.observer.Observer.update", "automata.cli.env_operations.update_key_value"], "k": 20}
{"task_id": "ContextCodeRetrieval/123", "query": "What class extends SymbolSearchToolkitBuilder for openAI?", "truth_top_match": "automata.experimental.tools.builders.symbol_search_builder.SymbolSearchOpenAIToolkitBuilder", "top_k_matches": ["automata.experimental.tools.builders.symbol_search_builder.SymbolSearchOpenAIToolkitBuilder", "automata.experimental.tools.builders.symbol_search_builder.SymbolSearchToolkitBuilder", "automata.experimental.tools.builders.agentified_search_builder.AgentifiedSearchToolkitBuilder", "automata.experimental.tools.builders.agentified_search_builder.AgentifiedSearchOpenAIToolkitBuilder", "automata.experimental.tools.builders.advanced_context_oracle_builder.AdvancedContextOracleOpenAIToolkitBuilder", "automata.experimental.tools.builders.document_oracle_builder.DocumentOracleToolkitBuilder", "automata.experimental.tools.builders.advanced_context_oracle_builder.AdvancedContextOracleToolkitBuilder", "automata.experimental.tools.builders.document_oracle_builder.DocumentOracleOpenAIToolkitBuilder", "automata.agent.openai_agent.OpenAIAgentToolkitBuilder", "automata.tools.builders.py_reader_builder.PyReaderOpenAIToolkitBuilder"], "k": 20}
{"task_id": "ContextCodeRetrieval/124", "query": "What class is used to create a vector database that saves into a Chroma db?", "truth_top_match": "automata.symbol_embedding.vector_databases.ChromaSymbolEmbeddingVectorDatabase", "top_k_matches": ["automata.core.base.database.vector_database.ChromaVectorDatabase", "automata.symbol_embedding.vector_databases.ChromaSymbolEmbeddingVectorDatabase", "automata.tests.unit.chroma.test_chroma_vector.test_vector_initialization", "automata.tests.conftest.chroma_vector_db", "automata.core.base.database.vector_database.JSONVectorDatabase", "automata.core.base.database.vector_database.ChromaVectorDatabase.save", "automata.core.base.database.vector_database.ChromaVectorDatabase.load", "automata.tests.conftest.chroma_vector_db_persistent", "automata.tests.unit.symbol_embedding.test_symbol_embedding.mock_db", "automata.tests.unit.chroma.test_chroma_vector.test_update_database"], "k": 20}
{"task_id": "ContextCodeRetrieval/125", "query": "Which method loads the config for the agent?", "truth_top_match": "automata.config.config_base.AgentConfig.load", "top_k_matches": ["automata.config.config_base.AgentConfig.load", "automata.config.openai_config.OpenAIAutomataAgentConfig.load", "automata.tests.unit.automata_agent.test_automata_agent_builder.test_config_loading_different_versions", "automata.config.config_base.AgentConfig", "automata.config.openai_config.OpenAIAutomataAgentConfig", "automata.config.config_base.AgentConfig._load_automata_yaml_config", "automata.config.openai_config.OpenAIAutomataAgentConfigBuilder.create_config", "automata.config.config_base.AgentConfigBuilder.from_config", "automata.tests.conftest.automata_agent_config_builder", "automata.config.config_base.AgentConfigBuilder.from_name"], "k": 20}
{"task_id": "ContextCodeRetrieval/126", "query": "What function processes symbol_embeddings?", "truth_top_match": "automata.cli.scripts.run_code_embedding.process_embeddings", "top_k_matches": ["automata.experimental.memory_store.symbol_doc_embedding_handler.SymbolDocEmbeddingHandler.process_embedding", "automata.cli.scripts.run_code_embedding.process_embeddings", "automata.symbol_embedding.symbol_embedding_handler.SymbolEmbeddingHandler.process_embedding", "automata.embedding.embedding_base.EmbeddingHandler.process_embedding", "automata.memory_store.symbol_code_embedding_handler.SymbolCodeEmbeddingHandler.process_embedding", "automata.tests.unit.cli.test_cli_scripts_run_code_embedding.test_process_embeddings", "automata.experimental.memory_store.symbol_doc_embedding_handler.SymbolDocEmbeddingHandler", "automata.tests.unit.cli.test_cli_scripts_run_code_embedding.test_process_embeddings_exception", "automata.memory_store.symbol_code_embedding_handler.SymbolCodeEmbeddingHandler", "automata.symbol_embedding.symbol_embedding_handler.SymbolEmbeddingHandler"], "k": 20}
{"task_id": "ContextCodeRetrieval/127", "query": "Which method is used to stage all changes in the repository?", "truth_top_match": "automata.singletons.github_client.RepositoryClient.stage_all_changes", "top_k_matches": ["automata.singletons.github_client.GitHubClient.stage_all_changes", "automata.tests.unit.singletons.test_singletons_github_client.test_stage_all_changes", "automata.singletons.github_client.RepositoryClient.stage_all_changes", "automata.singletons.github_client.GitHubClient.commit_and_push_changes", "automata.tests.unit.singletons.test_singletons_github_client.test_commit_and_push_changes", "automata.singletons.github_client.RepositoryClient.commit_and_push_changes", "automata.singletons.github_client.RepositoryClient", "automata.tests.unit.singletons.test_singletons_github_client.test_clone_repository", "automata.tests.unit.singletons.test_singletons_github_client.test_checkout_branch", "automata.tests.unit.task.test_task_environment.test_commit_task"], "k": 20}
{"task_id": "ContextCodeRetrieval/128", "query": "What method is used to create a chat message from a completion result?", "truth_top_match": "automata.llm.providers.openai_llm.OpenAIChatMessage.from_completion_result", "top_k_matches": ["automata.llm.providers.openai_llm.OpenAIChatMessage.from_completion_result", "automata.llm.providers.openai_llm.OpenAIChatCompletionResult", "automata.llm.providers.openai_llm.OpenAIChatMessage", "automata.llm.providers.openai_llm.OpenAIChatCompletionProvider", "automata.llm.providers.openai_llm.OpenAIChatCompletionResult.from_args", "automata.llm.llm_base.LLMChatCompletionProvider", "automata.llm.providers.openai_llm.OpenAIChatCompletionProvider.get_next_assistant_completion", "automata.llm.providers.openai_llm.OpenAIChatCompletionProvider.standalone_call", "automata.tests.unit.task.test_task_executor.mock_openai_response_with_completion_message", "automata.tests.unit.automata_agent.test_automata_agent.mock_openai_response_with_completion_message"], "k": 20}
{"task_id": "ContextCodeRetrieval/129", "query": "Which method in automata.eval.tool.search_eval.SymbolSearchEval extracts the search action implicitly?", "truth_top_match": "automata.eval.tool.search_eval.SymbolSearchEval.extract_action", "top_k_matches": ["automata.eval.tool.search_eval.SymbolSearchEval", "automata.tests.unit.tool_eval.test_symbol_search_eval.test_symbol_search_eval_extract_action", "automata.eval.tool.search_eval.SymbolSearchEval.extract_action", "automata.tests.unit.tool_eval.test_symbol_search_eval.test_symbol_search_eval_to_tool_result", "automata.tests.unit.tool_eval.test_symbol_search_eval.test_symbol_search_eval_result", "automata.tests.unit.tool_eval.test_symbol_search_eval.test_symbol_search_action", "automata.eval.tool.search_eval.SymbolSearchEvalResult", "automata.tests.unit.tool_eval.test_symbol_search_eval.test_symbol_search_eval_result_partial_match", "automata.tests.conftest.search_evaluator", "automata.tests.unit.tool_eval.test_symbol_search_eval.test_symbol_search_eval_result_from_payload"], "k": 20}
{"task_id": "ContextCodeRetrieval/130", "query": "What method of PyInterpreter is used to execute the provided code?", "truth_top_match": "automata.experimental.tools.builders.py_interpreter.PyInterpreter._attempt_execution", "top_k_matches": ["automata.experimental.tools.builders.py_interpreter.PyInterpreter", "automata.experimental.tools.builders.py_interpreter.PyInterpreter.__repr__", "automata.experimental.tools.builders.py_interpreter.PyInterpreter._execute_code", "automata.experimental.tools.builders.py_interpreter.PyInterpreter.__init__", "automata.experimental.tools.builders.py_interpreter.PyInterpreterToolkitBuilder.__init__", "automata.experimental.tools.builders.py_interpreter.PyInterpreter._attempt_execution", "automata.experimental.tools.builders.py_interpreter.PyInterpreterOpenAIToolkitBuilder", "automata.eval.agent.code_writing_eval.CodeWritingAction.__repr__", "automata.code_parsers.py.py_reader.PyReader", "automata.tests.unit.context_retriever.test_context_retriever.test_source_code_2"], "k": 20}
{"task_id": "ContextCodeRetrieval/131", "query": "Which private method in the OpenAI agent is responsible for generating a user message based on the assistant's message?", "truth_top_match": "automata.agent.openai_agent.OpenAIAutomataAgent._get_next_user_response", "top_k_matches": ["automata.agent.openai_agent.OpenAIAutomataAgent._get_next_user_response", "automata.llm.providers.openai_llm.OpenAIChatCompletionProvider.get_next_assistant_completion", "automata.tests.unit.automata_agent.test_automata_agent.test_build_initial_messages", "automata.llm.providers.openai_llm.OpenAIChatCompletionProvider", "automata.llm.providers.openai_llm.OpenAIChatCompletionProvider._stream_message", "automata.agent.openai_agent.OpenAIAutomataAgent", "automata.tests.unit.task.test_task_executor.mock_openai_response_with_completion_message", "automata.tests.unit.automata_agent.test_automata_agent.mock_openai_response_with_completion_message", "automata.tests.unit.agent_eval.conftest.mock_openai_response_with_function_completion_message_final", "automata.agent.openai_agent.OpenAIAutomataAgent.agent_responses"], "k": 20}
{"task_id": "ContextCodeRetrieval/132", "query": "What concrete class provides a vector database that saves into a JSON file?", "truth_top_match": "automata.core.base.database.vector_database.JSONVectorDatabase", "top_k_matches": ["automata.core.base.database.vector_database.JSONVectorDatabase", "automata.symbol_embedding.vector_databases.JSONSymbolEmbeddingVectorDatabase", "automata.core.base.database.vector_database.JSONVectorDatabase.save", "automata.tests.unit.database.test_database_vector.test_save", "automata.tests.unit.database.test_database_vector.test_load", "automata.core.base.database.vector_database.JSONVectorDatabase.load", "automata.core.base.database.vector_database.ChromaVectorDatabase", "automata.tests.conftest.json_vector_db", "automata.core.base.database.vector_database.VectorDatabaseProvider", "automata.symbol_embedding.vector_databases.ChromaSymbolEmbeddingVectorDatabase"], "k": 20}
{"task_id": "ContextCodeRetrieval/133", "query": "What class is designed to build agent configurations?", "truth_top_match": "automata.config.config_base.AgentConfigBuilder", "top_k_matches": ["automata.config.config_base.AgentConfig", "automata.config.config_base.AgentConfigBuilder.build", "automata.config.openai_config.OpenAIAutomataAgentConfig", "automata.config.config_base.AgentConfigBuilder", "automata.config.config_base.AgentConfigBuilder.from_config", "automata.config.openai_config.OpenAIAutomataAgentConfigBuilder", "automata.tests.unit.automata_agent.test_automata_agent_builder.test_builder_creates_proper_instance", "automata.config.config_base.AgentConfigName", "automata.tests.conftest.automata_agent_config_builder", "automata.agent.openai_agent.OpenAIAgentToolkitBuilder"], "k": 20}
{"task_id": "ContextCodeRetrieval/134", "query": "How can DependencyFactory create a netowrkx DiGraph as a subgraph?", "truth_top_match": "automata.singletons.dependency_factory.DependencyFactory.create_subgraph", "top_k_matches": ["automata.tests.unit.singletons.test_singletons_dependency_factory.test_create_subgraph_is_instance", "automata.singletons.dependency_factory.DependencyFactory.create_subgraph", "automata.symbol.graph.symbol_graph.SymbolGraph._build_default_rankable_subgraph", "automata.tests.unit.singletons.test_singletons_dependency_factory.test_create_symbol_graph", "automata.tests.unit.singletons.test_singletons_dependency_factory.test_get_with_override", "automata.symbol.graph.symbol_graph.SymbolGraph", "automata.tests.unit.symbol.test_symbol_graph.test_build_real_graph_and_subgraph", "automata.tests.unit.singletons.test_singletons_dependency_factory.dependency_factory", "automata.tests.unit.symbol.test_symbol_subgraph.test_subgraph_pickle_creation", "automata.singletons.dependency_factory.DependencyFactory"], "k": 20}
{"task_id": "ContextCodeRetrieval/135", "query": "Which class is responsible for building the Automata OpenAI Agent configuration?", "truth_top_match": "automata.config.openai_config.OpenAIAutomataAgentConfigBuilder", "top_k_matches": ["automata.config.openai_config.OpenAIAutomataAgentConfig", "automata.agent.openai_agent.OpenAIAutomataAgent", "automata.config.openai_config.OpenAIAutomataAgentConfigBuilder", "automata.config.config_base.AgentConfig.Config", "automata.tests.unit.automata_agent.test_automata_agent_builder.test_builder_creates_proper_instance", "automata.config.config_base.AgentConfig", "automata.tasks.task_executor.IAutomataTaskExecution._build_agent", "automata.config.openai_config.OpenAIAutomataAgentConfig.load", "automata.tests.conftest.automata_agent_config_builder", "automata.agent.openai_agent.OpenAIAgentToolkitBuilder"], "k": 20}
{"task_id": "ContextCodeRetrieval/136", "query": "What is the abstract base class for agent configurations?", "truth_top_match": "automata.config.config_base.AgentConfig", "top_k_matches": ["automata.config.config_base.AgentConfig", "automata.config.openai_config.OpenAIAutomataAgentConfig", "automata.agent.agent.Agent", "automata.config.config_base.AgentConfigName", "automata.config.config_base.AgentConfigBuilder", "automata.agent.openai_agent.OpenAIAutomataAgent", "automata.config.config_base.AgentConfig.Config", "automata.config.openai_config.OpenAIAutomataAgentConfigBuilder", "automata.agent.openai_agent.OpenAIAgentToolkitBuilder", "automata.agent.agent.Agent._setup"], "k": 20}
{"task_id": "ContextCodeRetrieval/137", "query": "What static method does the IAutomataTaskExecution interface use to build an OpenAIAutomataAgent?", "truth_top_match": "automata.tasks.task_executor.IAutomataTaskExecution._build_agent", "top_k_matches": ["automata.tasks.task_executor.IAutomataTaskExecution._build_agent", "automata.tasks.task_executor.IAutomataTaskExecution", "automata.agent.openai_agent.OpenAIAutomataAgent", "automata.tasks.task_executor.IAutomataTaskExecution.execute", "automata.tests.unit.automata_agent.test_automata_agent_builder.test_builder_creates_proper_instance", "automata.config.openai_config.OpenAIAutomataAgentConfigBuilder", "automata.tests.conftest.automata_agent_config_builder", "automata.tests.conftest.automata_agent", "automata.tests.unit.automata_agent.test_automata_agent.test_agent_initialization", "automata.config.openai_config.OpenAIAutomataAgentConfig"], "k": 20}
{"task_id": "ContextCodeRetrieval/138", "query": "Which method is used to run an Agent's task?", "truth_top_match": "automata.agent.agent.Agent.run", "top_k_matches": ["automata.tests.unit.sample_modules.sample2.PythonAgentToolkit.python_agent_python_task", "automata.tests.unit.task.test_task_executor.TestExecuteBehavior.execute", "automata.tests.unit.task.test_task_executor.TestExecuteBehavior", "automata.cli.scripts.run_agent.main", "automata.tasks.task_executor.IAutomataTaskExecution", "automata.tasks.task_executor.IAutomataTaskExecution._build_agent", "automata.core.run_handlers.run_with_task", "automata.tasks.task_executor.IAutomataTaskExecution.execute", "automata.agent.agent.Agent.run", "automata.core.run_handlers.run_with_eval"], "k": 20}
{"task_id": "ContextCodeRetrieval/139", "query": "Which function retrieves the path to the root of the Automata embedding data?", "truth_top_match": "automata.core.utils.get_embedding_data_fpath", "top_k_matches": ["automata.core.utils.get_embedding_data_fpath", "automata.core.utils.get_root_fpath", "automata.core.utils.get_config_fpath", "automata.core.utils.get_root_py_fpath", "automata.core.run_handlers.initialize_automata", "automata.cli.install_indexing.get_project_paths", "automata.symbol.symbol_utils.load_data_path", "automata.config.config_base.EmbeddingDataCategory", "automata.tests.regression.test_dependencies.test_automata_symbol_providers", "automata.embedding.embedding_base.EmbeddingBuilder.fetch_embedding_source_code"], "k": 20}
{"task_id": "ContextCodeRetrieval/140", "query": "What is the exception raised for errors during evaluation execution?", "truth_top_match": "automata.eval.tool.tool_eval_harness.EvalExecutionError", "top_k_matches": ["automata.eval.tool.tool_eval_harness.EvalExecutionError", "automata.eval.eval_error.EvalExecutionError", "automata.eval.eval_error.EvalLoadingError", "automata.eval.tool.tool_eval_harness.EvalLoadingError", "automata.eval.agent.code_writing_eval.CodeExecutionError", "automata.tasks.task_error.TaskGeneralError", "automata.code_writers.py.py_code_writer.PyCodeWriter.InvalidArgumentsError", "automata.tests.unit.agent_eval.test_agent_eval_actions_results.test_code_execution_error", "automata.tasks.task_error.TaskInstructionsError", "automata.tasks.task_error.TaskStateError"], "k": 20}
{"task_id": "ContextCodeRetrieval/141", "query": "What method in _SymbolParser is used to accept an identifier from the `Symbol`, where the identifier is escaped by backticks?", "truth_top_match": "automata.symbol.symbol_parser._SymbolParser.accept_backtick_escaped_identifier", "top_k_matches": ["automata.symbol.symbol_parser._SymbolParser.accept_backtick_escaped_identifier", "automata.symbol.symbol_parser._SymbolParser", "automata.symbol.symbol_parser._SymbolParser.accept_identifier", "automata.symbol.symbol_parser._SymbolParser.accept_space_escaped_identifier", "automata.symbol.symbol_parser._SymbolParser.accept_escaped_identifier", "automata.symbol.symbol_parser.parse_symbol", "automata.symbol.symbol_parser._SymbolParser.parse_descriptor", "automata.symbol.symbol_base.Symbol", "automata.tests.unit.symbol.test_symbol_parser._unparse", "automata.symbol.symbol_parser.new_local_symbol"], "k": 20}
{"task_id": "ContextCodeRetrieval/142", "query": "What method is used to setup the OpenAIAutomataAgentConfig?", "truth_top_match": "automata.config.openai_config.OpenAIAutomataAgentConfig.setup", "top_k_matches": ["automata.config.openai_config.OpenAIAutomataAgentConfig", "automata.tests.unit.automata_agent.test_automata_agent_builder.test_builder_creates_proper_instance", "automata.tests.conftest.automata_agent_config_builder", "automata.config.openai_config.OpenAIAutomataAgentConfigBuilder", "automata.tests.unit.automata_agent.test_automata_agent.test_agent_initialization", "automata.agent.openai_agent.OpenAIAutomataAgent", "automata.tests.conftest.automata_agent", "automata.tasks.task_executor.IAutomataTaskExecution._build_agent", "automata.config.openai_config.OpenAIAutomataAgentConfig.load", "automata.agent.openai_agent.OpenAIAutomataAgent.__init__"], "k": 20}
{"task_id": "ContextCodeRetrieval/143", "query": "What function finds the bounding box of a node in the AST?", "truth_top_match": "automata.core.ast_handlers.fetch_bounding_box", "top_k_matches": ["automata.core.ast_handlers.fetch_bounding_box", "automata.tests.unit.ast_utils.test_ast_utils_bounding_box.test_fetch_bounding_box_with_function_node", "automata.tests.unit.ast_utils.test_ast_utils_bounding_box.test_fetch_bounding_box_with_function_node_in_file", "automata.tests.unit.ast_utils.test_ast_utils_bounding_box.test_fetch_bounding_box_with_class_node", "automata.tests.unit.ast_utils.test_ast_utils_bounding_box.test_fetch_bounding_box_with_method_node", "automata.tests.unit.ast_utils.test_ast_utils_bounding_box.test_fetch_bounding_box_with_incomplete_node", "automata.tests.unit.ast_utils.test_ast_utils_bounding_box.test_fetch_bounding_box_with_class_node_in_file", "automata.symbol.graph.symbol_navigator.process_symbol_bounds", "automata.core.ast_handlers.find_syntax_tree_node", "automata.core.ast_handlers.DocstringRemover.visit"], "k": 20}
{"task_id": "ContextCodeRetrieval/144", "query": "How does the service prompt the user to select a choice from a given list?", "truth_top_match": "automata.cli.env_operations.ask_choice", "top_k_matches": ["automata.cli.env_operations.ask_choice", "automata.cli.cli_utils.ask_choice", "automata.tests.unit.cli.test_cli_utils.test_ask_choice", "automata.cli.env_operations.select_graph_type", "automata.tests.unit.cli.test_cli_commands.mock_ask_choice", "automata.llm.providers.openai_llm.OpenAIChatCompletionProvider.standalone_call", "automata.experimental.symbol_embedding.symbol_doc_embedding_builder.SymbolDocEmbeddingBuilder._build_prompt", "automata.tests.unit.automata_agent.test_automata_agent.test_iter_step_without_api_call", "automata.tests.unit.tool_eval.conftest.mock_tool_response_with_search_action_completion", "automata.tests.unit.agent_eval.conftest.mock_openai_response_with_code_action_completion_message_x"], "k": 20}
{"task_id": "ContextCodeRetrieval/145", "query": "What class represents different names of agent configurations?", "truth_top_match": "automata.config.config_base.AgentConfigName", "top_k_matches": ["automata.config.config_base.AgentConfigName", "automata.config.config_base.AgentConfig", "automata.agent.agent.AgentToolkitNames", "automata.tests.unit.automata_agent.test_automata_agent_builder.test_config_loading_different_versions", "automata.config.config_base.AgentConfigBuilder.from_name", "automata.config.openai_config.OpenAIAutomataAgentConfig.load", "automata.config.config_base.InstructionConfigVersion", "automata.config.openai_config.OpenAIAutomataAgentConfig", "automata.config.config_base.AgentConfig.load", "automata.config.config_base.ConfigCategory"], "k": 20}
{"task_id": "ContextCodeRetrieval/146", "query": "How can metadata be accessed in a SymbolDocEmbedding?", "truth_top_match": "automata.symbol_embedding.symbol_embedding_base.SymbolDocEmbedding.metadata", "top_k_matches": ["automata.symbol_embedding.symbol_embedding_base.SymbolDocEmbedding", "automata.experimental.memory_store.symbol_doc_embedding_handler.SymbolDocEmbeddingHandler", "automata.symbol_embedding.symbol_embedding_base.SymbolCodeEmbedding", "automata.experimental.symbol_embedding.symbol_doc_embedding_builder.SymbolDocEmbeddingBuilder", "automata.symbol_embedding.symbol_embedding_base.SymbolEmbedding", "automata.tests.unit.context_oracle.test_context_oracle_tool.symbol_doc_embedding_handler", "automata.tests.unit.context_oracle.test_document_oracle_tool.symbol_doc_embedding_handler", "automata.symbol_embedding.symbol_embedding_base.SymbolDocEmbedding.__str__", "automata.tests.unit.database.test_database_vector.test_lookup_symbol", "automata.tests.conftest.embedding_maker._make_embedding"], "k": 20}
{"task_id": "ContextCodeRetrieval/147", "query": "What static method in SymbolProviderRegistry provides a list of all supported symbols?", "truth_top_match": "automata.context_providers.symbol_synchronization_context.SymbolProviderRegistry.get_sorted_supported_symbols", "top_k_matches": ["automata.context_providers.symbol_synchronization_context.SymbolProviderRegistry.get_sorted_supported_symbols", "automata.context_providers.symbol_synchronization_context.SymbolProviderRegistry", "automata.symbol.graph.symbol_graph.SymbolGraph._get_sorted_supported_symbols", "automata.context_providers.symbol_synchronization_context.SymbolProviderRegistry.synchronize", "automata.symbol_embedding.symbol_embedding_handler.SymbolEmbeddingHandler._get_sorted_supported_symbols", "automata.symbol.symbol_base.ISymbolProvider.get_sorted_supported_symbols", "automata.symbol.symbol_base.ISymbolProvider._get_sorted_supported_symbols", "automata.tests.unit.symbol.test_symbol_graph.test_get_all_symbols", "automata.tests.unit.symbol.test_symbol_graph_static.test_get_all_symbols", "automata.symbol.symbol_base.ISymbolProvider"], "k": 20}
{"task_id": "ContextCodeRetrieval/148", "query": "Which method is used to indicate the abstract construction of embedding vector for a document?", "truth_top_match": "automata.embedding.embedding_base.EmbeddingVectorProvider.build_embedding_vector", "top_k_matches": ["automata.embedding.embedding_base.EmbeddingVectorProvider", "automata.embedding.embedding_base.Embedding", "automata.tests.conftest.embedding_maker._make_embedding", "automata.embedding.embedding_base.EmbeddingVectorProvider.build_embedding_vector", "automata.symbol_embedding.symbol_embedding_base.SymbolEmbedding", "automata.tests.unit.symbol_embedding.test_persistent_symbol_embedding.create_embedding", "automata.embedding.embedding_base.EmbeddingBuilder", "automata.symbol_embedding.symbol_embedding_base.SymbolDocEmbedding", "automata.symbol_embedding.symbol_embedding_base.SymbolCodeEmbedding", "automata.experimental.symbol_embedding.symbol_doc_embedding_builder.SymbolDocEmbeddingBuilder"], "k": 20}
{"task_id": "ContextCodeRetrieval/149", "query": "What method is used to save the vector database to the Chroma database in ChromaVectorDatabase?", "truth_top_match": "automata.core.base.database.vector_database.ChromaVectorDatabase.save", "top_k_matches": ["automata.core.base.database.vector_database.ChromaVectorDatabase", "automata.symbol_embedding.vector_databases.ChromaSymbolEmbeddingVectorDatabase", "automata.core.base.database.vector_database.ChromaVectorDatabase.save", "automata.tests.unit.chroma.test_chroma_vector.test_vector_initialization", "automata.core.base.database.vector_database.JSONVectorDatabase.save", "automata.tests.unit.chroma.test_chroma_vector.test_update_database", "automata.tests.unit.symbol_embedding.test_persistent_symbol_embedding._extracted_from_test_symbol_doc_embedding", "automata.core.base.database.vector_database.JSONVectorDatabase", "automata.tests.conftest.chroma_vector_db", "automata.core.base.database.vector_database.ChromaVectorDatabase.load"], "k": 20}
{"task_id": "ContextCodeRetrieval/150", "query": "Which method is used to get an entry from the database using a key?", "truth_top_match": "automata.symbol_embedding.vector_databases.ChromaSymbolEmbeddingVectorDatabase.get", "top_k_matches": ["automata.core.base.database.vector_database.JSONVectorDatabase.get", "automata.core.base.database.vector_database.VectorDatabaseProvider.get", "automata.tests.unit.database.test_database_sql.test_update_entry", "automata.symbol_embedding.vector_databases.ChromaSymbolEmbeddingVectorDatabase.get", "automata.core.base.database.vector_database.VectorDatabaseProvider.contains", "automata.core.base.database.vector_database.JSONVectorDatabase.update_entry", "automata.symbol_embedding.vector_databases.ChromaSymbolEmbeddingVectorDatabase._check_duplicate_entry", "automata.core.base.database.vector_database.ChromaVectorDatabase.contains", "automata.core.base.database.vector_database.VectorDatabaseProvider.entry_to_key", "automata.core.base.database.vector_database.JSONVectorDatabase.entry_to_key"], "k": 20}
{"task_id": "ContextCodeRetrieval/151", "query": "What method is used to get the last interaction ID for a chat session?", "truth_top_match": "automata.memory_store.conversation_database_providers.OpenAIAutomataConversationDatabase._get_last_interaction_id", "top_k_matches": ["automata.memory_store.conversation_database_providers.OpenAIAutomataConversationDatabase._get_last_interaction_id", "automata.tests.unit.automata_agent.test_automata_database.test_get_last_interaction_id", "automata.tests.unit.conversation_database.test_conversation_database.test_put_message_increments_interaction_id", "automata.tests.unit.automata_agent.test_automata_agent.test_db_interaction", "automata.tests.unit.conversation_database.test_conversation_database.test_get_get_last_interaction_id_when_no_interactions", "automata.tests.unit.conversation_database.test_conversation_database.test_multiple_put_message_increments_interaction_id", "automata.memory_store.conversation_database_providers.OpenAIAutomataConversationDatabase.get_messages", "automata.llm.providers.openai_llm.OpenAIConversation.get_latest_message", "automata.tests.unit.conversation_database.test_conversation_database.test_get_messages_returns_single_message_for_session", "automata.llm.llm_base.LLMConversation.get_latest_message"], "k": 20}
{"task_id": "ContextCodeRetrieval/152", "query": "What method in ISymbolProvider abstract class is for filtering symbols?", "truth_top_match": "automata.symbol.symbol_base.ISymbolProvider.filter_symbols", "top_k_matches": ["automata.symbol.symbol_base.ISymbolProvider", "automata.context_providers.symbol_synchronization_context.SymbolProviderRegistry", "automata.symbol.symbol_base.ISymbolProvider.filter_symbols", "automata.symbol_embedding.symbol_embedding_handler.SymbolEmbeddingHandler", "automata.context_providers.symbol_synchronization_context.SymbolProviderRegistry.synchronize", "automata.symbol.graph.symbol_graph.SymbolGraph", "automata.context_providers.symbol_synchronization_context.SymbolProviderSynchronizationContext", "automata.symbol_embedding.symbol_embedding_handler.SymbolEmbeddingHandler.filter_symbols", "automata.symbol.symbol_base.ISymbolProvider._get_sorted_supported_symbols", "automata.context_providers.symbol_synchronization_context.SymbolProviderRegistry.register_provider"], "k": 20}
{"task_id": "ContextCodeRetrieval/153", "query": "How are tools built from specified toolkits?", "truth_top_match": "automata.tools.agent_tool_factory.AgentToolFactory.build_tools", "top_k_matches": ["automata.tools.agent_tool_factory.AgentToolFactory.build_tools", "automata.tools.agent_tool_factory.AgentToolFactory.create_tools_from_builder", "automata.tools.agent_tool_factory.AgentToolFactory", "automata.tests.unit.symbol.test_symbol_search.test_build", "automata.tests.unit.symbol.test_symbol_search_tool.test_build", "automata.tests.unit.context_oracle.test_context_oracle_tool.test_build", "automata.experimental.tools.builders.document_oracle_builder.DocumentOracleToolkitBuilder.build", "automata.agent.openai_agent.OpenAIAgentToolkitBuilder", "automata.tests.regression.test_dependencies.test_build_automata_tools", "automata.tests.unit.context_oracle.test_document_oracle_tool.test_build"], "k": 20}
{"task_id": "ContextCodeRetrieval/154", "query": "Which abstract static method in AgentConfig returns the lower level model provider?", "truth_top_match": "automata.config.config_base.AgentConfig.get_llm_provider", "top_k_matches": ["automata.config.openai_config.OpenAIAutomataAgentConfig.get_llm_provider", "automata.config.config_base.AgentConfig.get_llm_provider", "automata.config.config_base.AgentConfig", "automata.config.config_base.LLMProvider", "automata.config.config_base.AgentConfigBuilder.with_model", "automata.agent.agent.Agent.set_database_provider", "automata.tests.conftest.automata_agent_config_builder", "automata.config.config_base.AgentConfig.Config", "automata.tests.unit.automata_agent.test_automata_agent_builder.test_builder_creates_proper_instance", "automata.tests.unit.automata_agent.test_automata_agent.test_chat_provider"], "k": 20}
{"task_id": "ContextCodeRetrieval/155", "query": "What interface represents the action of executing tools?", "truth_top_match": "automata.tools.tool_executor.IToolExecution", "top_k_matches": ["automata.tools.tool_executor.IToolExecution", "automata.tools.tool_executor.ToolExecutor", "automata.tools.tool_executor.ToolExecution", "automata.agent.agent.Agent.tools", "automata.eval.tool.tool_eval.ToolEval", "automata.tools.tool_base.Tool", "automata.tests.unit.automata_agent.test_automata_agent.test_tool_execution", "automata.agent.openai_agent.OpenAIAutomataAgent.tools", "automata.tests.conftest.TestTool", "automata.eval.tool.tool_eval.ToolEvalResult"], "k": 20}
{"task_id": "ContextCodeRetrieval/156", "query": "Which method in the DotPathMap class checks if the map contains a module with the given filepath?", "truth_top_match": "automata.code_parsers.py.dotpath_map.DotPathMap.contains_fpath", "top_k_matches": ["automata.code_parsers.py.dotpath_map.DotPathMap.contains_dotpath", "automata.code_parsers.py.dotpath_map.DotPathMap.contains_fpath", "automata.code_parsers.py.dotpath_map.DotPathMap.get_module_fpath_by_dotpath", "automata.singletons.py_module_loader.PyModuleLoader.__contains__", "automata.code_parsers.py.dotpath_map.DotPathMap.get_module_dotpath_by_fpath", "automata.singletons.py_module_loader.PyModuleLoader.fetch_ast_module", "automata.singletons.py_module_loader.PyModuleLoader.fetch_existing_module_fpath_by_dotpath", "automata.code_parsers.py.dotpath_map.DotPathMap", "automata.code_parsers.py.dotpath_map.DotPathMap.put_module", "automata.singletons.py_module_loader.PyModuleLoader.delete_module"], "k": 20}
{"task_id": "ContextCodeRetrieval/157", "query": "What is the RootDict class?", "truth_top_match": "automata.core.utils.RootDict", "top_k_matches": ["automata.core.utils.RootDict", "automata.core.utils.LoggingConfig", "automata.core.utils.HandlerDict", "automata.singletons.py_module_loader.PyModuleLoader", "automata.tests.unit.context_retriever.test_context_retriever.test_class_inheritance.Parent", "automata.tests.unit.context_retriever.test_context_retriever.test_class_inheritance_in_source_code.Parent", "automata.code_parsers.directory.DirectoryManager.__init__", "automata.code_parsers.directory.Directory.is_root_dir", "automata.tests.unit.sample_modules.sample.OuterClass.InnerClass", "automata.code_parsers.directory.Node"], "k": 20}
{"task_id": "ContextCodeRetrieval/158", "query": "What property is used to find the kind of the python symbol?", "truth_top_match": "automata.symbol.symbol_base.Symbol.py_kind", "top_k_matches": ["automata.symbol.symbol_base.Symbol.py_kind", "automata.symbol_embedding.symbol_embedding_base.SymbolEmbedding.symbol", "automata.symbol.symbol_base.SymbolDescriptor.PyKind", "automata.symbol.symbol_base.Symbol", "automata.tests.unit.cli.test_cli_scripts_run_doc_embedding.FakeSymbol", "automata.symbol.graph.symbol_graph_types.SymbolGraphType", "automata.symbol.symbol_base.SymbolDescriptor", "automata.experimental.search.symbol_search.SymbolSearch.symbol_rank", "automata.experimental.code_parsers.py.context_processing.context_handler.PyContextHandler", "automata.symbol.symbol_base.Symbol.parent"], "k": 20}
{"task_id": "ContextCodeRetrieval/159", "query": "Which function parses a Symbol given a Symbol URI?", "truth_top_match": "automata.symbol.symbol_parser.parse_symbol", "top_k_matches": ["automata.symbol.symbol_parser.parse_symbol", "automata.symbol.symbol_base.Symbol", "automata.symbol.symbol_parser._SymbolParser", "automata.experimental.search.symbol_search.SymbolSearch.symbol_references", "automata.symbol.symbol_base.Symbol.from_string", "automata.tests.unit.symbol.test_symbol_parser._unparse", "automata.tests.unit.symbol.test_symbol_parser.test_unparse_symbol", "automata.tests.unit.symbol.test_symbol_base.test_parsed_symbol", "automata.experimental.search.symbol_search.SymbolSearch.retrieve_source_code_by_symbol", "automata.symbol.graph.symbol_navigator.process_symbol_bounds"], "k": 20}
{"task_id": "ContextCodeRetrieval/160", "query": "What method is used to convert a SymbolDescriptor back into a URI string?", "truth_top_match": "automata.symbol.symbol_base.SymbolDescriptor.unparse", "top_k_matches": ["automata.tests.unit.symbol.test_symbol_parser._unparse", "automata.symbol.symbol_base.SymbolDescriptor.unparse", "automata.symbol.symbol_base.SymbolDescriptor", "automata.symbol.symbol_base.Symbol.__repr__", "automata.symbol.symbol_base.Symbol", "automata.symbol.symbol_parser.parse_symbol", "automata.symbol.symbol_base.Symbol.parent", "automata.symbol.symbol_parser._SymbolParser", "automata.symbol.symbol_base.SymbolPackage.unparse", "automata.symbol.symbol_parser._SymbolParser.parse_descriptor"], "k": 20}
{"task_id": "ContextCodeRetrieval/161", "query": "What GraphProcessor subclass is provided for working with caller-callee relationships?", "truth_top_match": "automata.symbol.graph.symbol_caller_callees.CallerCalleeProcessor", "top_k_matches": ["automata.symbol.graph.symbol_caller_callees.CallerCalleeProcessor", "automata.symbol.graph.graph_builder.GraphBuilder._process_caller_callee_relationships", "automata.symbol.graph.symbol_relationships.RelationshipProcessor", "automata.symbol.graph.graph_builder.GraphBuilder", "automata.symbol.graph.symbol_references.ReferenceProcessor", "automata.symbol.graph.symbol_caller_callees.CallerCalleeProcessor.process", "automata.symbol.graph.symbol_graph_base.GraphProcessor", "automata.symbol.graph.symbol_relationships.RelationshipProcessor.process", "automata.symbol.graph.symbol_graph.SymbolGraph", "automata.symbol.graph.symbol_navigator.SymbolGraphNavigator.get_potential_symbol_callees"], "k": 20}
{"task_id": "ContextCodeRetrieval/162", "query": "Which method of AutomataTaskRegistry is responsible for registering tasks?", "truth_top_match": "automata.tasks.task_registry.AutomataTaskRegistry.register", "top_k_matches": ["automata.tasks.task_registry.AutomataTaskRegistry", "automata.tasks.task_registry.AutomataTaskRegistry.register", "automata.tests.conftest.task_registry", "automata.tests.unit.task.test_task_database.task_registry", "automata.tasks.task_registry.AutomataTaskRegistry.get_all_tasks", "automata.tests.unit.task.test_task_database.test_get_all_tasks", "automata.tests.unit.task.test_task_executor.test_execute_automata_task_success", "automata.tests.unit.task.test_task.test_callback", "automata.tasks.task_registry.AutomataTaskRegistry.update_task", "automata.tests.unit.task.test_task_database.test_register_and_update_task"], "k": 20}
{"task_id": "ContextCodeRetrieval/163", "query": "How can a SymbolGraph instance be created from a graph?", "truth_top_match": "automata.symbol.graph.symbol_graph.SymbolGraph.from_graph", "top_k_matches": ["automata.symbol.graph.symbol_graph.SymbolGraph", "automata.symbol.graph.symbol_graph.SymbolGraph.from_graph", "automata.symbol.graph.symbol_graph.SymbolGraph.__init__", "automata.singletons.dependency_factory.DependencyFactory.create_symbol_graph", "automata.symbol.graph.graph_builder.GraphBuilder", "automata.symbol.graph.graph_builder.GraphBuilder.build_graph", "automata.symbol.graph.symbol_graph_types.SymbolGraphType", "automata.singletons.dependency_factory.DependencyFactory.create_subgraph", "automata.tests.utils.factories.static_indices_graph_dynamic", "automata.singletons.dependency_factory.DependencyFactory.create_symbol_rank"], "k": 20}
{"task_id": "ContextCodeRetrieval/164", "query": "Which function is used to retrieve the open pull requests for the remote repository?", "truth_top_match": "automata.singletons.github_client.GitHubClient.get_open_pull_requests", "top_k_matches": ["automata.singletons.github_client.GitHubClient.get_open_pull_requests", "automata.singletons.github_client.GitHubClient.get_open_issues", "automata.tests.unit.github.test_github_client.test_get_open_pull_requests", "automata.tests.unit.singletons.test_singletons_github_client.test_create_pull_request", "automata.tests.unit.github.test_github_client.test_get_open_issues", "automata.tests.unit.github.test_github_client.test_create_pull_request", "automata.singletons.github_client.RepositoryClient.merge_pull_request", "automata.singletons.github_client.GitHubClient.fetch_issue", "automata.tests.unit.github.test_github_client.test_merge_pull_request", "automata.singletons.github_client.RepositoryClient.create_pull_request"], "k": 20}
{"task_id": "ContextCodeRetrieval/165", "query": "What method builds the tools associated with retrieving python code directly?", "truth_top_match": "automata.experimental.tools.builders.agentified_search_builder.AgentifiedSearchToolkitBuilder.build", "top_k_matches": ["automata.tools.builders.py_reader_builder.PyReaderToolkitBuilder.build", "automata.experimental.tools.builders.agentified_search_builder.AgentifiedSearchToolkitBuilder.build", "automata.tests.unit.code_readers.test_py_reader_tool.python_retriever_tool_builder", "automata.tests.unit.code_readers.test_py_reader_tool.test_tool_execution", "automata.tests.unit.code_readers.test_py_reader_tool.test_build", "automata.tools.builders.py_reader_builder.PyReaderToolkitBuilder", "automata.experimental.tools.builders.py_interpreter.PyInterpreterOpenAIToolkitBuilder.build_for_open_ai", "automata.tools.builders.py_writer_builder.PyCodeWriterToolkitBuilder.build", "automata.tests.unit.code_writers.test_py_writer_tool.test_build", "automata.experimental.tools.builders.py_interpreter.PyInterpreterOpenAIToolkitBuilder"], "k": 20}
{"task_id": "ContextCodeRetrieval/166", "query": "What function is used to delete the value of a key from the local task_environment?", "truth_top_match": "automata.cli.env_operations.delete_key_value", "top_k_matches": ["automata.cli.env_operations.delete_key_value", "automata.cli.env_operations.update_key_value", "automata.tasks.task_base.TaskEnvironment.teardown", "automata.tests.unit.cli.test_cli_env_operations.test_delete_key_value", "automata.tasks.task_environment.AutomataTaskEnvironment.reset", "automata.tasks.task_environment.AutomataTaskEnvironment.teardown", "automata.tasks.task_base.TaskEnvironment", "automata.tasks.task_environment.AutomataTaskEnvironment.validate", "automata.tasks.task_base.TaskEnvironment.validate", "automata.tasks.task_base.TaskEnvironment.setup"], "k": 20}
{"task_id": "ContextCodeRetrieval/167", "query": "What method loads JSON data from the given file in ToolEvalSetLoader?", "truth_top_match": "automata.eval.tool.tool_eval_harness.ToolEvalSetLoader.load_json", "top_k_matches": ["automata.eval.tool.tool_eval_harness.ToolEvalSetLoader", "automata.eval.agent.agent_eval_harness.AgentEvalSetLoader", "automata.tests.unit.tool_eval.test_tool_eval_loader.loader", "automata.eval.tool.tool_eval_harness.ToolEvalSetLoader.load_json", "automata.cli.scripts.run_tool_eval.run_eval_harness", "automata.eval.agent.agent_eval_harness.AgentEvalSetLoader.load_json", "automata.tests.unit.agent_eval.test_agent_eval_loader.loader", "automata.core.base.database.vector_database.JSONVectorDatabase.load", "automata.cli.scripts.run_agent_eval.run_eval_harness", "automata.experimental.scripts.run_update_tool_eval.load_json_data"], "k": 20}
{"task_id": "ContextCodeRetrieval/168", "query": "What class represents a general error during task execution?", "truth_top_match": "automata.tasks.task_error.TaskGeneralError", "top_k_matches": ["automata.tasks.task_error.TaskGeneralError", "automata.eval.eval_error.EvalExecutionError", "automata.agent.error.AgentGeneralError", "automata.tasks.task_error.TaskStateError", "automata.eval.tool.tool_eval_harness.EvalExecutionError", "automata.tasks.task_error.TaskInstructionsError", "automata.eval.agent.code_writing_eval.CodeExecutionError", "automata.agent.error.AgentResultError", "automata.eval.tool.tool_eval_harness.EvalLoadingError", "automata.code_writers.py.py_code_writer.PyCodeWriter.InvalidArgumentsError"], "k": 20}
{"task_id": "ContextCodeRetrieval/169", "query": "What method is used to add a message to the conversation?", "truth_top_match": "automata.llm.providers.openai_llm.OpenAIChatCompletionProvider.add_message", "top_k_matches": ["automata.llm.providers.openai_llm.OpenAIChatCompletionProvider.add_message", "automata.llm.providers.openai_llm.OpenAIConversation.add_message", "automata.llm.llm_base.LLMChatCompletionProvider.add_message", "automata.llm.llm_base.LLMConversation.LLMEmptyConversationError.__init__", "automata.llm.providers.openai_llm.OpenAIConversation", "automata.tests.unit.automata_agent.test_automata_database.test_save_message", "automata.tests.unit.conversation_database.test_conversation_database.test_put_message_increments_interaction_id", "automata.memory_store.conversation_database_providers.OpenAIAutomataConversationDatabase.save_message", "automata.llm.providers.openai_llm.OpenAIConversation.get_latest_message", "automata.llm.providers.openai_llm.OpenAIChatCompletionProvider"], "k": 20}
{"task_id": "ContextCodeRetrieval/170", "query": "How can one get the full dot path of a Symbol?", "truth_top_match": "automata.symbol.symbol_base.Symbol.dotpath", "top_k_matches": ["automata.cli.scripts.run_doc_embedding.map_dotpaths_to_symbols", "automata.symbol.symbol_base.Symbol.dotpath", "automata.tests.unit.cli.test_cli_scripts_run_doc_embedding.FakeSymbol", "automata.symbol.graph.symbol_navigator.SymbolGraphNavigator.get_sorted_supported_symbols", "automata.experimental.symbol_embedding.symbol_doc_embedding_builder.SymbolDocEmbeddingBuilder._build_prompt", "automata.tests.unit.symbol.test_symbol_parser._unparse", "automata.symbol.graph.symbol_navigator.SymbolGraphNavigator._get_symbol_containing_file", "automata.tests.unit.database.test_database_vector.test_lookup_symbol", "automata.symbol.graph.symbol_navigator.process_symbol_bounds", "automata.symbol.graph.symbol_navigator.SymbolGraphNavigator.get_potential_symbol_callers"], "k": 20}
{"task_id": "ContextCodeRetrieval/171", "query": "How does AutomataTaskEnvironment setup a task?", "truth_top_match": "automata.tasks.task_environment.AutomataTaskEnvironment.setup", "top_k_matches": ["automata.tasks.task_environment.AutomataTaskEnvironment", "automata.tasks.task_environment.AutomataTaskEnvironment.setup", "automata.tasks.task_base.TaskEnvironment.setup", "automata.tests.regression.test_agent_end_to_end.automata_setup", "automata.tasks.task_base.TaskEnvironment", "automata.core.run_handlers.initialize_automata", "automata.tasks.task_executor.IAutomataTaskExecution", "automata.tests.conftest.setup", "automata.tests.conftest.task_environment", "automata.tests.unit.task.test_task_executor.test_execute_automata_task_success"], "k": 20}
{"task_id": "ContextCodeRetrieval/172", "query": "What class method is used to create a Symbol instance from a string?", "truth_top_match": "automata.symbol.symbol_base.Symbol.from_string", "top_k_matches": ["automata.symbol.symbol_base.Symbol.from_string", "automata.symbol.symbol_base.Symbol", "automata.symbol.symbol_parser.parse_symbol", "automata.symbol.symbol_parser._SymbolParser", "automata.tests.unit.cli.test_cli_scripts_run_doc_embedding.FakeSymbol", "automata.singletons.dependency_factory.DependencyFactory.create_symbol_search", "automata.symbol.graph.symbol_graph_types.SymbolGraphType", "automata.eval.tool.search_eval.SymbolSearchAction.from_payload", "automata.singletons.dependency_factory.DependencyFactory.create_symbol_rank", "automata.eval.tool.search_eval.SymbolSearchAction"], "k": 20}
{"task_id": "ContextCodeRetrieval/173", "query": "What method is used to add edges between `Symbol` nodes in the `MultiDiGraph`?", "truth_top_match": "automata.symbol.graph.symbol_relationships.RelationshipProcessor.process", "top_k_matches": ["automata.symbol.graph.symbol_caller_callees.CallerCalleeProcessor.process", "automata.symbol.graph.symbol_relationships.RelationshipProcessor.process", "automata.symbol.graph.symbol_references.ReferenceProcessor", "automata.symbol.graph.symbol_references.ReferenceProcessor.process", "automata.symbol.graph.symbol_caller_callees.CallerCalleeProcessor", "automata.symbol.graph.symbol_relationships.RelationshipProcessor", "automata.symbol.graph.graph_builder.GraphBuilder._add_symbol_vertices", "automata.symbol.graph.graph_builder.GraphBuilder._process_relationships", "automata.symbol.graph.symbol_graph.SymbolGraph", "automata.symbol.graph.graph_builder.GraphBuilder.build_graph"], "k": 20}
{"task_id": "ContextCodeRetrieval/174", "query": "How does the SymbolEmbeddingHandler get the embeddings for a list of symbols?", "truth_top_match": "automata.symbol_embedding.symbol_embedding_handler.SymbolEmbeddingHandler.get_embeddings", "top_k_matches": ["automata.symbol_embedding.symbol_embedding_handler.SymbolEmbeddingHandler", "automata.symbol_embedding.symbol_embedding_handler.SymbolEmbeddingHandler.get_embeddings", "automata.experimental.memory_store.symbol_doc_embedding_handler.SymbolDocEmbeddingHandler", "automata.cli.scripts.run_code_embedding.process_embeddings", "automata.memory_store.symbol_code_embedding_handler.SymbolCodeEmbeddingHandler", "automata.symbol_embedding.symbol_embedding_handler.SymbolEmbeddingHandler.get_all_ordered_embeddings", "automata.embedding.embedding_base.EmbeddingHandler.get_embeddings", "automata.embedding.embedding_base.EmbeddingHandler", "automata.memory_store.symbol_code_embedding_handler.SymbolCodeEmbeddingHandler.process_embedding", "automata.tests.unit.symbol_embedding.test_symbol_embedding.test_get_embedding"], "k": 20}
{"task_id": "ContextCodeRetrieval/175", "query": "What is the utility that adds common options for the command-line interface?", "truth_top_match": "automata.cli.options.common_options", "top_k_matches": ["automata.cli.options.common_options", "automata.cli.options.agent_options", "automata.tests.unit.cli.test_cli_options.command_with_options", "automata.cli.options.eval_options", "automata.tests.unit.cli.test_cli_options.test_common_options_project_name", "automata.tests.unit.cli.test_cli_options.test_common_options_project_project_name", "automata.tests.unit.cli.test_cli_options.test_common_options_log_level", "automata.tests.unit.cli.test_cli_options.test_common_options_project_root_fpath", "automata.tests.unit.cli.test_cli_options.test_common_options_length", "automata.cli.commands.configure"], "k": 20}
{"task_id": "ContextCodeRetrieval/176", "query": "What class exposes various search methods for symbols?", "truth_top_match": "automata.experimental.search.symbol_search.SymbolSearch", "top_k_matches": ["automata.experimental.search.symbol_search.SymbolSearch", "automata.experimental.tools.builders.symbol_search_builder.SearchTool", "automata.eval.tool.search_eval.SymbolSearchEval", "automata.experimental.tools.builders.symbol_search_builder.SymbolSearchToolkitBuilder", "automata.eval.tool.search_eval.SymbolSearchAction", "automata.singletons.dependency_factory.DependencyFactory.create_symbol_search", "automata.tests.unit.tool_eval.test_symbol_search_eval.symbol_search_eval", "automata.tests.conftest.search_evaluator", "automata.tests.unit.context_oracle.test_context_oracle_tool.symbol_search", "automata.tests.unit.context_oracle.test_document_oracle_tool.symbol_search"], "k": 20}
{"task_id": "ContextCodeRetrieval/177", "query": "What interface is responsible for executing general tasks?", "truth_top_match": "automata.tasks.task_executor.IAutomataTaskExecution", "top_k_matches": ["automata.tasks.task_base.ITaskExecution", "automata.tasks.task_error.TaskGeneralError", "automata.tasks.task_executor.IAutomataTaskExecution", "automata.tasks.task_base.ITaskExecution.execute", "automata.tests.unit.task.test_task_executor.TestExecuteBehavior", "automata.tasks.task_base.TaskEnvironment", "automata.tasks.task_registry.AutomataTaskRegistry", "automata.tests.unit.context_retriever.test_context_retriever.test_interface", "automata.tasks.task_base.Task", "automata.tasks.task_environment.AutomataTaskEnvironment"], "k": 20}
{"task_id": "ContextCodeRetrieval/178", "query": "How can we retrieve the dotpath for a given module object in PyModuleLoader?", "truth_top_match": "automata.singletons.py_module_loader.PyModuleLoader.fetch_existing_module_dotpath", "top_k_matches": ["automata.singletons.py_module_loader.PyModuleLoader.fetch_existing_module_dotpath", "automata.code_parsers.py.dotpath_map.DotPathMap.get_module_fpath_by_dotpath", "automata.code_parsers.py.dotpath_map.DotPathMap.get_module_dotpath_by_fpath", "automata.singletons.py_module_loader.PyModuleLoader.fetch_existing_module_fpath_by_dotpath", "automata.tests.unit.module_loader.test_module_loader.test_dotpath_map", "automata.singletons.py_module_loader.PyModuleLoader.fetch_ast_module", "automata.code_parsers.py.dotpath_map.DotPathMap.contains_dotpath", "automata.singletons.py_module_loader.PyModuleLoader", "automata.code_parsers.py.py_reader.PyReader.get_docstring", "automata.singletons.py_module_loader.PyModuleLoader.get_module_dotpath_by_fpath"], "k": 20}
{"task_id": "ContextCodeRetrieval/179", "query": "What property is used to indicate if the symbol is local?", "truth_top_match": "automata.symbol.symbol_base.Symbol.is_local", "top_k_matches": ["automata.symbol.symbol_base.Symbol.is_local", "automata.symbol.symbol_parser.new_local_symbol", "automata.symbol_embedding.symbol_embedding_base.SymbolEmbedding.symbol", "automata.tests.unit.symbol.test_symbol_utils.test_get_rankable_symbols", "automata.symbol.symbol_base.Symbol.is_parameter", "automata.symbol.symbol_base.Symbol.is_meta", "automata.tests.unit.cli.test_cli_scripts_run_doc_embedding.FakeSymbol", "automata.symbol.symbol_base.Symbol", "automata.tests.unit.symbol.test_symbol_utils.test_convert_to_ast_object", "automata.experimental.search.symbol_search.SymbolSearch.symbol_rank"], "k": 20}
{"task_id": "ContextCodeRetrieval/180", "query": "Which method synchronizes all symbol providers?", "truth_top_match": "automata.context_providers.symbol_synchronization_context.SymbolProviderRegistry.synchronize", "top_k_matches": ["automata.context_providers.symbol_synchronization_context.SymbolProviderSynchronizationContext.synchronize", "automata.context_providers.symbol_synchronization_context.SymbolProviderRegistry.synchronize", "automata.context_providers.symbol_synchronization_context.SymbolProviderSynchronizationContext", "automata.context_providers.symbol_synchronization_context.SymbolProviderRegistry", "automata.singletons.dependency_factory.DependencyFactory._synchronize_provider", "automata.tests.unit.synchronizer.test_synchronizer.test_synchronize", "automata.symbol.symbol_base.ISymbolProvider", "automata.context_providers.symbol_synchronization_context.SymbolProviderSynchronizationContext.register_provider", "automata.context_providers.symbol_synchronization_context.SymbolProviderRegistry.register_provider", "automata.context_providers.symbol_synchronization_context.SymbolProviderRegistry.get_sorted_supported_symbols"], "k": 20}
{"task_id": "ContextCodeRetrieval/181", "query": "How can one get the module path of a Symbol?", "truth_top_match": "automata.symbol.symbol_base.Symbol.module_path", "top_k_matches": ["automata.symbol.graph.symbol_navigator.SymbolGraphNavigator._get_references_to_module", "automata.symbol.symbol_base.Symbol.module_path", "automata.code_parsers.py.dotpath_map.DotPathMap.get_module_fpath_by_dotpath", "automata.singletons.py_module_loader.PyModuleLoader.fetch_existing_module_dotpath", "automata.symbol.graph.symbol_navigator.process_symbol_bounds", "automata.experimental.search.symbol_search.SymbolSearch.retrieve_source_code_by_symbol", "automata.code_parsers.py.dotpath_map.DotPathMap.get_module_dotpath_by_fpath", "automata.symbol.graph.symbol_navigator.SymbolGraphNavigator._get_symbol_containing_file", "automata.experimental.search.symbol_search.SymbolSearch.symbol_references", "automata.embedding.embedding_base.EmbeddingBuilder.fetch_embedding_source_code"], "k": 20}
{"task_id": "ContextCodeRetrieval/182", "query": "What class provides embeddings from the OpenAI API?", "truth_top_match": "automata.llm.providers.openai_llm.OpenAIEmbeddingProvider", "top_k_matches": ["automata.llm.providers.openai_llm.OpenAIEmbeddingProvider", "automata.embedding.embedding_base.EmbeddingVectorProvider", "automata.embedding.embedding_base.Embedding", "automata.config.config_base.LLMProvider", "automata.embedding.embedding_base.EmbeddingBuilder", "automata.config.config_base.AgentConfig.Config", "automata.experimental.symbol_embedding.symbol_doc_embedding_builder.SymbolDocEmbeddingBuilder", "automata.symbol_embedding.symbol_embedding_base.SymbolEmbedding", "automata.llm.providers.openai_llm.OpenAIConversation", "automata.symbol_embedding.symbol_embedding_base.SymbolDocEmbedding"], "k": 20}
{"task_id": "ContextCodeRetrieval/183", "query": "Which class represents written code in action?", "truth_top_match": "automata.eval.agent.code_writing_eval.CodeWritingAction", "top_k_matches": ["automata.eval.agent.code_writing_eval.CodeWritingAction", "automata.eval.agent.code_writing_eval.CodeWritingEval", "automata.tests.unit.sample_modules.sample3.MyClass", "automata.eval.agent.code_writing_eval.CodeWritingAction.__repr__", "automata.eval.agent.code_writing_eval.CodeWritingAction.from_payload", "automata.eval.agent.code_writing_eval.CodeWritingAction.__eq__", "automata.eval.agent.code_writing_eval.CodeWritingEval._filter_actions", "automata.tests.unit.sample_modules.my_project.core.calculator.Calculator", "automata.eval.agent.code_writing_eval.CodeExecutionError", "automata.tests.unit.sample_modules.my_project.core.extended.calculator3.Calculator3.Calculator4"], "k": 20}
{"task_id": "ContextCodeRetrieval/184", "query": "Which class is used as a builder for tools which provide an execution environment for the agent?", "truth_top_match": "automata.experimental.tools.builders.py_interpreter.PyInterpreterToolkitBuilder", "top_k_matches": ["automata.experimental.tools.builders.py_interpreter.PyInterpreterToolkitBuilder", "automata.agent.openai_agent.OpenAIAgentToolkitBuilder", "automata.agent.agent.AgentToolkitBuilder", "automata.experimental.tools.builders.py_interpreter.PyInterpreterOpenAIToolkitBuilder", "automata.experimental.tools.builders.advanced_context_oracle_builder.AdvancedContextOracleOpenAIToolkitBuilder", "automata.experimental.tools.builders.agentified_search_builder.AgentifiedSearchOpenAIToolkitBuilder", "automata.experimental.tools.builders.document_oracle_builder.DocumentOracleOpenAIToolkitBuilder", "automata.tools.tool_executor.ToolExecutor", "automata.experimental.tools.builders.agentified_search_builder.AgentifiedSearchToolkitBuilder", "automata.experimental.tools.builders.document_oracle_builder.DocumentOracleToolkitBuilder"], "k": 20}
{"task_id": "ContextCodeRetrieval/185", "query": "How does the SymbolEmbeddingHandler filter the symbols?", "truth_top_match": "automata.symbol_embedding.symbol_embedding_handler.SymbolEmbeddingHandler.filter_symbols", "top_k_matches": ["automata.symbol_embedding.symbol_embedding_handler.SymbolEmbeddingHandler", "automata.cli.scripts.run_code_embedding.process_embeddings", "automata.experimental.memory_store.symbol_doc_embedding_handler.SymbolDocEmbeddingHandler", "automata.memory_store.symbol_code_embedding_handler.SymbolCodeEmbeddingHandler", "automata.experimental.memory_store.symbol_doc_embedding_handler.SymbolDocEmbeddingHandler.process_embedding", "automata.memory_store.symbol_code_embedding_handler.SymbolCodeEmbeddingHandler.process_embedding", "automata.embedding.embedding_base.EmbeddingHandler", "automata.embedding.embedding_base.EmbeddingHandler.process_embedding", "automata.symbol_embedding.symbol_embedding_handler.SymbolEmbeddingHandler.process_embedding", "automata.experimental.memory_store.symbol_doc_embedding_handler.SymbolDocEmbeddingHandler._create_new_embedding"], "k": 20}
{"task_id": "ContextCodeRetrieval/186", "query": "What method is used to convert a CodeWritingAction into a payload?", "truth_top_match": "automata.eval.agent.code_writing_eval.CodeWritingAction.to_payload", "top_k_matches": ["automata.eval.agent.code_writing_eval.CodeWritingAction.to_payload", "automata.eval.agent.code_writing_eval.CodeWritingAction.from_payload", "automata.eval.agent.code_writing_eval.CodeWritingAction", "automata.tests.unit.agent_eval.test_agent_eval_actions_results.test_complex_payload", "automata.eval.agent.openai_function_eval.OpenAIFunctionCallAction.to_payload", "automata.eval.agent.openai_function_eval.OpenAIFunctionCallAction.from_payload", "automata.eval.eval_base.Action.to_payload", "automata.eval.agent.code_writing_eval.CodeWritingEval", "automata.eval.tool.search_eval.SymbolSearchAction.to_payload", "automata.eval.tool.search_eval.SymbolSearchAction.from_payload"], "k": 20}
{"task_id": "ContextCodeRetrieval/187", "query": "What class represents a line item in a bounding box?", "truth_top_match": "automata.core.ast_handlers.LineItem", "top_k_matches": ["automata.core.ast_handlers.LineItem", "automata.core.ast_handlers.BoundingBox", "automata.tests.unit.ast_utils.test_ast_utils_bounding_box.bounding_box", "automata.tests.unit.ast_utils.test_ast_utils_bounding_box.test_bounding_box_creation", "automata.tests.unit.ast_utils.test_ast_utils_bounding_box.test_fetch_bounding_box_with_class_node", "automata.tests.unit.ast_utils.test_ast_utils_bounding_box.line_item", "automata.tests.unit.ast_utils.test_ast_utils_bounding_box.test_fetch_bounding_box_with_class_node_in_file", "automata.core.ast_handlers.fetch_bounding_box", "automata.tests.unit.ast_utils.test_ast_utils_bounding_box.test_line_item_creation", "automata.tests.unit.ast_utils.test_ast_utils_bounding_box.test_fetch_bounding_box_with_function_node"], "k": 20}
{"task_id": "ContextCodeRetrieval/188", "query": "What method can reset the entire dependency cache in DependencyFactory?", "truth_top_match": "automata.singletons.dependency_factory.DependencyFactory.reset", "top_k_matches": ["automata.tests.unit.singletons.test_singletons_dependency_factory.test_reset", "automata.singletons.dependency_factory.DependencyFactory.reset", "automata.tests.unit.singletons.test_singletons_dependency_factory.dependency_factory", "automata.singletons.dependency_factory.DependencyFactory", "automata.singletons.py_module_loader.PyModuleLoader.reset", "automata.tests.unit.singletons.test_singletons_dependency_factory.test_set_overrides_raises_exception", "automata.context_providers.symbol_synchronization_context.SymbolProviderRegistry.reset", "automata.tests.unit.singletons.test_singletons_dependency_factory.test_get_with_override", "automata.singletons.dependency_factory.DependencyFactory.create_py_context_retriever", "automata.singletons.dependency_factory.DependencyFactory.set_overrides"], "k": 20}
{"task_id": "ContextCodeRetrieval/189", "query": "How are actions extracted from messages in the OpenAIFunctionEval class?", "truth_top_match": "automata.eval.agent.openai_function_eval.OpenAIFunctionEval.extract_action", "top_k_matches": ["automata.eval.agent.openai_function_eval.OpenAIFunctionEval", "automata.eval.agent.openai_function_eval.OpenAIFunctionEval.extract_action", "automata.eval.agent.code_writing_eval.CodeWritingEval.extract_action", "automata.eval.agent.agent_eval_composite.AgentEvalComposite.extract_action", "automata.eval.agent.openai_function_eval.OpenAIFunctionCallAction", "automata.tests.unit.tool_eval.test_symbol_search_eval.test_symbol_search_eval_extract_action", "automata.eval.agent.openai_function_eval.OpenAIFunctionEval._filter_actions", "automata.eval.agent.openai_function_eval.OpenAIFunctionCallAction.from_payload", "automata.eval.tool.tool_eval.ToolEval.extract_action", "automata.eval.agent.code_writing_eval.CodeWritingEval"], "k": 20}
{"task_id": "ContextCodeRetrieval/190", "query": "What method does the IAutomataTaskExecution interface use to execute a task?", "truth_top_match": "automata.tasks.task_executor.IAutomataTaskExecution.execute", "top_k_matches": ["automata.tasks.task_executor.IAutomataTaskExecution", "automata.tasks.task_executor.AutomataTaskExecutor", "automata.tasks.task_executor.IAutomataTaskExecution.execute", "automata.tests.unit.task.test_task_executor.test_execute_automata_task_success", "automata.tasks.task_base.ITaskExecution", "automata.tasks.task_environment.AutomataTaskEnvironment", "automata.tasks.task_executor.AutomataTaskExecutor.execute", "automata.core.run_handlers.run_with_task", "automata.eval.eval_error.EvalExecutionError", "automata.tests.unit.task.test_task_executor.test_execute_automata_task_fail"], "k": 20}
{"task_id": "ContextCodeRetrieval/191", "query": "Which method is used to indicate the construction of embedding for a symbol?", "truth_top_match": "automata.embedding.embedding_base.EmbeddingBuilder.build", "top_k_matches": ["automata.symbol_embedding.symbol_embedding_builders.SymbolCodeEmbeddingBuilder", "automata.tests.conftest.embedding_maker._make_embedding", "automata.experimental.symbol_embedding.symbol_doc_embedding_builder.SymbolDocEmbeddingBuilder", "automata.tests.unit.symbol_embedding.test_persistent_symbol_embedding.create_embedding", "automata.symbol_embedding.symbol_embedding_builders.SymbolCodeEmbeddingBuilder.build", "automata.embedding.embedding_base.EmbeddingBuilder.build", "automata.embedding.embedding_base.EmbeddingBuilder", "automata.symbol_embedding.symbol_embedding_handler.SymbolEmbeddingHandler.process_embedding", "automata.memory_store.symbol_code_embedding_handler.SymbolCodeEmbeddingHandler.process_embedding", "automata.symbol_embedding.symbol_embedding_base.SymbolCodeEmbedding"], "k": 20}
{"task_id": "ContextCodeRetrieval/192", "query": "What abstract method is used to determine if an evaluation was a partial match?", "truth_top_match": "automata.eval.eval_base.EvalResult.is_partial_match", "top_k_matches": ["automata.eval.eval_base.EvalResult.is_partial_match", "automata.eval.eval_base.EvalResult.is_full_match", "automata.eval.agent.agent_eval.AgentEvalResult.is_partial_match", "automata.eval.tool.search_eval.SymbolSearchEvalResult.is_partial_match", "automata.eval.tool.tool_eval_metrics.ToolEvaluationMetrics.partial_match_rate", "automata.eval.tool.tool_eval_metrics.ToolEvaluationMetrics.total_partial_matches", "automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics.total_partial_matches", "automata.tests.unit.tool_eval.test_symbol_search_eval.test_symbol_search_eval_result_partial_match", "automata.eval.tool.tool_eval_metrics.ToolEvaluationMetrics.full_match_rate", "automata.eval.eval_base.EvalResult"], "k": 20}
{"task_id": "ContextCodeRetrieval/193", "query": "What method is used to update an existing embedding for a symbol if necessary?", "truth_top_match": "automata.experimental.memory_store.symbol_doc_embedding_handler.SymbolDocEmbeddingHandler._update_existing_embedding", "top_k_matches": ["automata.experimental.memory_store.symbol_doc_embedding_handler.SymbolDocEmbeddingHandler._update_existing_embedding", "automata.memory_store.symbol_code_embedding_handler.SymbolCodeEmbeddingHandler.process_embedding", "automata.experimental.memory_store.symbol_doc_embedding_handler.SymbolDocEmbeddingHandler.process_embedding", "automata.experimental.memory_store.symbol_doc_embedding_handler.SymbolDocEmbeddingHandler", "automata.memory_store.symbol_code_embedding_handler.SymbolCodeEmbeddingHandler._update_existing_embedding", "automata.tests.unit.symbol_embedding.test_symbol_embedding.test_update_embedding", "automata.symbol_embedding.symbol_embedding_handler.SymbolEmbeddingHandler.process_embedding", "automata.tests.unit.symbol_embedding.test_symbol_embedding.test_update_embeddings", "automata.tests.conftest.embedding_maker._make_embedding", "automata.symbol_embedding.symbol_embedding_handler.SymbolEmbeddingHandler"], "k": 20}
{"task_id": "ContextCodeRetrieval/194", "query": "Which class writes evaluation results to a SQLite database?", "truth_top_match": "automata.eval.agent.agent_eval_database.AgentEvalResultDatabase", "top_k_matches": ["automata.eval.agent.agent_eval_database.AgentEvalResultDatabase", "automata.eval.agent.agent_eval_database.AgentEvalResultDatabase.write_result", "automata.eval.agent.agent_eval_database.AgentEvalResultDatabase.__init__", "automata.tests.unit.agent_eval.test_agent_eval_database.test_eval_result_writer", "automata.tests.unit.agent_eval.test_eval_database.test_eval_result_writer", "automata.eval.agent.agent_eval_harness.AgentEvaluationHarness.__init__", "automata.core.base.database.relational_database.SQLDatabase", "automata.eval.agent.agent_eval_harness.AgentEvaluationHarness", "automata.eval.eval_base.EvalResult", "automata.eval.agent.code_writing_eval.CodeWritingEval"], "k": 20}
{"task_id": "ContextCodeRetrieval/195", "query": "Which function creates a new local Symbol?", "truth_top_match": "automata.symbol.symbol_parser.new_local_symbol", "top_k_matches": ["automata.symbol.symbol_parser.new_local_symbol", "automata.singletons.dependency_factory.DependencyFactory.create_symbol_search", "automata.symbol.symbol_base.Symbol", "automata.tests.unit.cli.test_cli_scripts_run_doc_embedding.FakeSymbol", "automata.singletons.dependency_factory.DependencyFactory.create_symbol_rank", "automata.singletons.dependency_factory.DependencyFactory.create_symbol_graph", "automata.experimental.memory_store.symbol_doc_embedding_handler.SymbolDocEmbeddingHandler._create_new_embedding", "automata.symbol.symbol_parser.parse_symbol", "automata.symbol_embedding.symbol_embedding_base.SymbolEmbedding.symbol", "automata.symbol.symbol_base.Symbol.from_string"], "k": 20}
{"task_id": "ContextCodeRetrieval/196", "query": "What's the purpose of the class `AutomataTask`?", "truth_top_match": "automata.tasks.automata_task.AutomataTask", "top_k_matches": ["automata.tasks.task_executor.IAutomataTaskExecution", "automata.tasks.task_registry.AutomataTaskRegistry", "automata.tasks.task_executor.AutomataTaskExecutor", "automata.tasks.task_environment.AutomataTaskEnvironment", "automata.tasks.task_error.TaskStateError", "automata.tasks.automata_task.AutomataTask", "automata.tasks.task_error.TaskGeneralError", "automata.tests.unit.task.test_task_database.task", "automata.tasks.task_error.TaskInstructionsError", "automata.tasks.task_database.AutomataAgentTaskDatabase"], "k": 20}
{"task_id": "ContextCodeRetrieval/197", "query": "Which method is used to retrieve all the embeddings entries in a sorted order?", "truth_top_match": "automata.embedding.embedding_base.EmbeddingHandler.get_all_ordered_embeddings", "top_k_matches": ["automata.symbol_embedding.vector_databases.ChromaSymbolEmbeddingVectorDatabase.get_all_ordered_embeddings", "automata.embedding.embedding_base.EmbeddingHandler.get_all_ordered_embeddings", "automata.symbol_embedding.symbol_embedding_handler.SymbolEmbeddingHandler.get_all_ordered_embeddings", "automata.core.base.database.vector_database.ChromaVectorDatabase.get_all_ordered_embeddings", "automata.symbol_embedding.vector_databases.JSONSymbolEmbeddingVectorDatabase.get_all_ordered_embeddings", "automata.core.base.database.vector_database.VectorDatabaseProvider.get_all_ordered_embeddings", "automata.core.base.database.vector_database.JSONVectorDatabase.get_all_ordered_embeddings", "automata.symbol_embedding.vector_databases.ChromaSymbolEmbeddingVectorDatabase._sort_entries", "automata.tests.unit.symbol_embedding.test_symbol_embedding.test_get_embedding", "automata.symbol_embedding.vector_databases.ChromaSymbolEmbeddingVectorDatabase"], "k": 20}
{"task_id": "ContextCodeRetrieval/198", "query": "Which method of the task database retrieves tasks based on a specified query?", "truth_top_match": "automata.tasks.task_database.AutomataAgentTaskDatabase.get_tasks_by_query", "top_k_matches": ["automata.tests.unit.task.test_task_database.test_get_tasks_by_query", "automata.tasks.task_database.AutomataAgentTaskDatabase", "automata.tasks.task_database.AutomataAgentTaskDatabase.get_tasks_by_query", "automata.tests.unit.task.test_task_database.test_get_tasks_by_query_with_sql_string", "automata.tasks.task_registry.AutomataTaskRegistry.get_all_tasks", "automata.tests.unit.task.test_task_database.test_update_task", "automata.tests.unit.task.test_task_database.test_get_all_tasks", "automata.tests.unit.task.test_task_database.test_update_task_2", "automata.tasks.task_registry.AutomataTaskRegistry.fetch_task_by_id", "automata.tests.unit.task.test_task_database.test_contains"], "k": 20}
{"task_id": "ContextCodeRetrieval/199", "query": "Which method in SymbolSearch applies a function to each value in a dictionary and returns a new dictionary?", "truth_top_match": "automata.experimental.search.symbol_search.SymbolSearch.transform_dict_values", "top_k_matches": ["automata.experimental.search.symbol_search.SymbolSearch", "automata.experimental.search.symbol_search.SymbolSearch.transform_dict_values", "automata.tests.unit.tool_eval.test_symbol_search_eval.test_symbol_search_eval_extract_action", "automata.tests.unit.tool_eval.test_symbol_search_eval.test_generate_eval_result", "automata.eval.tool.search_eval.SymbolSearchEval", "automata.tests.unit.symbol.test_symbol_search.test_symbol_rank_search", "automata.tests.unit.symbol.test_symbol_search_tool.test_symbol_rank_search", "automata.symbol.graph.symbol_navigator.SymbolGraphNavigator.get_potential_symbol_callers", "automata.tests.unit.database.test_database_vector.test_lookup_symbol", "automata.symbol.graph.symbol_graph.SymbolGraph.get_potential_symbol_callers"], "k": 20}
{"task_id": "ContextCodeRetrieval/200", "query": "How to get all entries in the database in a sorted order?", "truth_top_match": "automata.symbol_embedding.vector_databases.ChromaSymbolEmbeddingVectorDatabase.get_all_ordered_embeddings", "top_k_matches": ["automata.symbol_embedding.vector_databases.ChromaSymbolEmbeddingVectorDatabase.get_all_ordered_embeddings", "automata.symbol_embedding.symbol_embedding_handler.SymbolEmbeddingHandler.get_all_ordered_embeddings", "automata.symbol_embedding.vector_databases.ChromaSymbolEmbeddingVectorDatabase.get_ordered_keys", "automata.embedding.embedding_base.EmbeddingHandler.get_all_ordered_embeddings", "automata.core.base.database.vector_database.VectorDatabaseProvider.get_ordered_keys", "automata.tests.unit.database.test_database_sql.test_update_entry", "automata.core.base.database.vector_database.VectorDatabaseProvider.get_all_ordered_embeddings", "automata.symbol_embedding.vector_databases.JSONSymbolEmbeddingVectorDatabase.get_ordered_keys", "automata.tasks.task_registry.AutomataTaskRegistry.get_all_tasks", "automata.symbol_embedding.vector_databases.ChromaSymbolEmbeddingVectorDatabase._sort_entries"], "k": 20}
{"task_id": "ContextCodeRetrieval/201", "query": "Which function contains the CLI command responsible for running the agent?", "truth_top_match": "automata.cli.commands.run_agent", "top_k_matches": ["automata.tests.unit.cli.test_cli_commands.test_cli_run_agent", "automata.cli.commands.run_agent", "automata.cli.scripts.run_agent.main", "automata.cli.commands.run_agent_eval", "automata.cli.options.agent_options", "automata.cli.scripts.run_agent_eval.main", "automata.cli.scripts.run_tool_eval.main", "automata.agent.openai_agent.OpenAIAutomataAgent", "automata.tests.unit.sample_modules.sample2.PythonAgentToolkit.python_agent_python_task", "automata.cli.commands.run_tool_eval"], "k": 20}
{"task_id": "ContextCodeRetrieval/202", "query": "What method in class Tool runs the function with the provided input?", "truth_top_match": "automata.tools.tool_base.Tool.run", "top_k_matches": ["automata.tests.conftest.TestTool", "automata.tools.tool_base.Tool.run", "automata.tools.tool_base.Tool", "automata.tests.unit.tool.test_tool.test_tool_run", "automata.tools.tool_executor.ToolExecutor", "automata.tools.tool_executor.ToolExecution", "automata.tests.conftest.TestTool.run", "automata.tests.unit.tool.test_tool.test_tool_executor", "automata.tests.unit.tool.test_tool.test_tool_execution", "automata.tools.tool_executor.ToolExecution.execute"], "k": 20}
{"task_id": "ContextCodeRetrieval/203", "query": "What method retrieves all references to a `Symbol` based on 'reference' label?", "truth_top_match": "automata.symbol.graph.symbol_navigator.SymbolGraphNavigator.get_references_to_symbol", "top_k_matches": ["automata.symbol.graph.symbol_navigator.SymbolGraphNavigator.get_references_to_symbol", "automata.symbol.graph.symbol_navigator.SymbolGraphNavigator._get_symbol_references_in_scope", "automata.symbol.graph.symbol_graph.SymbolGraph.get_references_to_symbol", "automata.experimental.search.symbol_search.SymbolSearch.symbol_references", "automata.symbol.graph.symbol_navigator.SymbolGraphNavigator.get_potential_symbol_callees", "automata.symbol.graph.symbol_navigator.SymbolGraphNavigator.get_potential_symbol_callers", "automata.experimental.tools.builders.symbol_search_builder.SymbolSearchToolkitBuilder._symbol_references_processor", "automata.symbol.graph.symbol_navigator.SymbolGraphNavigator._get_references_to_module", "automata.symbol.graph.symbol_navigator.SymbolGraphNavigator.get_symbol_dependencies", "automata.symbol.graph.graph_builder.GraphBuilder._process_references"], "k": 20}
{"task_id": "ContextCodeRetrieval/204", "query": "What class represents the different categories of serialized data?", "truth_top_match": "automata.config.config_base.SerializedDataCategory", "top_k_matches": ["automata.config.config_base.SerializedDataCategory", "automata.config.config_base.EmbeddingDataCategory", "automata.config.config_base.ConfigCategory", "automata.experimental.code_parsers.py.context_processing.context_retriever.ContextComponent", "automata.symbol.graph.symbol_graph_types.SymbolGraphType", "automata.symbol.symbol_base.SymbolDescriptor.PyKind", "automata.tests.unit.context_retriever.test_context_retriever.test_class_attributes_in_source_code.TestClass", "automata.tests.unit.context_retriever.test_context_retriever.test_nested_class_detection.Parent", "automata.symbol.symbol_utils.load_data_path", "automata.embedding.embedding_base.EmbeddingNormType"], "k": 20}
{"task_id": "ContextCodeRetrieval/205", "query": "What function formats expected strings into the config?", "truth_top_match": "automata.core.utils.format_text", "top_k_matches": ["automata.core.utils.format_text", "automata.llm.providers.openai_llm.OpenAIFunction.prompt_format", "automata.config.formatter.TemplateFormatter", "automata.tools.tool_base.Tool.Config", "automata.config.openai_config.OpenAIAutomataAgentConfig._formatted_instruction", "automata.agent.openai_agent.OpenAIAutomataAgent._build_initial_messages", "automata.config.config_base.AgentConfig.Config", "automata.config.formatter.TemplateFormatter.create_default_formatter", "automata.tests.unit.automata_agent.test_automata_agent.test_build_initial_messages", "automata.cli.commands.configure"], "k": 20}
{"task_id": "ContextCodeRetrieval/206", "query": "How to prepare the similarity input dictionary for the SymbolRank algorithm?", "truth_top_match": "automata.experimental.search.symbol_rank.SymbolRank._prepare_query_to_symbol_similarity", "top_k_matches": ["automata.experimental.search.symbol_rank.SymbolRank._prepare_query_to_symbol_similarity", "automata.experimental.search.symbol_rank.SymbolRank", "automata.experimental.search.symbol_rank.SymbolRank.get_ordered_ranks", "automata.tests.unit.symbol.test_symbol_rank.test_prepare_initial_ranks", "automata.experimental.search.symbol_rank.SymbolRank._prepare_dangling_weights", "automata.experimental.search.symbol_search.SymbolSearch.get_symbol_rank_results", "automata.embedding.embedding_base.EmbeddingSimilarityCalculator.calculate_query_similarity_dict", "automata.experimental.search.symbol_search.SymbolSearch", "automata.experimental.search.symbol_search.SymbolSearch.get_symbol_code_similarity_results", "automata.experimental.tools.builders.symbol_search_builder.SymbolSearchToolkitBuilder._symbol_code_similarity_search_processor"], "k": 20}
{"task_id": "ContextCodeRetrieval/207", "query": "Which method in automata.eval.tool.search_eval.SymbolSearchEval converts the evaluation result to a ToolEvalResult?", "truth_top_match": "automata.eval.tool.search_eval.SymbolSearchEval.to_tool_result", "top_k_matches": ["automata.eval.tool.search_eval.SymbolSearchEval", "automata.eval.tool.search_eval.SymbolSearchEvalResult", "automata.tests.unit.tool_eval.test_symbol_search_eval.test_symbol_search_eval_to_tool_result", "automata.eval.tool.tool_eval.ToolEvalResult", "automata.eval.tool.search_eval.SymbolSearchEval.to_tool_result", "automata.eval.tool.tool_eval.ToolEval", "automata.tests.conftest.tool_eval_harness", "automata.eval.tool.tool_eval_harness.ToolEvaluationHarness", "automata.eval.tool.tool_eval_metrics.ToolEvaluationMetrics", "automata.experimental.tools.builders.symbol_search_builder.SymbolSearchOpenAIToolkitBuilder"], "k": 20}
{"task_id": "ContextCodeRetrieval/208", "query": "Which method within AgentEvalResult is utilized for converting the result into a dictionary?", "truth_top_match": "automata.eval.agent.agent_eval.AgentEvalResult.to_payload", "top_k_matches": ["automata.eval.agent.agent_eval.AgentEvalResult", "automata.eval.agent.agent_eval.AgentEvalResult.from_payload", "automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics", "automata.eval.agent.agent_eval.AgentEvalResult.__repr__", "automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics.__init__", "automata.eval.tool.search_eval.SymbolSearchEvalResult.to_payload", "automata.eval.eval_base.EvalResult.to_payload", "automata.eval.agent.agent_eval_composite.aggregate_agent_result", "automata.eval.agent.agent_eval.AgentEvalResult.to_payload", "automata.eval.eval_base.EvalResult.from_payload"], "k": 20}
{"task_id": "ContextCodeRetrieval/209", "query": "What method in AgentConfigBuilder builds and returns an Agent instance with the current configuration?", "truth_top_match": "automata.config.config_base.AgentConfigBuilder.build", "top_k_matches": ["automata.config.config_base.AgentConfigBuilder.build", "automata.config.config_base.AgentConfigBuilder.from_config", "automata.tests.unit.automata_agent.test_automata_agent_builder.test_builder_creates_proper_instance", "automata.config.config_base.AgentConfigBuilder", "automata.config.openai_config.OpenAIAutomataAgentConfigBuilder", "automata.config.config_base.AgentConfigBuilder.from_name", "automata.tests.conftest.automata_agent_config_builder", "automata.tasks.task_executor.IAutomataTaskExecution._build_agent", "automata.tests.conftest.automata_agent", "automata.tests.unit.automata_agent.test_automata_agent_builder.test_builder_default_config"], "k": 20}
{"task_id": "ContextCodeRetrieval/210", "query": "Which method checks if a directory is a leaf directory?", "truth_top_match": "automata.code_parsers.directory.Directory.is_leaf_dir", "top_k_matches": ["automata.code_parsers.directory.Directory.is_leaf_dir", "automata.code_parsers.directory.Directory.is_root_dir", "automata.code_parsers.directory.Directory", "automata.tests.unit.directory_manager.test_directory_manager.test_load_directory_structure", "automata.code_parsers.directory.Directory.get_subdirectories", "automata.code_parsers.directory.DirectoryManager._load_directory_structure", "automata.tests.unit.directory_manager.test_directory_manager.test_get_subdirectories", "automata.code_parsers.directory.DirectoryManager", "automata.tests.unit.module_loader.test_module_loader.test_directory_without_init", "automata.tests.unit.directory_manager.test_directory_manager.test_get_node_for_path"], "k": 20}
{"task_id": "ContextCodeRetrieval/211", "query": "What class provides an execution environment for the agent?", "truth_top_match": "automata.experimental.tools.builders.py_interpreter.PyInterpreter", "top_k_matches": ["automata.experimental.tools.builders.py_interpreter.PyInterpreter", "automata.tests.unit.task.test_task_executor.TestExecuteBehavior", "automata.agent.openai_agent.OpenAIAutomataAgent", "automata.tasks.task_executor.IAutomataTaskExecution", "automata.eval.agent.agent_eval_harness.AgentEvaluationHarness", "automata.agent.agent.Agent", "automata.eval.agent.agent_eval.AgentEval", "automata.tests.unit.sample_modules.sample2.PythonAgentToolkit.python_agent_python_task", "automata.tests.conftest.agent_eval_harness", "automata.tasks.task_base.TaskEnvironment"], "k": 20}
{"task_id": "ContextCodeRetrieval/212", "query": "Which method creates an AgentConfigBuilder instance using a provided configuration object name?", "truth_top_match": "automata.config.config_base.AgentConfigBuilder.from_name", "top_k_matches": ["automata.config.config_base.AgentConfigBuilder.from_name", "automata.config.config_base.AgentConfigBuilder.from_config", "automata.config.config_base.AgentConfigBuilder.create_config", "automata.config.openai_config.OpenAIAutomataAgentConfigBuilder.create_config", "automata.config.config_base.AgentConfigBuilder", "automata.tests.conftest.automata_agent_config_builder", "automata.config.openai_config.OpenAIAutomataAgentConfig.load", "automata.config.openai_config.OpenAIAutomataAgentConfigBuilder", "automata.tests.unit.automata_agent.test_automata_agent_builder.test_builder_creates_proper_instance", "automata.config.config_base.AgentConfig.load"], "k": 20}
{"task_id": "ContextCodeRetrieval/213", "query": "What method decommissions the taskEnvironment in AutomataTaskEnvironment?", "truth_top_match": "automata.tasks.task_environment.AutomataTaskEnvironment.teardown", "top_k_matches": ["automata.tasks.task_environment.AutomataTaskEnvironment", "automata.tasks.task_base.TaskEnvironment.teardown", "automata.tasks.task_environment.AutomataTaskEnvironment.teardown", "automata.tests.conftest.task_environment", "automata.tasks.task_base.TaskEnvironment", "automata.core.run_handlers.initialize_automata", "automata.tasks.task_environment.AutomataTaskEnvironment.reset", "automata.tests.regression.test_agent_end_to_end.automata_setup", "automata.tasks.task_environment.AutomataTaskEnvironment.setup", "automata.tests.unit.task.test_task_executor.test_execute_automata_task_success"], "k": 20}
{"task_id": "ContextCodeRetrieval/214", "query": "How does the DependencyFactory create a `SymbolGraph` instance?", "truth_top_match": "automata.singletons.dependency_factory.DependencyFactory.create_symbol_graph", "top_k_matches": ["automata.singletons.dependency_factory.DependencyFactory.create_symbol_graph", "automata.tests.unit.singletons.test_singletons_dependency_factory.test_create_subgraph_is_instance", "automata.tests.unit.singletons.test_singletons_dependency_factory.test_create_symbol_graph", "automata.symbol.graph.symbol_graph.SymbolGraph", "automata.singletons.dependency_factory.DependencyFactory", "automata.tests.unit.singletons.test_singletons_dependency_factory.test_get_with_override", "automata.tests.unit.singletons.test_singletons_dependency_factory.test_create_symbol_search", "automata.experimental.scripts.run_update_tool_eval.process_symbol_graph", "automata.symbol.graph.symbol_graph.SymbolGraph.__init__", "automata.symbol.graph.graph_builder.GraphBuilder"], "k": 20}
{"task_id": "ContextCodeRetrieval/215", "query": "How do we get the default rankable subgraph of a SymbolGraph?", "truth_top_match": "automata.symbol.graph.symbol_graph.SymbolGraph.default_rankable_subgraph", "top_k_matches": ["automata.singletons.dependency_factory.DependencyFactory.create_subgraph", "automata.symbol.graph.symbol_graph.SymbolGraph._build_default_rankable_subgraph", "automata.experimental.search.symbol_search.SymbolSearch.symbol_rank", "automata.symbol.graph.symbol_graph.SymbolGraph.default_rankable_subgraph", "automata.cli.scripts.run_code_embedding.collect_symbols", "automata.singletons.dependency_factory.DependencyFactory.create_symbol_rank", "automata.experimental.scripts.run_update_tool_eval.process_symbol_graph", "automata.experimental.search.symbol_rank.SymbolRank", "automata.symbol.graph.symbol_graph.SymbolGraph._build_rankable_subgraph", "automata.tests.unit.symbol.test_symbol_rank.test_get_ranks_small_graph"], "k": 20}
{"task_id": "ContextCodeRetrieval/216", "query": "What method in _SymbolParser is used to accept an identifier from the `Symbol`, where the identifier is escaped by spaces?", "truth_top_match": "automata.symbol.symbol_parser._SymbolParser.accept_space_escaped_identifier", "top_k_matches": ["automata.symbol.symbol_parser._SymbolParser.accept_space_escaped_identifier", "automata.symbol.symbol_parser._SymbolParser", "automata.symbol.symbol_parser._SymbolParser.accept_backtick_escaped_identifier", "automata.symbol.symbol_parser._SymbolParser.accept_identifier", "automata.symbol.symbol_parser.parse_symbol", "automata.symbol.symbol_parser._SymbolParser.accept_escaped_identifier", "automata.symbol.symbol_parser._SymbolParser.parse_descriptor", "automata.symbol.symbol_base.Symbol", "automata.tests.unit.symbol.test_symbol_base.test_parsed_symbol", "automata.tests.unit.symbol.test_symbol_parser._unparse"], "k": 20}
{"task_id": "ContextCodeRetrieval/217", "query": "Which method is used to add a label to an issue on the remote repository?", "truth_top_match": "automata.singletons.github_client.GitHubClient.add_label", "top_k_matches": ["automata.singletons.github_client.GitHubClient.add_label", "automata.singletons.github_client.GitHubClient.create_label", "automata.singletons.github_client.GitHubClient.remove_label", "automata.singletons.github_client.GitHubClient.create_issue", "automata.singletons.github_client.GitHubClient.create_issue_comment", "automata.tests.unit.singletons.test_singletons_github_client.test_create_issue", "automata.singletons.github_client.GitHubClient.remove_issue_comment", "automata.tests.unit.singletons.test_singletons_github_client.test_stage_all_changes", "automata.singletons.github_client.GitHubClient.fetch_issue", "automata.tests.unit.github.test_github_client.test_create_issue"], "k": 20}
{"task_id": "ContextCodeRetrieval/218", "query": "Which method in the SymbolSearch class fetches the list of the SymbolRank similar symbols ordered by rank?", "truth_top_match": "automata.experimental.search.symbol_search.SymbolSearch.get_symbol_rank_results", "top_k_matches": ["automata.experimental.search.symbol_search.SymbolSearch.get_symbol_rank_results", "automata.experimental.code_parsers.py.context_processing.context_handler.PyContextHandler.get_symbol_rank_matches", "automata.experimental.search.symbol_search.SymbolSearch.get_symbol_code_similarity_results", "automata.experimental.search.symbol_rank.SymbolRank.get_ordered_ranks", "automata.cli.scripts.run_code_embedding.collect_symbols", "automata.experimental.search.symbol_search.SymbolSearch", "automata.experimental.search.symbol_rank.SymbolRank", "automata.experimental.scripts.run_update_tool_eval.process_symbol_graph", "automata.experimental.tools.builders.symbol_search_builder.SymbolSearchToolkitBuilder._symbol_rank_search_processor", "automata.experimental.search.symbol_search.SymbolSearch.symbol_rank"], "k": 20}
{"task_id": "ContextCodeRetrieval/219", "query": "Which abstract method is used to add new edges of a specified type to the graph?", "truth_top_match": "automata.symbol.graph.symbol_graph_base.GraphProcessor.process", "top_k_matches": ["automata.symbol.graph.symbol_graph_base.GraphProcessor.process", "automata.symbol.graph.symbol_graph_base.GraphProcessor", "automata.symbol.graph.symbol_relationships.RelationshipProcessor.process", "automata.symbol.graph.symbol_relationships.RelationshipProcessor", "automata.symbol.graph.symbol_caller_callees.CallerCalleeProcessor.process", "automata.symbol.graph.symbol_caller_callees.CallerCalleeProcessor", "automata.symbol.graph.symbol_references.ReferenceProcessor", "automata.symbol.graph.symbol_references.ReferenceProcessor.process", "automata.symbol.graph.symbol_graph_types.SymbolGraphType", "automata.symbol.graph.graph_builder.GraphBuilder._add_symbol_vertices"], "k": 20}
{"task_id": "ContextCodeRetrieval/220", "query": "Which class is a builder for toolkit for OpenAI API and provides the tools of context oracle?", "truth_top_match": "automata.experimental.tools.builders.document_oracle_builder.DocumentOracleOpenAIToolkitBuilder", "top_k_matches": ["automata.experimental.tools.builders.advanced_context_oracle_builder.AdvancedContextOracleOpenAIToolkitBuilder", "automata.experimental.tools.builders.document_oracle_builder.DocumentOracleOpenAIToolkitBuilder", "automata.experimental.tools.builders.advanced_context_oracle_builder.AdvancedContextOracleToolkitBuilder", "automata.experimental.tools.builders.document_oracle_builder.DocumentOracleToolkitBuilder.build", "automata.experimental.tools.builders.advanced_context_oracle_builder.AdvancedContextOracleOpenAIToolkitBuilder.build_for_open_ai", "automata.experimental.tools.builders.advanced_context_oracle_builder.AdvancedContextOracleToolkitBuilder.build", "automata.experimental.tools.builders.document_oracle_builder.DocumentOracleToolkitBuilder", "automata.experimental.tools.builders.document_oracle_builder.DocumentOracleOpenAIToolkitBuilder.build_for_open_ai", "automata.agent.openai_agent.OpenAIAgentToolkitBuilder", "automata.tests.unit.context_oracle.test_context_oracle_tool.test_build"], "k": 20}
{"task_id": "ContextCodeRetrieval/221", "query": "What method is used to compute the bounding box of a `Symbol` using AST?", "truth_top_match": "automata.symbol.graph.symbol_navigator.process_symbol_bounds", "top_k_matches": ["automata.symbol.graph.symbol_navigator.process_symbol_bounds", "automata.symbol.graph.symbol_navigator.SymbolGraphNavigator._get_symbol_references_in_scope", "automata.tests.unit.ast_utils.test_ast_utils_bounding_box.test_fetch_bounding_box_with_method_node", "automata.core.ast_handlers.fetch_bounding_box", "automata.symbol.graph.symbol_navigator.SymbolGraphNavigator._pre_compute_rankable_bounding_boxes", "automata.experimental.code_parsers.py.context_processing.context_retriever.SourceCodeContextComponent", "automata.embedding.embedding_base.EmbeddingBuilder.fetch_embedding_source_code", "automata.symbol.symbol_utils.convert_to_ast_object", "automata.symbol.graph.symbol_navigator.SymbolGraphNavigator", "automata.tests.unit.ast_utils.test_ast_utils_bounding_box.test_fetch_bounding_box_with_function_node"], "k": 20}
{"task_id": "ContextCodeRetrieval/222", "query": "Which class represents the description component of a Symbol URI?", "truth_top_match": "automata.symbol.symbol_base.SymbolDescriptor", "top_k_matches": ["automata.symbol.symbol_base.SymbolDescriptor", "automata.symbol.symbol_base.Symbol", "automata.symbol.symbol_base.SymbolPackage", "automata.symbol.symbol_base.Symbol.__repr__", "automata.symbol.symbol_parser._SymbolParser", "automata.symbol.symbol_parser.parse_symbol", "automata.tests.unit.symbol.test_symbol_parser._unparse", "automata.symbol.symbol_base.Symbol.parent", "automata.tests.unit.cli.test_cli_scripts_run_doc_embedding.FakeSymbol", "automata.symbol.symbol_base.SymbolReference"], "k": 20}
{"task_id": "ContextCodeRetrieval/223", "query": "Which method in the _SymbolParser class looks ahead to the next character in the Symbol?", "truth_top_match": "automata.symbol.symbol_parser._SymbolParser.peek_next", "top_k_matches": ["automata.symbol.symbol_parser._SymbolParser.peek_next", "automata.symbol.symbol_parser._SymbolParser", "automata.symbol.symbol_parser._SymbolParser.parse_descriptor", "automata.symbol.symbol_parser._SymbolParser.current", "automata.symbol.symbol_parser._SymbolParser.accept_character", "automata.symbol.symbol_base.Symbol", "automata.symbol.symbol_parser.parse_symbol", "automata.symbol_embedding.symbol_embedding_base.SymbolEmbedding.symbol", "automata.symbol.symbol_parser._SymbolParser.accept_escaped_identifier", "automata.symbol.graph.symbol_graph_types.SymbolGraphType"], "k": 20}
{"task_id": "ContextCodeRetrieval/224", "query": "Which method in the DotPathMap class gets the dotpath of a module given its filepath?", "truth_top_match": "automata.code_parsers.py.dotpath_map.DotPathMap.get_module_dotpath_by_fpath", "top_k_matches": ["automata.code_parsers.py.dotpath_map.DotPathMap.get_module_fpath_by_dotpath", "automata.code_parsers.py.dotpath_map.DotPathMap.get_module_dotpath_by_fpath", "automata.code_parsers.py.dotpath_map.DotPathMap.contains_dotpath", "automata.singletons.py_module_loader.PyModuleLoader.fetch_existing_module_fpath_by_dotpath", "automata.singletons.py_module_loader.PyModuleLoader.fetch_ast_module", "automata.code_parsers.py.dotpath_map.DotPathMap", "automata.singletons.py_module_loader.PyModuleLoader.get_module_dotpath_by_fpath", "automata.code_parsers.py.dotpath_map.DotPathMap.contains_fpath", "automata.singletons.py_module_loader.PyModuleLoader.fetch_existing_module_dotpath", "automata.code_parsers.py.dotpath_map.DotPathMap.put_module"], "k": 20}
{"task_id": "ContextCodeRetrieval/225", "query": "What abstract method is used to convert an evaluation into a `Payload`?", "truth_top_match": "automata.eval.eval_base.EvalResult.to_payload", "top_k_matches": ["automata.eval.eval_base.EvalResult.to_payload", "automata.eval.eval_base.EvalResult.from_payload", "automata.eval.tool.search_eval.SymbolSearchEvalResult.to_payload", "automata.eval.eval_base.EvalResult", "automata.eval.agent.agent_eval.AgentEvalResult.from_payload", "automata.eval.tool.search_eval.SymbolSearchEvalResult.from_payload", "automata.eval.agent.openai_function_eval.OpenAIFunctionCallAction.from_payload", "automata.eval.eval_base.Action.to_payload", "automata.eval.agent.openai_function_eval.OpenAIFunctionCallAction.to_payload", "automata.eval.agent.code_writing_eval.CodeWritingAction.from_payload"], "k": 20}
{"task_id": "ContextCodeRetrieval/226", "query": "Which method in automata.eval.tool.tool_eval.ToolEval generates an eval result for a given set of instructions and expected actions?", "truth_top_match": "automata.eval.tool.tool_eval.ToolEval.generate_eval_result", "top_k_matches": ["automata.eval.tool.tool_eval.ToolEval", "automata.eval.tool.tool_eval.ToolEval.generate_eval_result", "automata.eval.agent.agent_eval.AgentEval.generate_eval_result", "automata.tests.regression.test_agent_end_to_end.test_action_based_eval_tasks", "automata.core.run_handlers.run_with_eval", "automata.eval.agent.agent_eval_composite.AgentEvalComposite.generate_eval_result", "automata.eval.tool.tool_eval.ToolEvalResult", "automata.eval.agent.agent_eval.AgentEval", "automata.eval.tool.tool_eval_harness.ToolEvaluationHarness", "automata.eval.tool.search_eval.SymbolSearchEval"], "k": 20}
{"task_id": "ContextCodeRetrieval/227", "query": "How can an observer be registered to a LLMConversation?", "truth_top_match": "automata.llm.llm_base.LLMConversation.register_observer", "top_k_matches": ["automata.llm.llm_base.LLMConversation.register_observer", "automata.llm.llm_base.LLMConversation", "automata.llm.llm_base.LLMConversationDatabaseProvider", "automata.agent.openai_agent.OpenAIAutomataAgent.conversation", "automata.llm.llm_base.LLMConversationDatabaseProvider.update", "automata.agent.agent.Agent.conversation", "automata.llm.llm_base.LLMConversation.unregister_observer", "automata.llm.providers.openai_llm.OpenAIConversation.add_message", "automata.llm.providers.openai_llm.OpenAIConversation", "automata.llm.providers.openai_llm.OpenAIChatCompletionProvider.add_message"], "k": 20}
{"task_id": "ContextCodeRetrieval/228", "query": "What method is used to get the output directory for a Task?", "truth_top_match": "automata.tasks.task_base.Task._get_task_dir", "top_k_matches": ["automata.tasks.task_base.Task._get_log_dir", "automata.tasks.task_base.Task._get_task_dir", "automata.tasks.automata_task.AutomataTask.get_logs", "automata.tests.conftest.temp_output_dir", "automata.tasks.task_base.Task", "automata.core.utils.get_config_fpath", "automata.core.utils.get_root_py_fpath", "automata.core.utils.get_root_fpath", "automata.cli.install_indexing.get_project_paths", "automata.tests.conftest.task_db"], "k": 20}
{"task_id": "ContextCodeRetrieval/229", "query": "How can the value of a key in the local task_environment be updated?", "truth_top_match": "automata.cli.env_operations.update_key_value", "top_k_matches": ["automata.cli.env_operations.update_key_value", "automata.cli.env_operations.delete_key_value", "automata.tests.unit.cli.test_cli_env_operations.test_update_key_value", "automata.tests.unit.cli.test_cli_env_operations.test_delete_key_value", "automata.tasks.task_environment.AutomataTaskEnvironment.reset", "automata.tests.unit.cli.test_cli_env_operations.test_show_key_value", "automata.cli.env_operations.update_graph_type", "automata.tasks.task_base.TaskEnvironment", "automata.tasks.task_base.TaskEnvironment.teardown", "automata.tasks.task_database.AutomataAgentTaskDatabase.update_task"], "k": 20}
{"task_id": "ContextCodeRetrieval/230", "query": "What class represents different categories of embedding data?", "truth_top_match": "automata.config.config_base.EmbeddingDataCategory", "top_k_matches": ["automata.config.config_base.EmbeddingDataCategory", "automata.embedding.embedding_base.Embedding", "automata.config.config_base.SerializedDataCategory", "automata.embedding.embedding_base.EmbeddingNormType", "automata.symbol_embedding.symbol_embedding_base.SymbolEmbedding", "automata.symbol_embedding.symbol_embedding_base.SymbolDocEmbedding", "automata.embedding.embedding_base.EmbeddingBuilder", "automata.symbol_embedding.symbol_embedding_base.SymbolCodeEmbedding", "automata.embedding.embedding_base.EmbeddingVectorProvider", "automata.embedding.embedding_base.EmbeddingHandler"], "k": 20}
{"task_id": "ContextCodeRetrieval/231", "query": "What are the built tools for an OpenAI agent in PyCodeWriterOpenAIToolkitBuilder?", "truth_top_match": "automata.tools.builders.py_writer_builder.PyCodeWriterOpenAIToolkitBuilder.build_for_open_ai", "top_k_matches": ["automata.tools.builders.py_writer_builder.PyCodeWriterOpenAIToolkitBuilder", "automata.experimental.tools.builders.py_interpreter.PyInterpreterOpenAIToolkitBuilder", "automata.tools.builders.py_reader_builder.PyReaderOpenAIToolkitBuilder", "automata.experimental.tools.builders.py_interpreter.PyInterpreterOpenAIToolkitBuilder.build_for_open_ai", "automata.tools.builders.py_writer_builder.PyCodeWriterOpenAIToolkitBuilder.build_for_open_ai", "automata.tools.builders.py_writer_builder.PyCodeWriterToolkitBuilder", "automata.experimental.tools.builders.agentified_search_builder.AgentifiedSearchOpenAIToolkitBuilder", "automata.experimental.tools.builders.py_interpreter.PyInterpreterToolkitBuilder", "automata.agent.openai_agent.OpenAIAgentToolkitBuilder", "automata.tools.builders.py_reader_builder.PyReaderOpenAIToolkitBuilder.build_for_open_ai"], "k": 20}
{"task_id": "ContextCodeRetrieval/232", "query": "What class represents the result of a language model completion?", "truth_top_match": "automata.llm.llm_base.LLMCompletionResult", "top_k_matches": ["automata.llm.llm_base.LLMCompletionResult", "automata.llm.providers.openai_llm.OpenAIChatCompletionResult", "automata.llm.providers.openai_llm.OpenAIChatMessage.from_completion_result", "automata.llm.providers.openai_llm.OpenAIChatCompletionProvider", "automata.llm.providers.openai_llm.OpenAIChatMessage", "automata.llm.providers.openai_llm.OpenAIChatCompletionResult.from_args", "automata.config.config_base.ModelInformation", "automata.llm.llm_base.LLMChatCompletionProvider", "automata.llm.llm_base.LLMCompletionResult.get_role", "automata.experimental.symbol_embedding.symbol_doc_embedding_builder.SymbolDocEmbeddingBuilder.__init__"], "k": 20}
{"task_id": "ContextCodeRetrieval/233", "query": "What abstract method is used to add an entry to the database in the VectorDatabaseProvider?", "truth_top_match": "automata.core.base.database.vector_database.VectorDatabaseProvider.add", "top_k_matches": ["automata.core.base.database.vector_database.VectorDatabaseProvider.add", "automata.core.base.database.vector_database.VectorDatabaseProvider", "automata.core.base.database.vector_database.JSONVectorDatabase", "automata.core.base.database.vector_database.ChromaVectorDatabase", "automata.core.base.database.vector_database.ChromaVectorDatabase.add", "automata.core.base.database.vector_database.VectorDatabaseProvider.batch_add", "automata.tests.unit.database.test_database_vector.test_save", "automata.symbol_embedding.vector_databases.ChromaSymbolEmbeddingVectorDatabase", "automata.tests.unit.database.test_database_vector.test_add_symbol", "automata.tests.unit.database.test_database_vector.test_load"], "k": 20}
{"task_id": "ContextCodeRetrieval/234", "query": "What method is used to discard a batch of entries in ChromaVectorDatabase?", "truth_top_match": "automata.core.base.database.vector_database.ChromaVectorDatabase.batch_discard", "top_k_matches": ["automata.core.base.database.vector_database.ChromaVectorDatabase", "automata.tests.unit.chroma.test_chroma_vector.test_batch_add_and_remove", "automata.tests.unit.chroma.test_chroma_vector.test_clear", "automata.tests.unit.chroma.test_chroma_vector.test_delete_single_symbol", "automata.tests.unit.chroma.test_chroma_vector.test_update_database", "automata.symbol_embedding.vector_databases.ChromaSymbolEmbeddingVectorDatabase", "automata.tests.unit.chroma.test_chroma_vector.test_vector_initialization", "automata.symbol_embedding.symbol_embedding_handler.SymbolEmbeddingHandler.flush", "automata.tests.unit.chroma.test_chroma_vector.test_add_and_discard_single_symbol", "automata.core.base.database.vector_database.VectorDatabaseProvider.batch_discard"], "k": 20}
{"task_id": "ContextCodeRetrieval/235", "query": "What is the purpose of `SQLDatabase.NullCursor`?", "truth_top_match": "automata.core.base.database.relational_database.SQLDatabase.NullCursor", "top_k_matches": ["automata.core.base.database.relational_database.SQLDatabase.NullCursor", "automata.core.base.database.relational_database.SQLDatabase.__init__", "automata.core.base.database.relational_database.SQLDatabase", "automata.core.base.database.relational_database.SQLDatabase.NullConnection", "automata.tests.unit.database.test_database_sql.test_connect_close", "automata.core.base.database.relational_database.SQLDatabase.close", "automata.core.base.database.relational_database.SQLDatabase.NullCursor.fetchall", "automata.core.base.database.relational_database.SQLDatabase.NullCursor.execute", "automata.core.base.database.vector_database.ChromaVectorDatabase.load", "automata.tasks.task_registry.AutomataTaskRegistry.__init__"], "k": 20}
{"task_id": "ContextCodeRetrieval/236", "query": "Which method gets the provider for the Automata OpenAI Agent?", "truth_top_match": "automata.config.openai_config.OpenAIAutomataAgentConfig.get_llm_provider", "top_k_matches": ["automata.config.openai_config.OpenAIAutomataAgentConfig.get_llm_provider", "automata.tests.unit.automata_agent.test_automata_agent.test_chat_provider", "automata.config.config_base.LLMProvider", "automata.agent.openai_agent.OpenAIAutomataAgent", "automata.config.config_base.AgentConfig.get_llm_provider", "automata.tests.unit.automata_agent.test_automata_agent_builder.test_builder_creates_proper_instance", "automata.tests.conftest.automata_agent", "automata.tasks.task_executor.IAutomataTaskExecution._build_agent", "automata.config.openai_config.OpenAIAutomataAgentConfig", "automata.tests.conftest.automata_agent_config_builder"], "k": 20}
{"task_id": "ContextCodeRetrieval/237", "query": "Which class represents a node in the file tree?", "truth_top_match": "automata.code_parsers.directory.Node", "top_k_matches": ["automata.code_parsers.directory.File", "automata.code_parsers.directory.Node", "automata.code_parsers.directory.Directory", "automata.tests.unit.ast_utils.test_ast_utils_bounding_box.test_fetch_bounding_box_with_class_node", "automata.tests.unit.context_retriever.test_context_retriever.test_nested_class_detection.Parent.Child", "automata.tests.unit.context_retriever.test_context_retriever.test_nested_class_detection.Parent", "automata.core.ast_handlers.DocstringRemover", "automata.tests.unit.ast_utils.test_ast_utils_bounding_box.test_fetch_bounding_box_with_class_node_in_file", "automata.code_parsers.directory.DirectoryManager", "automata.tests.unit.context_retriever.test_context_retriever.test_class_inheritance.Child"], "k": 20}
{"task_id": "ContextCodeRetrieval/238", "query": "What class builds tools for interacting with the SymbolSearch API?", "truth_top_match": "automata.experimental.tools.builders.symbol_search_builder.SymbolSearchToolkitBuilder", "top_k_matches": ["automata.experimental.tools.builders.symbol_search_builder.SymbolSearchToolkitBuilder", "automata.experimental.tools.builders.symbol_search_builder.SearchTool", "automata.experimental.tools.builders.symbol_search_builder.SymbolSearchOpenAIToolkitBuilder", "automata.eval.tool.search_eval.SymbolSearchEval", "automata.experimental.tools.builders.agentified_search_builder.AgentifiedSearchToolkitBuilder", "automata.tests.unit.tool_eval.test_symbol_search_eval.symbol_search_tool_builder", "automata.experimental.search.symbol_search.SymbolSearch", "automata.tests.unit.symbol.test_symbol_search_tool.symbol_search_tool_builder", "automata.experimental.tools.builders.advanced_context_oracle_builder.AdvancedContextOracleToolkitBuilder.build", "automata.tests.unit.symbol.test_symbol_search.test_build"], "k": 20}
{"task_id": "ContextCodeRetrieval/239", "query": "What method is used to create a new module object from source code?", "truth_top_match": "automata.code_writers.py.py_code_writer.PyCodeWriter.create_new_module", "top_k_matches": ["automata.tests.unit.code_writers.test_py_writer.MockCodeGenerator._check_module_obj", "automata.code_writers.py.py_code_writer.PyCodeWriter.create_new_module", "automata.code_writers.py.py_code_writer.PyCodeWriter.delete_module", "automata.tools.builders.py_writer_builder.PyCodeWriterToolkitBuilder._create_new_module", "automata.code_writers.py.py_code_writer.PyCodeWriter._write_to_disk_and_format", "automata.tests.unit.code_writers.test_py_writer.test_create_class_source_class", "automata.tests.unit.code_writers.test_py_writer.test_create_new_module", "automata.tests.unit.context_retriever.test_context_retriever.test_source_code_2", "automata.code_parsers.py.py_reader.PyReader.get_source_code", "automata.code_writers.py.py_code_writer.PyCodeWriter"], "k": 20}
{"task_id": "ContextCodeRetrieval/240", "query": "What class wraps the ITaskExecution behavior to execute a task?", "truth_top_match": "automata.tasks.task_executor.AutomataTaskExecutor", "top_k_matches": ["automata.tasks.task_base.ITaskExecution", "automata.tasks.task_executor.AutomataTaskExecutor", "automata.tests.unit.task.test_task_executor.TestExecuteBehavior", "automata.tasks.task_executor.IAutomataTaskExecution", "automata.tasks.task_executor.AutomataTaskExecutor.__init__", "automata.tools.tool_executor.ToolExecutor", "automata.tasks.task_base.Task", "automata.tools.tool_executor.ToolExecution", "automata.tasks.task_base.ITaskExecution.execute", "automata.tools.tool_executor.IToolExecution"], "k": 20}
{"task_id": "ContextCodeRetrieval/241", "query": "What class handles the navigation within a symbol graph?", "truth_top_match": "automata.symbol.graph.symbol_navigator.SymbolGraphNavigator", "top_k_matches": ["automata.symbol.graph.symbol_navigator.SymbolGraphNavigator", "automata.symbol.graph.symbol_graph.SymbolGraph", "automata.symbol.graph.symbol_caller_callees.CallerCalleeProcessor.__init__", "automata.symbol.graph.symbol_caller_callees.CallerCalleeProcessor", "automata.symbol.graph.symbol_graph_types.SymbolGraphType", "automata.experimental.code_parsers.py.context_processing.context_handler.PyContextHandler", "automata.symbol.graph.symbol_graph.SymbolGraph.__init__", "automata.experimental.search.symbol_search.SymbolSearch", "automata.symbol.graph.symbol_caller_callees.CallerCalleeProcessor.process", "automata.symbol.graph.graph_builder.GraphBuilder"], "k": 20}
{"task_id": "ContextCodeRetrieval/242", "query": "How do we filter symbols in SymbolGraph?", "truth_top_match": "automata.symbol.graph.symbol_graph.SymbolGraph.filter_symbols", "top_k_matches": ["automata.cli.scripts.run_code_embedding.collect_symbols", "automata.symbol.graph.symbol_graph.SymbolGraph.filter_symbols", "automata.experimental.scripts.run_update_tool_eval.process_symbol_graph", "automata.symbol.graph.symbol_navigator.SymbolGraphNavigator.get_sorted_supported_symbols", "automata.symbol.graph.symbol_graph.SymbolGraph", "automata.symbol.graph.symbol_caller_callees.CallerCalleeProcessor.process", "automata.symbol.graph.symbol_navigator.SymbolGraphNavigator", "automata.symbol.graph.symbol_relationships.RelationshipProcessor.process", "automata.tests.unit.symbol.test_symbol_graph_static.test_get_all_symbols", "automata.tests.unit.symbol.test_symbol_graph.test_get_all_symbols"], "k": 20}
{"task_id": "ContextCodeRetrieval/243", "query": "What private method is used by AdvancedContextOracleToolkitBuilder to retrieve context corresponding to a given query?", "truth_top_match": "automata.experimental.tools.builders.advanced_context_oracle_builder.AdvancedContextOracleToolkitBuilder._get_context", "top_k_matches": ["automata.experimental.tools.builders.advanced_context_oracle_builder.AdvancedContextOracleToolkitBuilder", "automata.experimental.tools.builders.advanced_context_oracle_builder.AdvancedContextOracleOpenAIToolkitBuilder", "automata.tests.unit.context_oracle.test_context_oracle_tool.advanced_context_oracle_tool_builder", "automata.experimental.tools.builders.advanced_context_oracle_builder.AdvancedContextOracleToolkitBuilder.build", "automata.experimental.tools.builders.document_oracle_builder.DocumentOracleToolkitBuilder", "automata.experimental.tools.builders.document_oracle_builder.DocumentOracleToolkitBuilder.build", "automata.tests.unit.context_oracle.test_context_oracle_tool.test_build", "automata.tests.unit.context_oracle.test_context_oracle_tool.test_init", "automata.experimental.tools.builders.document_oracle_builder.DocumentOracleOpenAIToolkitBuilder", "automata.experimental.tools.builders.advanced_context_oracle_builder.AdvancedContextOracleToolkitBuilder._get_context"], "k": 20}
{"task_id": "ContextCodeRetrieval/244", "query": "Which class in automata.eval.tool.search_eval evaluates an LLM's symbol searching ability?", "truth_top_match": "automata.eval.tool.search_eval.SymbolSearchEval", "top_k_matches": ["automata.eval.tool.search_eval.SymbolSearchEval", "automata.experimental.tools.builders.symbol_search_builder.SearchTool", "automata.eval.tool.search_eval.SymbolSearchEvalResult", "automata.experimental.tools.builders.symbol_search_builder.SymbolSearchOpenAIToolkitBuilder", "automata.experimental.tools.builders.symbol_search_builder.SymbolSearchToolkitBuilder", "automata.tests.conftest.search_evaluator", "automata.tests.unit.tool_eval.test_symbol_search_eval.test_symbol_search_eval_to_tool_result", "automata.tests.unit.tool_eval.test_symbol_search_eval.symbol_search_eval", "automata.eval.eval_base.Eval", "automata.experimental.search.symbol_search.SymbolSearch"], "k": 20}
{"task_id": "ContextCodeRetrieval/245", "query": "Which method in DocumentOracleOpenAIToolkitBuilder builds the associated tools for OpenAI API?", "truth_top_match": "automata.experimental.tools.builders.document_oracle_builder.DocumentOracleOpenAIToolkitBuilder.build_for_open_ai", "top_k_matches": ["automata.experimental.tools.builders.document_oracle_builder.DocumentOracleOpenAIToolkitBuilder", "automata.experimental.tools.builders.advanced_context_oracle_builder.AdvancedContextOracleOpenAIToolkitBuilder", "automata.experimental.tools.builders.advanced_context_oracle_builder.AdvancedContextOracleOpenAIToolkitBuilder.build_for_open_ai", "automata.experimental.tools.builders.document_oracle_builder.DocumentOracleOpenAIToolkitBuilder.build_for_open_ai", "automata.experimental.tools.builders.document_oracle_builder.DocumentOracleToolkitBuilder.build", "automata.experimental.tools.builders.agentified_search_builder.AgentifiedSearchOpenAIToolkitBuilder", "automata.experimental.tools.builders.document_oracle_builder.DocumentOracleToolkitBuilder", "automata.agent.openai_agent.OpenAIAgentToolkitBuilder", "automata.tools.builders.py_reader_builder.PyReaderOpenAIToolkitBuilder", "automata.experimental.tools.builders.symbol_search_builder.SymbolSearchOpenAIToolkitBuilder"], "k": 20}
{"task_id": "ContextCodeRetrieval/246", "query": "Which class handles operations related to directory structure?", "truth_top_match": "automata.code_parsers.directory.DirectoryManager", "top_k_matches": ["automata.code_parsers.directory.DirectoryManager", "automata.code_parsers.directory.Directory", "automata.code_parsers.directory.DirectoryManager._load_directory_structure", "automata.code_parsers.directory.DirectoryManager.__init__", "automata.tests.unit.directory_manager.test_directory_manager.test_load_directory_structure", "automata.config.config_base.ConfigCategory", "automata.config.config_base.SerializedDataCategory", "automata.code_parsers.directory.Node", "automata.code_parsers.directory.Directory.is_leaf_dir", "automata.code_parsers.directory.Directory.get_subdirectories"], "k": 20}
{"task_id": "ContextCodeRetrieval/247", "query": "What method of TaskEnvironment is used to validate the task_environment?", "truth_top_match": "automata.tasks.task_base.TaskEnvironment.validate", "top_k_matches": ["automata.tasks.task_base.TaskEnvironment.validate", "automata.tasks.task_environment.AutomataTaskEnvironment.validate", "automata.tasks.task_base.TaskEnvironment", "automata.tasks.task_environment.AutomataTaskEnvironment", "automata.tasks.task_base.TaskEnvironment.teardown", "automata.tests.conftest.task_environment", "automata.tests.unit.task.test_task.test_setup_environment", "automata.tasks.task_environment.AutomataTaskEnvironment.reset", "automata.tasks.task_base.TaskEnvironment.setup", "automata.tasks.task_environment.AutomataTaskEnvironment.teardown"], "k": 20}
{"task_id": "ContextCodeRetrieval/248", "query": "What method gets the next completion from the assistant?", "truth_top_match": "automata.llm.providers.openai_llm.OpenAIChatCompletionProvider.get_next_assistant_completion", "top_k_matches": ["automata.llm.providers.openai_llm.OpenAIChatCompletionProvider.get_next_assistant_completion", "automata.llm.llm_base.LLMChatCompletionProvider.get_next_assistant_completion", "automata.agent.openai_agent.OpenAIAutomataAgent._get_next_user_response", "automata.agent.openai_agent.OpenAIAutomataAgent.__next__", "automata.llm.llm_base.LLMChatCompletionProvider", "automata.llm.providers.openai_llm.OpenAIChatCompletionProvider.standalone_call", "automata.llm.llm_base.LLMConversation.get_messages_for_next_completion", "automata.llm.providers.openai_llm.OpenAIConversation.get_messages_for_next_completion", "automata.tests.unit.automata_agent.test_automata_agent.test_iter_step_without_api_call", "automata.llm.llm_base.LLMCompletionResult.get_content"], "k": 20}
{"task_id": "ContextCodeRetrieval/249", "query": "What method is used to upsert the nodes from a new module into an existing module?", "truth_top_match": "automata.code_writers.py.py_code_writer.PyCodeWriter.upsert_to_module", "top_k_matches": ["automata.code_writers.py.py_code_writer.PyCodeWriter.upsert_to_module", "automata.tests.unit.code_writers.test_py_writer.test_upsert_to_module_update_existing_nodes", "automata.tests.unit.code_writers.test_py_writer.test_upsert_to_module", "automata.tools.builders.py_writer_builder.PyCodeWriterToolkitBuilder._update_existing_module", "automata.code_writers.py.py_code_writer.PyCodeWriter.create_new_module", "automata.code_writers.py.py_code_writer.PyCodeWriter.delete_from_module", "automata.code_parsers.py.dotpath_map.DotPathMap.put_module", "automata.core.ast_handlers.ImportRemover", "automata.code_writers.py.py_code_writer.PyCodeWriter", "automata.tests.unit.code_writers.test_py_writer.test_delete_from_module_non_existent_node"], "k": 20}
{"task_id": "ContextCodeRetrieval/250", "query": "What function checks if all evaluators are of different types?", "truth_top_match": "automata.eval.agent.agent_eval_composite.check_eval_uniqueness", "top_k_matches": ["automata.eval.agent.agent_eval_composite.check_eval_uniqueness", "automata.tests.conftest.composite_evaluator", "automata.eval.agent.agent_eval_composite.AgentEvalComposite.__init__", "automata.tests.conftest.function_evaluator", "automata.eval.agent.agent_eval_composite.AgentEvalComposite", "automata.eval.tool.tool_eval_harness.ToolEvaluationHarness.evaluate", "automata.eval.tool.tool_eval_harness.ToolEvaluationHarness", "automata.tests.unit.tool_eval.test_tool_eval_loader.test_tool_eval_loader", "automata.tests.conftest.agent_eval_harness", "automata.tests.conftest.search_evaluator"], "k": 20}
{"task_id": "ContextCodeRetrieval/251", "query": "Which method is used to retrieve the embeddings entries for a list of symbols?", "truth_top_match": "automata.embedding.embedding_base.EmbeddingHandler.get_embeddings", "top_k_matches": ["automata.embedding.embedding_base.EmbeddingHandler.get_embeddings", "automata.symbol_embedding.symbol_embedding_handler.SymbolEmbeddingHandler.get_embeddings", "automata.symbol_embedding.symbol_embedding_handler.SymbolEmbeddingHandler.get_all_ordered_embeddings", "automata.tests.unit.symbol_embedding.test_symbol_embedding.test_get_embedding", "automata.symbol_embedding.vector_databases.JSONSymbolEmbeddingVectorDatabase.get_all_ordered_embeddings", "automata.tests.unit.chroma.test_chroma_vector.test_get_all_symbols", "automata.cli.scripts.run_code_embedding.process_embeddings", "automata.embedding.embedding_base.EmbeddingHandler.process_embedding", "automata.memory_store.symbol_code_embedding_handler.SymbolCodeEmbeddingHandler.process_embedding", "automata.experimental.search.symbol_search.SymbolSearch.get_symbol_code_similarity_results"], "k": 20}
{"task_id": "ContextCodeRetrieval/252", "query": "Which method in DocumentOracleToolkitBuilder builds the associated tools?", "truth_top_match": "automata.experimental.tools.builders.document_oracle_builder.DocumentOracleToolkitBuilder.build", "top_k_matches": ["automata.experimental.tools.builders.document_oracle_builder.DocumentOracleToolkitBuilder.build", "automata.experimental.tools.builders.document_oracle_builder.DocumentOracleOpenAIToolkitBuilder", "automata.experimental.tools.builders.document_oracle_builder.DocumentOracleToolkitBuilder", "automata.experimental.tools.builders.advanced_context_oracle_builder.AdvancedContextOracleOpenAIToolkitBuilder", "automata.tests.unit.context_oracle.test_document_oracle_tool.test_build", "automata.experimental.tools.builders.advanced_context_oracle_builder.AdvancedContextOracleToolkitBuilder.build", "automata.experimental.tools.builders.advanced_context_oracle_builder.AdvancedContextOracleToolkitBuilder", "automata.agent.agent.AgentToolkitBuilder", "automata.tests.unit.context_oracle.test_context_oracle_tool.test_build", "automata.experimental.tools.builders.advanced_context_oracle_builder.AdvancedContextOracleOpenAIToolkitBuilder.build_for_open_ai"], "k": 20}
{"task_id": "ContextCodeRetrieval/253", "query": "What function collects symbols from a symbol graph?", "truth_top_match": "automata.cli.scripts.run_code_embedding.collect_symbols", "top_k_matches": ["automata.cli.scripts.run_code_embedding.collect_symbols", "automata.experimental.scripts.run_update_tool_eval.process_symbol_graph", "automata.symbol.graph.symbol_navigator.SymbolGraphNavigator", "automata.symbol.graph.symbol_caller_callees.CallerCalleeProcessor.process", "automata.symbol.graph.symbol_graph.SymbolGraph", "automata.symbol.graph.symbol_navigator.SymbolGraphNavigator.get_sorted_supported_symbols", "automata.symbol.graph.symbol_references.ReferenceProcessor.process", "automata.symbol.graph.symbol_relationships.RelationshipProcessor.process", "automata.symbol.graph.graph_builder.GraphBuilder._add_symbol_vertices", "automata.symbol.graph.symbol_navigator.SymbolGraphNavigator.get_potential_symbol_callers"], "k": 20}
{"task_id": "ContextCodeRetrieval/254", "query": "Which class represents a directory in the file tree?", "truth_top_match": "automata.code_parsers.directory.Directory", "top_k_matches": ["automata.code_parsers.directory.Directory", "automata.code_parsers.directory.File", "automata.code_parsers.directory.Node", "automata.code_parsers.directory.DirectoryManager", "automata.code_parsers.directory.DirectoryManager._load_directory_structure", "automata.config.config_base.ConfigCategory", "automata.code_parsers.directory.Directory.is_leaf_dir", "automata.config.config_base.SerializedDataCategory", "automata.config.config_base.EmbeddingDataCategory", "automata.tests.unit.context_retriever.test_context_retriever.test_nested_class_detection.Parent"], "k": 20}
{"task_id": "ContextCodeRetrieval/255", "query": "Which class in automata.eval.tool.search_eval represents a concrete action for a symbol search?", "truth_top_match": "automata.eval.tool.search_eval.SymbolSearchAction", "top_k_matches": ["automata.eval.tool.search_eval.SymbolSearchEval", "automata.eval.tool.search_eval.SymbolSearchEvalResult", "automata.eval.tool.search_eval.SymbolSearchAction", "automata.tests.unit.tool_eval.test_symbol_search_eval.test_symbol_search_eval_extract_action", "automata.tests.unit.tool_eval.test_symbol_search_eval.test_symbol_search_eval_to_tool_result", "automata.tests.unit.tool_eval.test_symbol_search_eval.test_symbol_search_eval_result", "automata.experimental.tools.builders.symbol_search_builder.SearchTool", "automata.tests.unit.tool_eval.test_symbol_search_eval.test_symbol_search_action", "automata.eval.tool.search_eval.SymbolSearchEval.to_tool_result", "automata.eval.tool.search_eval.SymbolSearchEval.extract_action"], "k": 20}
{"task_id": "ContextCodeRetrieval/256", "query": "How can an OpenAIFunctionCallAction instance be recovered from a storable format or payload?", "truth_top_match": "automata.eval.agent.openai_function_eval.OpenAIFunctionCallAction.from_payload", "top_k_matches": ["automata.eval.agent.openai_function_eval.OpenAIFunctionCallAction.from_payload", "automata.eval.agent.openai_function_eval.OpenAIFunctionCallAction.to_payload", "automata.eval.agent.openai_function_eval.OpenAIFunctionCallAction", "automata.eval.agent.openai_function_eval.OpenAIFunctionCallAction.__repr__", "automata.eval.agent.openai_function_eval.OpenAIFunctionEval", "automata.eval.agent.code_writing_eval.CodeWritingAction.from_payload", "automata.eval.tool.tool_eval_harness.ToolEvalSetLoader.__init__", "automata.llm.providers.openai_llm.OpenAIFunction", "automata.eval.eval_base.Action", "automata.eval.eval_base.parse_action_from_payload"], "k": 20}
{"task_id": "ContextCodeRetrieval/257", "query": "What is the main function responsible for in the process?", "truth_top_match": "automata.cli.scripts.run_code_embedding.main", "top_k_matches": ["automata.tests.unit.cli.test_cli_scripts_run_doc_post_process.test_main_with_kwargs", "automata.tests.unit.cli.test_cli_scripts_run_doc_post_process.test_main_without_kwargs", "automata.tests.unit.cli.test_cli_scripts_run_code_embedding.test_main_1", "automata.experimental.scripts.run_update_tool_eval.main", "automata.tests.unit.sample_modules.sample3.my_function", "automata.tests.unit.cli.test_cli_scripts_run_doc_embedding.test_main", "automata.cli.scripts.run_code_embedding.main", "automata.eval.tool.search_eval.SymbolSearchEval.__init__", "automata.tests.unit.context_retriever.test_context_retriever.test_dunder_not_private.MyClass.__init__", "automata.tests.unit.sample_modules.my_project.core.calculator.Calculator.__init__"], "k": 20}
{"task_id": "ContextCodeRetrieval/258", "query": "Which method processes the result of an evaluation of an LLM?", "truth_top_match": "automata.eval.agent.agent_eval.AgentEval.process_result", "top_k_matches": ["automata.eval.agent.agent_eval.AgentEval.process_result", "automata.eval.agent.agent_eval.AgentEval", "automata.eval.eval_base.Eval", "automata.llm.llm_base.LLMCompletionResult", "automata.eval.tool.search_eval.SymbolSearchEval", "automata.eval.agent.code_writing_eval.CodeWritingEval", "automata.experimental.scripts.run_update_tool_eval.process_payload", "automata.config.config_base.LLMProvider", "automata.agent.openai_agent.OpenAIAutomataAgent.__next__", "automata.eval.agent.openai_function_eval.OpenAIFunctionEval"], "k": 20}
{"task_id": "ContextCodeRetrieval/259", "query": "What function gets the results from the database", "truth_top_match": "automata.eval.agent.agent_eval_database.AgentEvalResultDatabase.get_results", "top_k_matches": ["automata.eval.agent.agent_eval_database.AgentEvalResultDatabase.get_results", "automata.eval.agent.agent_eval_database.AgentEvalResultDatabase", "automata.tests.unit.agent_eval.test_agent_eval_actions_results.test_generate_function_eval_result_match", "automata.tests.unit.automata_agent.test_automata_database.test_get_messages", "automata.tests.unit.automata_agent.test_automata_agent.test_db_interaction", "automata.tests.unit.agent_eval.test_agent_eval_actions_results.test_generate_eval_result_partial_match", "automata.tests.unit.automata_agent.test_automata_database.test_get_last_interaction_id", "automata.tests.unit.task.test_task_database.test_get_tasks_by_query", "automata.llm.providers.openai_llm.OpenAIChatCompletionResult.get_function_call", "automata.tests.unit.database.test_database_sql.test_insert_select"], "k": 20}
{"task_id": "ContextCodeRetrieval/260", "query": "What method is used to load and process data?", "truth_top_match": "automata.experimental.scripts.run_update_tool_eval.load_and_process_data", "top_k_matches": ["automata.core.base.database.vector_database.VectorDatabaseProvider.load", "automata.experimental.scripts.run_update_tool_eval.load_and_process_data", "automata.experimental.scripts.run_update_tool_eval.process_payload", "automata.core.base.database.vector_database.ChromaVectorDatabase.load", "automata.eval.tool.tool_eval_harness.ToolEvalSetLoader.load_json", "automata.experimental.scripts.run_update_tool_eval.process_modules", "automata.core.base.database.vector_database.JSONVectorDatabase.load", "automata.eval.tool.tool_eval_harness.ToolEvalSetLoader", "automata.eval.agent.agent_eval_harness.AgentEvalSetLoader.load_json", "automata.eval.agent.agent_eval_harness.AgentEvalSetLoader"], "k": 20}
{"task_id": "ContextCodeRetrieval/261", "query": "Which class in automata.eval.tool.tool_eval_harness evaluates a list of function calls against a list of expected actions?", "truth_top_match": "automata.eval.tool.tool_eval_harness.ToolEvaluationHarness", "top_k_matches": ["automata.eval.tool.tool_eval_harness.ToolEvaluationHarness", "automata.eval.tool.tool_eval_harness.ToolEvaluationHarness.evaluate", "automata.eval.tool.tool_eval.ToolEval", "automata.tests.unit.tool_eval.test_tool_eval_harness_and_metrics.test_tool_evaluation_harness_and_metrics", "automata.eval.agent.agent_eval_harness.AgentEvaluationHarness", "automata.tests.unit.tool_eval.test_tool_eval_loader.test_tool_eval_loader", "automata.eval.tool.search_eval.SymbolSearchEval", "automata.eval.tool.tool_eval.ToolEval.generate_eval_result", "automata.tests.regression.test_agent_end_to_end.test_action_based_eval_tasks", "automata.tests.unit.tool_eval.test_symbol_search_eval.test_symbol_search_eval_extract_action"], "k": 20}
{"task_id": "ContextCodeRetrieval/262", "query": "What method is used to save a message to the database?", "truth_top_match": "automata.memory_store.conversation_database_providers.OpenAIAutomataConversationDatabase.save_message", "top_k_matches": ["automata.tests.unit.automata_agent.test_automata_database.test_save_message", "automata.memory_store.conversation_database_providers.OpenAIAutomataConversationDatabase.save_message", "automata.llm.llm_base.LLMConversationDatabaseProvider.save_message", "automata.tests.unit.automata_agent.test_automata_database.test_persistence", "automata.memory_store.conversation_database_providers.OpenAIAutomataConversationDatabase", "automata.llm.llm_base.LLMConversationDatabaseProvider", "automata.tests.unit.automata_agent.test_automata_database.test_invalid_session_id", "automata.tests.unit.automata_agent.test_automata_database.test_performance", "automata.llm.llm_base.LLMConversationDatabaseProvider.update", "automata.tests.unit.conversation_database.test_conversation_database.test_put_message_increments_interaction_id"], "k": 20}
{"task_id": "ContextCodeRetrieval/263", "query": "What method retrieves potential callee references of a `Symbol` based on 'caller' label?", "truth_top_match": "automata.symbol.graph.symbol_navigator.SymbolGraphNavigator.get_potential_symbol_callees", "top_k_matches": ["automata.symbol.graph.symbol_navigator.SymbolGraphNavigator.get_potential_symbol_callees", "automata.symbol.graph.symbol_navigator.SymbolGraphNavigator.get_potential_symbol_callers", "automata.symbol.graph.symbol_graph.SymbolGraph.get_potential_symbol_callers", "automata.symbol.graph.symbol_graph.SymbolGraph.get_potential_symbol_callees", "automata.symbol.graph.graph_builder.GraphBuilder._process_caller_callee_relationships", "automata.symbol.graph.symbol_caller_callees.CallerCalleeProcessor.process", "automata.symbol.graph.symbol_navigator.SymbolGraphNavigator.get_references_to_symbol", "automata.symbol.graph.symbol_navigator.SymbolGraphNavigator._get_symbol_references_in_scope", "automata.experimental.search.symbol_search.SymbolSearch.symbol_references", "automata.symbol.graph.symbol_graph.SymbolGraph.get_references_to_symbol"], "k": 20}
{"task_id": "ContextCodeRetrieval/264", "query": "What function gets the path to the root of the Automata directory?", "truth_top_match": "automata.core.utils.get_root_fpath", "top_k_matches": ["automata.core.utils.get_root_fpath", "automata.core.utils.get_config_fpath", "automata.core.utils.get_root_py_fpath", "automata.core.utils.get_embedding_data_fpath", "automata.core.run_handlers.initialize_automata", "automata.cli.install_indexing.get_project_paths", "automata.core.run_handlers.run_setup", "automata.singletons.py_module_loader.PyModuleLoader.initialize", "automata.symbol.symbol_utils.load_data_path", "automata.tests.unit.cli.test_cli_utils.default_args"], "k": 20}
{"task_id": "ContextCodeRetrieval/265", "query": "What method pre-computes and caches the bounding boxes for all symbols in the symbol graph?", "truth_top_match": "automata.symbol.graph.symbol_navigator.SymbolGraphNavigator._pre_compute_rankable_bounding_boxes", "top_k_matches": ["automata.symbol.graph.symbol_navigator.SymbolGraphNavigator._pre_compute_rankable_bounding_boxes", "automata.symbol.graph.symbol_navigator.SymbolGraphNavigator", "automata.symbol.graph.symbol_navigator.process_symbol_bounds", "automata.experimental.scripts.run_update_tool_eval.process_symbol_graph", "automata.symbol.graph.symbol_navigator.SymbolGraphNavigator._get_symbol_references_in_scope", "automata.memory_store.symbol_code_embedding_handler.SymbolCodeEmbeddingHandler.process_embedding", "automata.tests.regression.test_dependencies.test_automata_symbol_providers", "automata.symbol.graph.symbol_navigator.SymbolGraphNavigator.__init__", "automata.experimental.memory_store.symbol_doc_embedding_handler.SymbolDocEmbeddingHandler.process_embedding", "automata.tests.unit.symbol.test_symbol_graph_static.test_build_real_graph"], "k": 20}
{"task_id": "ContextCodeRetrieval/266", "query": "Which class is responsible for building advanced context oracle toolkits?", "truth_top_match": "automata.experimental.tools.builders.advanced_context_oracle_builder.AdvancedContextOracleToolkitBuilder", "top_k_matches": ["automata.experimental.tools.builders.advanced_context_oracle_builder.AdvancedContextOracleOpenAIToolkitBuilder", "automata.experimental.tools.builders.advanced_context_oracle_builder.AdvancedContextOracleToolkitBuilder", "automata.experimental.tools.builders.advanced_context_oracle_builder.AdvancedContextOracleToolkitBuilder.build", "automata.experimental.tools.builders.document_oracle_builder.DocumentOracleToolkitBuilder.build", "automata.experimental.tools.builders.document_oracle_builder.DocumentOracleOpenAIToolkitBuilder", "automata.experimental.tools.builders.document_oracle_builder.DocumentOracleToolkitBuilder", "automata.tests.unit.context_oracle.test_context_oracle_tool.advanced_context_oracle_tool_builder", "automata.tests.unit.context_oracle.test_context_oracle_tool.test_build", "automata.tests.unit.context_oracle.test_context_oracle_tool.test_init", "automata.experimental.tools.builders.advanced_context_oracle_builder.AdvancedContextOracleOpenAIToolkitBuilder.build_for_open_ai"], "k": 20}
{"task_id": "ContextCodeRetrieval/267", "query": "How does PyModuleLoader perform its initialization assertions?", "truth_top_match": "automata.singletons.py_module_loader.PyModuleLoader._assert_initialized", "top_k_matches": ["automata.singletons.py_module_loader.PyModuleLoader._assert_initialized", "automata.singletons.py_module_loader.PyModuleLoader", "automata.tests.unit.task.test_task_executor.module_loader", "automata.tests.unit.cli.test_cli_utils.test_initialize_modules_defaults", "automata.tests.unit.module_loader.test_module_loader.test_dotpath_map", "automata.tests.unit.module_loader.test_module_loader.test_directory_without_init", "automata.tests.unit.code_writers.test_py_writer.module_loader", "automata.tests.unit.module_loader.test_module_loader.test_multiple_initializations", "automata.singletons.py_module_loader.PyModuleLoader.reset", "automata.singletons.py_module_loader.PyModuleLoader.initialize"], "k": 20}
{"task_id": "ContextCodeRetrieval/268", "query": "What abstract method is used to generate an eval result in the Eval class?", "truth_top_match": "automata.eval.eval_base.Eval.generate_eval_result", "top_k_matches": ["automata.eval.eval_base.Eval", "automata.eval.tool.tool_eval.ToolEval", "automata.eval.tool.tool_eval.ToolEvalResult", "automata.eval.agent.agent_eval.AgentEval", "automata.eval.eval_base.EvalResult", "automata.eval.eval_base.Eval.generate_eval_result", "automata.eval.tool.tool_eval.ToolEval.generate_eval_result", "automata.eval.agent.agent_eval.AgentEvalResult", "automata.eval.tool.search_eval.SymbolSearchEvalResult", "automata.eval.agent.agent_eval.AgentEval.generate_eval_result"], "k": 20}
{"task_id": "ContextCodeRetrieval/269", "query": "Which method is used to add multiple entries to the collection?", "truth_top_match": "automata.symbol_embedding.vector_databases.ChromaSymbolEmbeddingVectorDatabase.batch_add", "top_k_matches": ["automata.symbol_embedding.vector_databases.ChromaSymbolEmbeddingVectorDatabase.batch_add", "automata.core.base.database.vector_database.JSONVectorDatabase.batch_add", "automata.core.base.database.vector_database.VectorDatabaseProvider.batch_add", "automata.symbol_embedding.vector_databases.ChromaSymbolEmbeddingVectorDatabase.batch_update", "automata.core.base.database.vector_database.ChromaVectorDatabase.batch_add", "automata.symbol_embedding.vector_databases.ChromaSymbolEmbeddingVectorDatabase.add", "automata.core.base.database.vector_database.ChromaVectorDatabase.clear", "automata.core.base.database.vector_database.JSONVectorDatabase.batch_update", "automata.core.base.database.vector_database.VectorDatabaseProvider.add", "automata.core.base.database.vector_database.VectorDatabaseProvider.batch_update"], "k": 20}
{"task_id": "ContextCodeRetrieval/270", "query": "What class acts as an interface for tools?", "truth_top_match": "automata.tools.tool_base.Tool", "top_k_matches": ["automata.tools.tool_executor.ToolExecution", "automata.agent.agent.Agent.tools", "automata.tools.tool_executor.ToolExecutor", "automata.tools.tool_executor.IToolExecution", "automata.tools.tool_base.Tool", "automata.agent.openai_agent.OpenAIAutomataAgent.tools", "automata.agent.openai_agent.OpenAIAgentToolkitBuilder", "automata.experimental.tools.builders.symbol_search_builder.SearchTool", "automata.agent.agent.AgentToolkitBuilder", "automata.tools.agent_tool_factory.AgentToolFactory"], "k": 20}
{"task_id": "ContextCodeRetrieval/271", "query": "How is a headline context component generated?", "truth_top_match": "automata.experimental.code_parsers.py.context_processing.context_retriever.HeadlineContextComponent.generate", "top_k_matches": ["automata.tests.unit.context_retriever.test_context_retriever.test_process_headline", "automata.experimental.code_parsers.py.context_processing.context_retriever.ContextComponent", "automata.experimental.code_parsers.py.context_processing.context_retriever.HeadlineContextComponent", "automata.experimental.code_parsers.py.context_processing.context_retriever.PyContextRetriever.__init__", "automata.experimental.code_parsers.py.context_processing.context_retriever.PyContextRetriever", "automata.experimental.code_parsers.py.context_processing.context_handler.PyContextHandler.construct_symbol_context", "automata.tests.unit.context_retriever.test_context_retriever.test_process_symbol_source", "automata.experimental.code_parsers.py.context_processing.context_retriever.BaseContextComponent", "automata.tests.unit.context_retriever.test_context_retriever.test_process_symbol_invalid_component", "automata.tests.unit.context_retriever.test_context_retriever.test_class_inheritance_in_source_code"], "k": 20}
{"task_id": "ContextCodeRetrieval/272", "query": "What class provides an execution environment for the agent?", "truth_top_match": "automata.experimental.tools.builders.py_interpreter.PyInterpreter", "top_k_matches": ["automata.experimental.tools.builders.py_interpreter.PyInterpreter", "automata.tests.unit.task.test_task_executor.TestExecuteBehavior", "automata.agent.openai_agent.OpenAIAutomataAgent", "automata.tasks.task_executor.IAutomataTaskExecution", "automata.eval.agent.agent_eval_harness.AgentEvaluationHarness", "automata.agent.agent.Agent", "automata.eval.agent.agent_eval.AgentEval", "automata.tests.unit.sample_modules.sample2.PythonAgentToolkit.python_agent_python_task", "automata.tasks.task_base.TaskEnvironment", "automata.tests.conftest.agent_eval_harness"], "k": 20}
{"task_id": "ContextCodeRetrieval/273", "query": "What is the HandlerDict class?", "truth_top_match": "automata.core.utils.HandlerDict", "top_k_matches": ["automata.core.utils.HandlerDict", "automata.core.utils.RootDict", "automata.core.utils.LoggingConfig", "automata.experimental.code_parsers.py.context_processing.context_handler.PyContextHandlerConfig", "automata.experimental.code_parsers.py.context_processing.context_handler.PyContextHandler", "automata.singletons.dependency_factory.DependencyFactory.create_symbol_doc_embedding_handler", "automata.singletons.dependency_factory.DependencyFactory.create_py_context_handler", "automata.experimental.memory_store.symbol_doc_embedding_handler.SymbolDocEmbeddingHandler", "automata.symbol_embedding.symbol_embedding_handler.SymbolEmbeddingHandler", "automata.llm.llm_base.LLMChatMessage.to_dict"], "k": 20}
{"task_id": "ContextCodeRetrieval/274", "query": "What class represents a model's information such as cost of prompt tokens, completion tokens and maximum tokens?", "truth_top_match": "automata.config.config_base.ModelInformation", "top_k_matches": ["automata.config.config_base.ModelInformation", "automata.llm.llm_base.LLMCompletionResult", "automata.llm.providers.openai_llm.OpenAIChatCompletionProvider.approximate_tokens_consumed", "automata.llm.providers.openai_llm.OpenAIChatCompletionProvider", "automata.llm.providers.openai_llm.OpenAIFunction.prompt_format", "automata.config.config_base.AgentConfig.Config", "automata.experimental.symbol_embedding.symbol_doc_embedding_builder.SymbolDocEmbeddingBuilder._build_class_document", "automata.llm.providers.openai_llm.OpenAIChatCompletionResult", "automata.config.config_base.LLMProvider", "automata.llm.providers.openai_llm.OpenAIFunction"], "k": 20}
{"task_id": "ContextCodeRetrieval/275", "query": "How can a SymbolSearchAction instance be created from a `Payload`?", "truth_top_match": "automata.eval.tool.search_eval.SymbolSearchAction.from_payload", "top_k_matches": ["automata.eval.tool.search_eval.SymbolSearchAction.from_payload", "automata.eval.tool.search_eval.SymbolSearchAction", "automata.tests.unit.tool_eval.test_symbol_search_eval.test_symbol_search_eval_result_from_payload", "automata.eval.tool.search_eval.SymbolSearchEvalResult.from_payload", "automata.eval.tool.search_eval.SymbolSearchAction.to_payload", "automata.tests.unit.tool_eval.test_symbol_search_eval.test_symbol_search_action", "automata.tests.unit.tool_eval.test_symbol_search_eval.test_symbol_search_eval_result", "automata.tests.unit.tool_eval.test_symbol_search_eval.test_symbol_search_eval_extract_action", "automata.eval.agent.openai_function_eval.OpenAIFunctionCallAction.from_payload", "automata.eval.tool.search_eval.SymbolSearchEvalResult"], "k": 20}
{"task_id": "ContextCodeRetrieval/276", "query": "How can a SymbolSearchEvalResult instance be created from a `Payload`?", "truth_top_match": "automata.eval.tool.search_eval.SymbolSearchEvalResult.from_payload", "top_k_matches": ["automata.eval.tool.search_eval.SymbolSearchEvalResult.from_payload", "automata.eval.tool.search_eval.SymbolSearchAction.from_payload", "automata.eval.eval_base.EvalResult.from_payload", "automata.eval.tool.search_eval.SymbolSearchEvalResult", "automata.tests.unit.tool_eval.test_symbol_search_eval.test_symbol_search_eval_result_from_payload", "automata.eval.agent.agent_eval.AgentEvalResult.from_payload", "automata.eval.tool.search_eval.SymbolSearchAction", "automata.eval.tool.search_eval.SymbolSearchAction.to_payload", "automata.tests.unit.tool_eval.test_symbol_search_eval.test_symbol_search_eval_result", "automata.eval.tool.search_eval.SymbolSearchEval"], "k": 20}
{"task_id": "ContextCodeRetrieval/277", "query": "Which private method finds the node for a given path?", "truth_top_match": "automata.code_parsers.directory.DirectoryManager._get_node_for_path", "top_k_matches": ["automata.code_parsers.directory.DirectoryManager._get_node_for_path", "automata.core.ast_handlers.find_syntax_tree_node", "automata.core.ast_handlers.find_syntax_tree_node.find_syntax_tree_node_pyast", "automata.tests.unit.directory_manager.test_directory_manager.test_get_node_for_path", "automata.core.ast_handlers.find_syntax_tree_node.find_syntax_tree_node_pyast.find_subnode", "automata.code_parsers.py.py_reader.PyReader.get_docstring", "automata.code_parsers.py.py_reader.PyReader.get_source_code", "automata.code_parsers.directory.DirectoryManager.get_subdirectories", "automata.tools.builders.py_reader_builder.PyReaderToolkitBuilder._run_indexer_retrieve_docstring", "automata.code_parsers.directory.DirectoryManager.get_files_in_dir"], "k": 20}
{"task_id": "ContextCodeRetrieval/278", "query": "What method is used to update data in a table in SQLDatabase?", "truth_top_match": "automata.core.base.database.relational_database.SQLDatabase.update_entry", "top_k_matches": ["automata.core.base.database.relational_database.SQLDatabase.update_entry", "automata.tests.unit.database.test_database_sql.test_update_entry", "automata.core.base.database.relational_database.RelationalDatabase.update_entry", "automata.core.base.database.relational_database.SQLDatabase", "automata.tasks.task_database.AutomataAgentTaskDatabase", "automata.llm.llm_base.LLMConversationDatabaseProvider", "automata.tests.unit.task.test_task_database.test_update_task_2", "automata.tests.unit.task.test_task_database.test_update_task", "automata.core.base.database.vector_database.JSONVectorDatabase.update_entry", "automata.llm.llm_base.LLMConversationDatabaseProvider.update"], "k": 20}
{"task_id": "ContextCodeRetrieval/279", "query": "How do we get callers of a symbol in SymbolGraph?", "truth_top_match": "automata.symbol.graph.symbol_graph.SymbolGraph.get_potential_symbol_callers", "top_k_matches": ["automata.symbol.graph.symbol_navigator.SymbolGraphNavigator.get_potential_symbol_callers", "automata.symbol.graph.symbol_navigator.SymbolGraphNavigator.get_potential_symbol_callees", "automata.symbol.graph.symbol_graph.SymbolGraph.get_potential_symbol_callers", "automata.symbol.graph.symbol_graph.SymbolGraph.get_potential_symbol_callees", "automata.symbol.graph.symbol_caller_callees.CallerCalleeProcessor.process", "automata.cli.scripts.run_code_embedding.collect_symbols", "automata.symbol.graph.symbol_caller_callees.CallerCalleeProcessor", "automata.experimental.scripts.run_update_tool_eval.process_symbol_graph", "automata.tests.unit.symbol.test_symbol_graph.test_get_all_symbols", "automata.symbol.graph.graph_builder.GraphBuilder._process_caller_callee_relationships"], "k": 20}
{"task_id": "ContextCodeRetrieval/280", "query": "What class applies the PageRank algorithm on symbols in a graph?", "truth_top_match": "automata.experimental.search.symbol_rank.SymbolRank", "top_k_matches": ["automata.experimental.search.symbol_rank.SymbolRank", "automata.experimental.search.symbol_search.SymbolSearch", "automata.cli.scripts.run_code_embedding.collect_symbols", "automata.tests.unit.symbol.test_symbol_rank.test_get_ranks_small_graph", "automata.experimental.scripts.run_update_tool_eval.process_symbol_graph", "automata.symbol.graph.symbol_navigator.SymbolGraphNavigator", "automata.experimental.search.symbol_rank.SymbolRank.get_ordered_ranks", "automata.experimental.search.symbol_search.SymbolSearch.symbol_rank", "automata.experimental.code_parsers.py.context_processing.context_handler.PyContextHandler", "automata.symbol.graph.symbol_graph_types.SymbolGraphType"], "k": 20}
{"task_id": "ContextCodeRetrieval/281", "query": "How can a CodeWritingAction be created from a payload?", "truth_top_match": "automata.eval.agent.code_writing_eval.CodeWritingAction.from_payload", "top_k_matches": ["automata.eval.agent.code_writing_eval.CodeWritingAction.from_payload", "automata.eval.agent.code_writing_eval.CodeWritingAction", "automata.eval.agent.code_writing_eval.CodeWritingAction.to_payload", "automata.tests.unit.agent_eval.test_agent_eval_actions_results.test_complex_payload", "automata.eval.agent.openai_function_eval.OpenAIFunctionCallAction.from_payload", "automata.eval.eval_base.parse_action_from_payload", "automata.eval.tool.search_eval.SymbolSearchAction.from_payload", "automata.eval.agent.code_writing_eval.CodeWritingEval", "automata.eval.tool.search_eval.SymbolSearchEvalResult.from_payload", "automata.eval.agent.code_writing_eval.CodeWritingEval.extract_action"], "k": 20}
{"task_id": "ContextCodeRetrieval/282", "query": "How to create a new branch in a repository using GitHubClient class method?", "truth_top_match": "automata.singletons.github_client.GitHubClient.create_branch", "top_k_matches": ["automata.tests.unit.singletons.test_singletons_github_client.test_create_branch", "automata.singletons.github_client.GitHubClient.create_pull_request", "automata.tests.unit.singletons.test_singletons_github_client.test_checkout_branch", "automata.singletons.github_client.GitHubClient", "automata.singletons.github_client.GitHubClient.create_branch", "automata.tests.unit.singletons.test_singletons_github_client.test_create_pull_request", "automata.tests.unit.singletons.test_singletons_github_client.test_commit_and_push_changes", "automata.singletons.github_client.RepositoryClient.create_branch", "automata.tests.unit.singletons.test_singletons_github_client.test_clone_repository", "automata.tests.unit.github.test_github_client.test_branch_exists"], "k": 20}
{"task_id": "ContextCodeRetrieval/283", "query": "Which class builds tools for an OpenAI agent?", "truth_top_match": "automata.agent.openai_agent.OpenAIAgentToolkitBuilder", "top_k_matches": ["automata.agent.openai_agent.OpenAIAgentToolkitBuilder", "automata.experimental.tools.builders.agentified_search_builder.AgentifiedSearchOpenAIToolkitBuilder.build_for_open_ai", "automata.experimental.tools.builders.advanced_context_oracle_builder.AdvancedContextOracleOpenAIToolkitBuilder.build_for_open_ai", "automata.tools.builders.py_reader_builder.PyReaderOpenAIToolkitBuilder.build_for_open_ai", "automata.tools.builders.py_writer_builder.PyCodeWriterOpenAIToolkitBuilder.build_for_open_ai", "automata.experimental.tools.builders.document_oracle_builder.DocumentOracleOpenAIToolkitBuilder.build_for_open_ai", "automata.llm.providers.openai_llm.OpenAITool", "automata.experimental.tools.builders.advanced_context_oracle_builder.AdvancedContextOracleOpenAIToolkitBuilder", "automata.experimental.tools.builders.py_interpreter.PyInterpreterOpenAIToolkitBuilder.build_for_open_ai", "automata.agent.openai_agent.OpenAIAgentToolkitBuilder.build_for_open_ai"], "k": 20}
{"task_id": "ContextCodeRetrieval/284", "query": "How can a SymbolEmbedding instance be created from known arguments?", "truth_top_match": "automata.symbol_embedding.symbol_embedding_base.SymbolEmbedding.from_args", "top_k_matches": ["automata.symbol_embedding.symbol_embedding_base.SymbolEmbedding.from_args", "automata.symbol_embedding.symbol_embedding_base.SymbolEmbedding", "automata.symbol_embedding.symbol_embedding_base.SymbolDocEmbedding", "automata.tests.unit.symbol_embedding.test_persistent_symbol_embedding.create_embedding", "automata.tests.conftest.embedded_symbol", "automata.symbol_embedding.symbol_embedding_base.SymbolCodeEmbedding", "automata.cli.scripts.run_doc_embedding.initialize_providers", "automata.singletons.dependency_factory.DependencyFactory.create_symbol_doc_embedding_handler", "automata.tests.unit.synchronizer.test_synchronizer.cem_and_symbol_graph_tester", "automata.tests.conftest.embedding_maker._make_embedding"], "k": 20}
{"task_id": "ContextCodeRetrieval/285", "query": "What function calculates the similarity between two strings?", "truth_top_match": "automata.core.utils.calculate_similarity", "top_k_matches": ["automata.core.utils.calculate_similarity", "automata.experimental.tools.builders.symbol_search_builder.SymbolSearchToolkitBuilder._symbol_code_similarity_search_processor", "automata.embedding.embedding_base.EmbeddingSimilarityCalculator", "automata.embedding.embedding_base.EmbeddingSimilarityCalculator.calculate_query_similarity_dict", "automata.tests.unit.sample_modules.sample.sample_function", "automata.experimental.search.symbol_search.SymbolSearch.get_symbol_code_similarity_results", "automata.experimental.search.symbol_search.SymbolSearch", "automata.embedding.embedding_base.EmbeddingSimilarityCalculator._calculate_embedding_similarity", "automata.experimental.tools.builders.agentified_search_builder.AgentifiedSearchToolkitBuilder._get_top_matches", "automata.tests.unit.tool_eval.test_symbol_search_eval.test_generate_eval_result"], "k": 20}
{"task_id": "ContextCodeRetrieval/286", "query": "What class is used to represent a source code context component?", "truth_top_match": "automata.experimental.code_parsers.py.context_processing.context_retriever.SourceCodeContextComponent", "top_k_matches": ["automata.experimental.code_parsers.py.context_processing.context_retriever.ContextComponent", "automata.tests.unit.context_retriever.test_context_retriever.test_class_attributes_in_source_code", "automata.experimental.code_parsers.py.context_processing.context_retriever.SourceCodeContextComponent", "automata.tests.unit.context_retriever.test_context_retriever.test_class_inheritance_in_source_code", "automata.tests.unit.context_retriever.test_context_retriever.test_source_code", "automata.experimental.code_parsers.py.context_processing.context_retriever.PyContextRetriever.__init__", "automata.experimental.code_parsers.py.context_processing.context_retriever.BaseContextComponent", "automata.tests.unit.context_retriever.test_context_retriever.test_process_symbol_source", "automata.tests.unit.context_retriever.test_context_retriever.test_source_code_2", "automata.experimental.code_parsers.py.context_processing.context_retriever.PyContextRetriever"], "k": 20}
{"task_id": "ContextCodeRetrieval/287", "query": "Which class builds the `Symbol` documentation embeddings?", "truth_top_match": "automata.experimental.symbol_embedding.symbol_doc_embedding_builder.SymbolDocEmbeddingBuilder", "top_k_matches": ["automata.experimental.symbol_embedding.symbol_doc_embedding_builder.SymbolDocEmbeddingBuilder", "automata.symbol_embedding.symbol_embedding_base.SymbolDocEmbedding", "automata.experimental.symbol_embedding.symbol_doc_embedding_builder.SymbolDocEmbeddingBuilder.build_non_class", "automata.symbol_embedding.symbol_embedding_base.SymbolCodeEmbedding", "automata.experimental.symbol_embedding.symbol_doc_embedding_builder.SymbolDocEmbeddingBuilder.build", "automata.symbol_embedding.symbol_embedding_base.SymbolEmbedding", "automata.experimental.memory_store.symbol_doc_embedding_handler.SymbolDocEmbeddingHandler", "automata.symbol_embedding.symbol_embedding_builders.SymbolCodeEmbeddingBuilder", "automata.embedding.embedding_base.EmbeddingVectorProvider", "automata.embedding.embedding_base.EmbeddingBuilder"], "k": 20}
{"task_id": "ContextCodeRetrieval/288", "query": "What class provides embeddings for symbols?", "truth_top_match": "automata.embedding.embedding_base.EmbeddingVectorProvider", "top_k_matches": ["automata.symbol_embedding.symbol_embedding_handler.SymbolEmbeddingHandler", "automata.symbol_embedding.symbol_embedding_base.SymbolEmbedding", "automata.symbol_embedding.symbol_embedding_base.SymbolCodeEmbedding", "automata.embedding.embedding_base.EmbeddingVectorProvider", "automata.experimental.symbol_embedding.symbol_doc_embedding_builder.SymbolDocEmbeddingBuilder", "automata.experimental.memory_store.symbol_doc_embedding_handler.SymbolDocEmbeddingHandler", "automata.symbol_embedding.symbol_embedding_base.SymbolDocEmbedding", "automata.embedding.embedding_base.EmbeddingBuilder", "automata.embedding.embedding_base.EmbeddingHandler", "automata.symbol_embedding.symbol_embedding_builders.SymbolCodeEmbeddingBuilder"], "k": 20}
{"task_id": "ContextCodeRetrieval/289", "query": "How are non-OpenAIFunctionCallActions filtered out in the OpenAIFunctionEval() class?", "truth_top_match": "automata.eval.agent.openai_function_eval.OpenAIFunctionEval._filter_actions", "top_k_matches": ["automata.eval.agent.openai_function_eval.OpenAIFunctionEval._filter_actions", "automata.eval.agent.openai_function_eval.OpenAIFunctionEval", "automata.eval.tool.tool_eval.ToolEval._filter_actions", "automata.eval.agent.openai_function_eval.OpenAIFunctionCallAction", "automata.tests.conftest.function_evaluator", "automata.eval.agent.openai_function_eval.OpenAIFunctionCallAction.__eq__", "automata.eval.agent.openai_function_eval.OpenAIFunctionCallAction.__repr__", "automata.eval.agent.agent_eval_composite.AgentEvalComposite._filter_actions", "automata.eval.agent.openai_function_eval.OpenAIFunctionEval.__repr__", "automata.eval.tool.tool_eval.ToolEval"], "k": 20}
{"task_id": "ContextCodeRetrieval/290", "query": "Which method of PyReaderToolkitBuilder is responsible for building associated tools?", "truth_top_match": "automata.tools.builders.py_reader_builder.PyReaderToolkitBuilder.build", "top_k_matches": ["automata.tools.builders.py_reader_builder.PyReaderOpenAIToolkitBuilder", "automata.tools.builders.py_reader_builder.PyReaderToolkitBuilder", "automata.experimental.tools.builders.py_interpreter.PyInterpreterToolkitBuilder", "automata.experimental.tools.builders.py_interpreter.PyInterpreterOpenAIToolkitBuilder", "automata.tools.builders.py_writer_builder.PyCodeWriterOpenAIToolkitBuilder", "automata.tools.builders.py_writer_builder.PyCodeWriterToolkitBuilder", "automata.tests.unit.code_readers.test_py_reader_tool.python_retriever_tool_builder", "automata.experimental.tools.builders.document_oracle_builder.DocumentOracleToolkitBuilder.build", "automata.experimental.tools.builders.document_oracle_builder.DocumentOracleOpenAIToolkitBuilder", "automata.agent.agent.AgentToolkitBuilder"], "k": 20}
{"task_id": "ContextCodeRetrieval/291", "query": "How can a Python AST object be loaded from a filepath?", "truth_top_match": "automata.singletons.py_module_loader.PyModuleLoader._load_module_from_fpath", "top_k_matches": ["automata.singletons.py_module_loader.PyModuleLoader._load_module_from_fpath", "automata.tests.unit.symbol.test_symbol_utils.test_convert_to_ast_object", "automata.singletons.py_module_loader.PyModuleLoader.fetch_ast_module", "automata.singletons.py_module_loader.PyModuleLoader", "automata.eval.tool.tool_eval_harness.ToolEvalSetLoader.__init__", "automata.eval.tool.tool_eval_harness.ToolEvalSetLoader", "automata.eval.agent.agent_eval_harness.AgentEvalSetLoader.__init__", "automata.symbol.symbol_utils.convert_to_ast_object", "automata.code_parsers.py.py_reader.PyReader.get_source_code", "automata.eval.agent.agent_eval_harness.AgentEvalSetLoader"], "k": 20}
{"task_id": "ContextCodeRetrieval/292", "query": "Which class represents the package component of a Symbol URI?", "truth_top_match": "automata.symbol.symbol_base.SymbolPackage", "top_k_matches": ["automata.symbol.symbol_base.SymbolPackage", "automata.symbol.symbol_base.Symbol", "automata.symbol.symbol_parser.parse_symbol", "automata.tests.unit.symbol.test_symbol_parser._unparse", "automata.symbol.symbol_base.Symbol.parent", "automata.symbol.symbol_base.SymbolDescriptor", "automata.tests.unit.cli.test_cli_scripts_run_doc_embedding.FakeSymbol", "automata.symbol.symbol_base.Symbol.__repr__", "automata.symbol.symbol_parser._SymbolParser", "automata.symbol.symbol_base.SymbolReference"], "k": 20}
{"task_id": "ContextCodeRetrieval/293", "query": "How are the total number of full matches calculated?", "truth_top_match": "automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics.total_full_matches", "top_k_matches": ["automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics.total_full_matches", "automata.eval.tool.tool_eval_metrics.ToolEvaluationMetrics.total_full_matches", "automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics.total_partial_matches", "automata.eval.tool.tool_eval_metrics.ToolEvaluationMetrics.full_match_rate", "automata.eval.tool.tool_eval_metrics.ToolEvaluationMetrics.total_partial_matches", "automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics.full_match_rate", "automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics.partial_match_rate", "automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics.total_actions", "automata.eval.agent.agent_eval.AgentEvalResult.is_full_match", "automata.eval.tool.tool_eval_metrics.ToolEvaluationMetrics.partial_match_rate"], "k": 20}
{"task_id": "ContextCodeRetrieval/294", "query": "What method is used to clear all entries in ChromaVectorDatabase?", "truth_top_match": "automata.core.base.database.vector_database.ChromaVectorDatabase.clear", "top_k_matches": ["automata.tests.unit.chroma.test_chroma_vector.test_clear", "automata.core.base.database.vector_database.ChromaVectorDatabase", "automata.tests.unit.chroma.test_chroma_vector.test_vector_initialization", "automata.core.base.database.vector_database.ChromaVectorDatabase.load", "automata.tests.unit.chroma.test_chroma_vector.test_update_database", "automata.symbol_embedding.vector_databases.ChromaSymbolEmbeddingVectorDatabase", "automata.core.base.database.vector_database.VectorDatabaseProvider.clear", "automata.core.base.database.vector_database.ChromaVectorDatabase.clear", "automata.tests.conftest.chroma_vector_db_persistent", "automata.tests.conftest.chroma_vector_db"], "k": 20}
{"task_id": "ContextCodeRetrieval/295", "query": "Which method in the DotPathMap class returns a dictionary containing the module dotpath to module filepath mapping?", "truth_top_match": "automata.code_parsers.py.dotpath_map.DotPathMap.items", "top_k_matches": ["automata.code_parsers.py.dotpath_map.DotPathMap", "automata.code_parsers.py.dotpath_map.DotPathMap.contains_dotpath", "automata.code_parsers.py.dotpath_map.DotPathMap.get_module_fpath_by_dotpath", "automata.code_parsers.py.dotpath_map.DotPathMap.items", "automata.code_parsers.py.dotpath_map.DotPathMap.get_module_dotpath_by_fpath", "automata.code_parsers.py.dotpath_map.DotPathMap._build_module_dotpath_to_fpath_map", "automata.singletons.py_module_loader.PyModuleLoader.fetch_existing_module_fpath_by_dotpath", "automata.singletons.py_module_loader.PyModuleLoader.fetch_ast_module", "automata.code_parsers.py.dotpath_map.DotPathMap.contains_fpath", "automata.singletons.py_module_loader.PyModuleLoader.__contains__"], "k": 20}
{"task_id": "ContextCodeRetrieval/296", "query": "What is ContextComponent Enum?", "truth_top_match": "automata.experimental.code_parsers.py.context_processing.context_retriever.ContextComponent", "top_k_matches": ["automata.experimental.code_parsers.py.context_processing.context_retriever.ContextComponent", "automata.experimental.code_parsers.py.context_processing.context_retriever.PyContextRetriever.__init__", "automata.experimental.code_parsers.py.context_processing.context_retriever.PyContextRetriever", "automata.tasks.task_environment.EnvironmentMode", "automata.config.config_base.LLMProvider", "automata.experimental.code_parsers.py.context_processing.context_retriever.BaseContextComponent", "automata.symbol.graph.symbol_graph_types.SymbolGraphType", "automata.tasks.task_base.TaskStatus", "automata.agent.agent.AgentToolkitNames", "automata.config.config_base.EmbeddingDataCategory"], "k": 20}
{"task_id": "ContextCodeRetrieval/297", "query": "What method in the AgentEvalSetLoader class loads the JSON file?", "truth_top_match": "automata.eval.agent.agent_eval_harness.AgentEvalSetLoader.load_json", "top_k_matches": ["automata.eval.agent.agent_eval_harness.AgentEvalSetLoader", "automata.eval.tool.tool_eval_harness.ToolEvalSetLoader", "automata.tests.unit.agent_eval.test_agent_eval_loader.loader", "automata.eval.tool.tool_eval_harness.ToolEvalSetLoader.load_json", "automata.eval.agent.agent_eval_harness.AgentEvalSetLoader.load_json", "automata.core.base.database.vector_database.JSONVectorDatabase.load", "automata.tests.unit.tool_eval.test_tool_eval_loader.loader", "automata.cli.scripts.run_agent_eval.run_eval_harness", "automata.cli.scripts.run_tool_eval.run_eval_harness", "automata.eval.eval_error.EvalLoadingError"], "k": 20}
{"task_id": "ContextCodeRetrieval/298", "query": "What function runs a task with the given parameters?", "truth_top_match": "automata.core.run_handlers.run_with_task", "top_k_matches": ["automata.core.run_handlers.run_with_task", "automata.core.run_handlers.run_with_eval", "automata.tests.unit.task.test_task_executor.TestExecuteBehavior.execute", "automata.tasks.task_base.ITaskExecution.execute", "automata.tests.unit.task.test_task_executor.TestExecuteBehavior", "automata.tasks.task_executor.IAutomataTaskExecution", "automata.tasks.task_executor.IAutomataTaskExecution.execute", "automata.tests.unit.task.test_task_executor.test_execute_automata_task_success", "automata.core.run_handlers.create_task", "automata.tests.unit.agent_eval.test_agent_eval_actions_results.test_generate_eval_result_partial_match"], "k": 20}
{"task_id": "ContextCodeRetrieval/299", "query": "What function validates a YAML file based on a predefined schema?", "truth_top_match": "automata.cli.scripts.run_agent_config_validation.test_yaml_validation", "top_k_matches": ["automata.cli.scripts.run_agent_config_validation.test_yaml_validation", "automata.cli.scripts.run_agent_config_validation.test_yaml_compatibility", "automata.cli.scripts.run_agent_config_validation.yaml_schema", "automata.eval.tool.tool_eval_harness.ToolEvalSetLoader", "automata.eval.tool.tool_eval_harness.ToolEvalSetLoader.__init__", "automata.tasks.task_base.TaskEnvironment.validate", "automata.tests.unit.ast_utils.test_ast_utils_bounding_box.test_fetch_bounding_box_with_function_node_in_file", "automata.tests.unit.tool_eval.test_tool_eval_loader.test_tool_eval_loader", "automata.eval.agent.agent_eval_harness.AgentEvalSetLoader.load_json", "automata.tests.unit.code_writers.test_py_writer.test_create_function_source_function"], "k": 20}
{"task_id": "ContextCodeRetrieval/300", "query": "What class represents the provider of lower level models?", "truth_top_match": "automata.config.config_base.LLMProvider", "top_k_matches": ["automata.config.config_base.LLMProvider", "automata.config.openai_config.OpenAIAutomataAgentConfig.get_llm_provider", "automata.config.config_base.AgentConfig.get_llm_provider", "automata.config.config_base.AgentConfig.Config", "automata.llm.providers.openai_llm.OpenAIEmbeddingProvider", "automata.tests.unit.symbol_embedding.test_symbol_embedding.mock_provider", "automata.llm.llm_base.LLMCompletionResult", "automata.embedding.embedding_base.EmbeddingBuilder.__init__", "automata.experimental.code_parsers.py.context_processing.context_retriever.ContextComponent", "automata.config.config_base.ModelInformation"], "k": 20}
{"task_id": "ContextCodeRetrieval/301", "query": "How do you filter the top N symbols according to their ranks?", "truth_top_match": "automata.experimental.search.symbol_rank.SymbolRank.get_top_symbols", "top_k_matches": ["automata.experimental.search.symbol_rank.SymbolRank.get_top_symbols", "automata.experimental.code_parsers.py.context_processing.context_handler.PyContextHandler.get_symbol_rank_matches", "automata.experimental.tools.builders.symbol_search_builder.SymbolSearchToolkitBuilder._symbol_rank_search_processor", "automata.experimental.search.symbol_rank.SymbolRank", "automata.cli.scripts.run_code_embedding.collect_symbols", "automata.experimental.code_parsers.py.context_processing.context_handler.PyContextHandlerConfig.__init__", "automata.experimental.search.symbol_rank.SymbolRank.get_ordered_ranks", "automata.experimental.search.symbol_search.SymbolSearch.get_symbol_rank_results", "automata.tests.unit.symbol.test_symbol_rank.test_get_ranks", "automata.tests.unit.symbol.test_symbol_utils.test_get_rankable_symbols"], "k": 20}
{"task_id": "ContextCodeRetrieval/302", "query": "What method is used to add an entry to the database in ChromaVectorDatabase?", "truth_top_match": "automata.core.base.database.vector_database.ChromaVectorDatabase.add", "top_k_matches": ["automata.core.base.database.vector_database.ChromaVectorDatabase", "automata.symbol_embedding.vector_databases.ChromaSymbolEmbeddingVectorDatabase", "automata.tests.unit.chroma.test_chroma_vector.test_update_database", "automata.tests.unit.chroma.test_chroma_vector.test_contains", "automata.tests.unit.chroma.test_chroma_vector.test_size", "automata.tests.unit.chroma.test_chroma_vector.test_vector_initialization", "automata.tests.unit.chroma.test_chroma_vector.test_add_single_symbol", "automata.core.base.database.vector_database.VectorDatabaseProvider.add", "automata.tests.unit.chroma.test_chroma_vector.test_add_single_symbol_persistent", "automata.tests.unit.chroma.test_chroma_vector.test_add_duplicate_symbol"], "k": 20}
{"task_id": "ContextCodeRetrieval/303", "query": "How can we retrieve the dotpath for a given filepath using PyModuleLoader?", "truth_top_match": "automata.singletons.py_module_loader.PyModuleLoader.get_module_dotpath_by_fpath", "top_k_matches": ["automata.code_parsers.py.dotpath_map.DotPathMap.get_module_fpath_by_dotpath", "automata.singletons.py_module_loader.PyModuleLoader.fetch_existing_module_fpath_by_dotpath", "automata.code_parsers.py.dotpath_map.DotPathMap.get_module_dotpath_by_fpath", "automata.singletons.py_module_loader.PyModuleLoader.fetch_ast_module", "automata.singletons.py_module_loader.PyModuleLoader.fetch_existing_module_dotpath", "automata.tests.unit.module_loader.test_module_loader.test_dotpath_map", "automata.code_parsers.py.dotpath_map.DotPathMap.contains_dotpath", "automata.singletons.py_module_loader.PyModuleLoader.get_module_dotpath_by_fpath", "automata.code_parsers.py.py_reader.PyReader.get_docstring", "automata.singletons.py_module_loader.PyModuleLoader"], "k": 20}
{"task_id": "ContextCodeRetrieval/304", "query": "Which method gets the the code of the best match to the input query?", "truth_top_match": "automata.experimental.tools.builders.agentified_search_builder.AgentifiedSearchToolkitBuilder._get_code_for_best_match", "top_k_matches": ["automata.experimental.tools.builders.agentified_search_builder.AgentifiedSearchToolkitBuilder._get_code_for_best_match", "automata.experimental.tools.builders.agentified_search_builder.AgentifiedSearchToolkitBuilder._get_docs_for_best_match", "automata.experimental.tools.builders.document_oracle_builder.DocumentOracleToolkitBuilder._get_best_match", "automata.experimental.tools.builders.symbol_search_builder.SymbolSearchToolkitBuilder._retrieve_source_code_by_symbol_processor", "automata.experimental.tools.builders.symbol_search_builder.SymbolSearchToolkitBuilder._symbol_code_similarity_search_processor", "automata.tests.unit.agentified_search.test_agentified_search.test_get_code_for_best_match", "automata.experimental.tools.builders.agentified_search_builder.AgentifiedSearchToolkitBuilder._get_top_matches", "automata.experimental.tools.builders.symbol_search_builder.SymbolSearchToolkitBuilder._symbol_agent_search_processor", "automata.experimental.tools.builders.agentified_search_builder.AgentifiedSearchToolkitBuilder._agent_selected_best_match", "automata.experimental.tools.builders.advanced_context_oracle_builder.AdvancedContextOracleToolkitBuilder._get_context"], "k": 20}
{"task_id": "ContextCodeRetrieval/305", "query": "What method is used to connect to the SQL database in SQLDatabase?", "truth_top_match": "automata.core.base.database.relational_database.SQLDatabase.connect", "top_k_matches": ["automata.core.base.database.relational_database.SQLDatabase", "automata.tests.unit.database.test_database_sql.test_connect_close", "automata.core.base.database.relational_database.SQLDatabase.__init__", "automata.core.base.database.relational_database.SQLDatabase.close", "automata.core.base.database.relational_database.SQLDatabase.connect", "automata.core.base.database.relational_database.RelationalDatabase", "automata.core.base.database.relational_database.RelationalDatabase.connect", "automata.tasks.task_database.AutomataAgentTaskDatabase", "automata.tests.unit.database.test_database_sql.db", "automata.tests.unit.automata_agent.test_automata_database.test_init"], "k": 20}
{"task_id": "ContextCodeRetrieval/306", "query": "What function initializes the Automata task environment?", "truth_top_match": "automata.core.run_handlers.initialize_automata", "top_k_matches": ["automata.core.run_handlers.initialize_automata", "automata.tasks.task_environment.AutomataTaskEnvironment", "automata.tests.regression.test_agent_end_to_end.automata_setup", "automata.tests.conftest.task_environment", "automata.tasks.task_environment.AutomataTaskEnvironment.setup", "automata.tasks.automata_task.AutomataTask", "automata.tests.conftest.setup", "automata.tests.unit.task.test_task_database.task", "automata.tasks.task_registry.AutomataTaskRegistry.__init__", "automata.tasks.task_base.TaskEnvironment"], "k": 20}
{"task_id": "ContextCodeRetrieval/307", "query": "Which private method is responsible for formatting the system template to produce the system instruction?", "truth_top_match": "automata.config.openai_config.OpenAIAutomataAgentConfig._formatted_instruction", "top_k_matches": ["automata.config.openai_config.OpenAIAutomataAgentConfig._formatted_instruction", "automata.config.openai_config.OpenAIAutomataAgentConfigBuilder.with_system_template_formatter", "automata.agent.openai_agent.OpenAIAutomataAgent._build_initial_messages", "automata.config.openai_config.OpenAIAutomataAgentConfig", "automata.config.openai_config.OpenAIAutomataAgentConfig.setup", "automata.tests.unit.automata_agent.test_automata_agent.test_build_initial_messages", "automata.experimental.symbol_embedding.symbol_doc_embedding_builder.SymbolDocEmbeddingBuilder._build_prompt", "automata.tasks.task_error.TaskInstructionsError", "automata.llm.providers.openai_llm.OpenAIFunction.prompt_format", "automata.config.formatter.TemplateFormatter"], "k": 20}
{"task_id": "ContextCodeRetrieval/308", "query": "What method in _SymbolParser checks if a character is a valid identifier character?", "truth_top_match": "automata.symbol.symbol_parser._SymbolParser.is_identifier_character", "top_k_matches": ["automata.symbol.symbol_parser._SymbolParser", "automata.symbol.symbol_parser._SymbolParser.is_identifier_character", "automata.symbol.symbol_parser._SymbolParser.accept_identifier", "automata.symbol.symbol_parser._SymbolParser.parse_descriptor", "automata.symbol.symbol_parser._SymbolParser.accept_space_escaped_identifier", "automata.symbol.symbol_parser._SymbolParser.accept_escaped_identifier", "automata.symbol.symbol_parser._SymbolParser.accept_backtick_escaped_identifier", "automata.symbol.symbol_parser.parse_symbol", "automata.tests.unit.symbol.test_symbol_base.test_parsed_symbol", "automata.tests.unit.symbol.test_symbol_base.test_symbol_hash"], "k": 20}
{"task_id": "ContextCodeRetrieval/309", "query": "Which class evaluates an LLM's code writing ability?", "truth_top_match": "automata.eval.agent.code_writing_eval.CodeWritingEval", "top_k_matches": ["automata.eval.agent.code_writing_eval.CodeWritingEval", "automata.eval.agent.code_writing_eval.CodeWritingAction", "automata.eval.eval_base.Eval", "automata.tests.conftest.code_evaluator", "automata.config.config_base.LLMProvider", "automata.llm.llm_base.LLMCompletionResult", "automata.code_writers.py.py_code_writer.PyCodeWriter", "automata.eval.tool.search_eval.SymbolSearchEval", "automata.llm.llm_base.LLMConversation", "automata.tools.builders.py_writer_builder.PyCodeWriterToolkitBuilder"], "k": 20}
{"task_id": "ContextCodeRetrieval/310", "query": "Which method in the SymbolCodeEmbeddingHandler class updates existing source code embedding of a Symbol?", "truth_top_match": "automata.memory_store.symbol_code_embedding_handler.SymbolCodeEmbeddingHandler._update_existing_embedding", "top_k_matches": ["automata.experimental.memory_store.symbol_doc_embedding_handler.SymbolDocEmbeddingHandler._update_existing_embedding", "automata.memory_store.symbol_code_embedding_handler.SymbolCodeEmbeddingHandler", "automata.memory_store.symbol_code_embedding_handler.SymbolCodeEmbeddingHandler._update_existing_embedding", "automata.experimental.memory_store.symbol_doc_embedding_handler.SymbolDocEmbeddingHandler", "automata.experimental.memory_store.symbol_doc_embedding_handler.SymbolDocEmbeddingHandler._create_new_embedding", "automata.memory_store.symbol_code_embedding_handler.SymbolCodeEmbeddingHandler.process_embedding", "automata.experimental.memory_store.symbol_doc_embedding_handler.SymbolDocEmbeddingHandler.process_embedding", "automata.symbol_embedding.symbol_embedding_builders.SymbolCodeEmbeddingBuilder", "automata.symbol_embedding.symbol_embedding_builders.SymbolCodeEmbeddingBuilder.build", "automata.experimental.symbol_embedding.symbol_doc_embedding_builder.SymbolDocEmbeddingBuilder.build"], "k": 20}
{"task_id": "ContextCodeRetrieval/311", "query": "What class removes import statements from a module, class or function?", "truth_top_match": "automata.core.ast_handlers.ImportRemover", "top_k_matches": ["automata.core.ast_handlers.ImportRemover", "automata.core.ast_handlers.DocstringRemover", "automata.core.ast_handlers.ImportRemover.visit", "automata.core.ast_handlers.find_imports", "automata.core.ast_handlers.get_node_without_imports", "automata.tests.unit.code_writers.test_py_writer.test_reduce_module_remove_function", "automata.tests.unit.ast_utils.test_ast_utils.test_get_node_without_imports", "automata.code_writers.py.py_code_writer.PyCodeWriter.delete_from_module", "automata.tests.unit.code_writers.test_py_writer.test_delete_from_module", "automata.code_parsers.py.py_reader.PyReader"], "k": 20}
{"task_id": "ContextCodeRetrieval/312", "query": "Which class enumerates the available agent tools?", "truth_top_match": "automata.agent.agent.AgentToolkitNames", "top_k_matches": ["automata.agent.agent.AgentToolkitNames", "automata.experimental.tools.builders.symbol_search_builder.SearchTool", "automata.agent.agent.Agent.tools", "automata.agent.openai_agent.OpenAIAgentToolkitBuilder", "automata.tools.agent_tool_factory.AgentToolFactory", "automata.agent.openai_agent.OpenAIAutomataAgent.tools", "automata.agent.agent.AgentToolkitBuilder", "automata.tests.unit.automata_agent.test_automata_agent.test_tool_execution", "automata.experimental.tools.builders.agentified_search_builder.AgentifiedSearchOpenAIToolkitBuilder", "automata.tests.unit.sample_modules.sample2.PythonAgentToolkit"], "k": 20}
{"task_id": "ContextCodeRetrieval/313", "query": "How are entries filtered in the JSON data?", "truth_top_match": "automata.experimental.scripts.run_update_tool_eval.filter_entries", "top_k_matches": ["automata.experimental.scripts.run_update_tool_eval.filter_entries", "automata.experimental.scripts.run_update_tool_eval.get_processed_paths", "automata.eval.agent.agent_eval_harness.AgentEvalSetLoader.load_json", "automata.experimental.scripts.run_update_tool_eval.filter_and_log_symbols", "automata.core.base.database.vector_database.JSONVectorDatabase", "automata.symbol_embedding.vector_databases.ChromaSymbolEmbeddingVectorDatabase._sort_entries", "automata.experimental.scripts.run_update_tool_eval.load_and_process_data", "automata.eval.tool.tool_eval_harness.ToolEvalSetLoader", "automata.tests.unit.database.test_database_sql.test_update_entry", "automata.symbol_embedding.vector_databases.JSONSymbolEmbeddingVectorDatabase"], "k": 20}
{"task_id": "ContextCodeRetrieval/314", "query": "What method filters out non-CodeWritingActions in CodeWritingEval?", "truth_top_match": "automata.eval.agent.code_writing_eval.CodeWritingEval._filter_actions", "top_k_matches": ["automata.eval.agent.code_writing_eval.CodeWritingEval._filter_actions", "automata.eval.agent.code_writing_eval.CodeWritingEval", "automata.eval.tool.tool_eval.ToolEval._filter_actions", "automata.eval.agent.code_writing_eval.CodeWritingAction", "automata.eval.agent.agent_eval_composite.AgentEvalComposite._filter_actions", "automata.eval.agent.openai_function_eval.OpenAIFunctionEval._filter_actions", "automata.eval.agent.code_writing_eval.CodeWritingEval.extract_action", "automata.eval.agent.code_writing_eval.CodeWritingAction.from_payload", "automata.eval.agent.code_writing_eval.CodeWritingAction.__eq__", "automata.eval.agent.code_writing_eval.CodeWritingAction.__repr__"], "k": 20}
{"task_id": "ContextCodeRetrieval/315", "query": "What method is used to build the tools associated with the Python interpreter for OpenAI?", "truth_top_match": "automata.experimental.tools.builders.py_interpreter.PyInterpreterOpenAIToolkitBuilder.build_for_open_ai", "top_k_matches": ["automata.experimental.tools.builders.py_interpreter.PyInterpreterOpenAIToolkitBuilder.build_for_open_ai", "automata.experimental.tools.builders.py_interpreter.PyInterpreterOpenAIToolkitBuilder", "automata.experimental.tools.builders.advanced_context_oracle_builder.AdvancedContextOracleOpenAIToolkitBuilder.build_for_open_ai", "automata.experimental.tools.builders.agentified_search_builder.AgentifiedSearchToolkitBuilder.build", "automata.tools.builders.py_reader_builder.PyReaderOpenAIToolkitBuilder.build_for_open_ai", "automata.experimental.tools.builders.document_oracle_builder.DocumentOracleOpenAIToolkitBuilder.build_for_open_ai", "automata.tools.builders.py_writer_builder.PyCodeWriterOpenAIToolkitBuilder.build_for_open_ai", "automata.experimental.tools.builders.agentified_search_builder.AgentifiedSearchOpenAIToolkitBuilder.build_for_open_ai", "automata.tools.builders.py_reader_builder.PyReaderToolkitBuilder.build", "automata.tools.builders.py_writer_builder.PyCodeWriterOpenAIToolkitBuilder"], "k": 20}
{"task_id": "ContextCodeRetrieval/316", "query": "How can the PyModuleLoader Singleton be initialized?", "truth_top_match": "automata.singletons.py_module_loader.PyModuleLoader.initialize", "top_k_matches": ["automata.singletons.py_module_loader.PyModuleLoader", "automata.tests.unit.task.test_task_executor.module_loader", "automata.tests.unit.code_writers.test_py_writer.module_loader", "automata.tests.unit.code_readers.test_py_reader.module_loader", "automata.tests.unit.code_readers.test_py_reader_tool.module_loader", "automata.tests.unit.code_writers.test_py_writer_tool.module_loader", "automata.singletons.py_module_loader.PyModuleLoader.reset", "automata.tests.unit.context_retriever.test_context_handler.local_module_loader", "automata.tests.unit.context_retriever.test_context_retriever.local_module_loader", "automata.tests.unit.symbol.test_symbol_utils.local_module_loader"], "k": 20}
{"task_id": "ContextCodeRetrieval/317", "query": "What abstract method is used to update a specific entry in the VectorDatabaseProvider?", "truth_top_match": "automata.core.base.database.vector_database.VectorDatabaseProvider.update_entry", "top_k_matches": ["automata.core.base.database.vector_database.VectorDatabaseProvider", "automata.core.base.database.vector_database.VectorDatabaseProvider.update_entry", "automata.core.base.database.vector_database.JSONVectorDatabase", "automata.core.base.database.vector_database.ChromaVectorDatabase.update_entry", "automata.core.base.database.vector_database.ChromaVectorDatabase", "automata.tests.unit.chroma.test_chroma_vector.test_update_database", "automata.symbol_embedding.vector_databases.ChromaSymbolEmbeddingVectorDatabase.update_entry", "automata.llm.llm_base.LLMConversationDatabaseProvider", "automata.core.base.database.vector_database.VectorDatabaseProvider.add", "automata.core.base.database.vector_database.JSONVectorDatabase.update_entry"], "k": 20}
{"task_id": "ContextCodeRetrieval/318", "query": "Which method in the SymbolSearch class fetches the list of similar symbols sorted by embedding similarity?", "truth_top_match": "automata.experimental.search.symbol_search.SymbolSearch.get_symbol_code_similarity_results", "top_k_matches": ["automata.experimental.search.symbol_search.SymbolSearch.get_symbol_code_similarity_results", "automata.experimental.search.symbol_search.SymbolSearch.get_symbol_rank_results", "automata.experimental.search.symbol_search.SymbolSearch", "automata.symbol_embedding.symbol_embedding_handler.SymbolEmbeddingHandler.get_all_ordered_embeddings", "automata.symbol_embedding.symbol_embedding_handler.SymbolEmbeddingHandler", "automata.tests.unit.symbol.test_symbol_similarity.test_get_nearest_symbols_for_query", "automata.experimental.symbol_embedding.symbol_doc_embedding_builder.SymbolDocEmbeddingBuilder", "automata.memory_store.symbol_code_embedding_handler.SymbolCodeEmbeddingHandler.process_embedding", "automata.experimental.memory_store.symbol_doc_embedding_handler.SymbolDocEmbeddingHandler", "automata.symbol_embedding.vector_databases.JSONSymbolEmbeddingVectorDatabase.get_all_ordered_embeddings"], "k": 20}
{"task_id": "ContextCodeRetrieval/319", "query": "What abstract method is used to connect to the database in RelationalDatabase?", "truth_top_match": "automata.core.base.database.relational_database.RelationalDatabase.connect", "top_k_matches": ["automata.core.base.database.relational_database.RelationalDatabase", "automata.core.base.database.relational_database.SQLDatabase", "automata.core.base.database.relational_database.RelationalDatabase.connect", "automata.core.base.database.relational_database.RelationalDatabase.close", "automata.tests.unit.database.test_database_sql.test_connect_close", "automata.llm.llm_base.LLMConversationDatabaseProvider", "automata.core.base.database.relational_database.SQLDatabase.NullConnection", "automata.core.base.database.relational_database.SQLDatabase.connect", "automata.core.base.database.relational_database.SQLDatabase.__init__", "automata.core.base.database.relational_database.SQLDatabase.close"], "k": 20}
{"task_id": "ContextCodeRetrieval/320", "query": "Which method in the DotPathMap class checks if the map contains a module with the given dotpath?", "truth_top_match": "automata.code_parsers.py.dotpath_map.DotPathMap.contains_dotpath", "top_k_matches": ["automata.code_parsers.py.dotpath_map.DotPathMap.contains_dotpath", "automata.code_parsers.py.dotpath_map.DotPathMap.contains_fpath", "automata.singletons.py_module_loader.PyModuleLoader.__contains__", "automata.singletons.py_module_loader.PyModuleLoader.fetch_ast_module", "automata.code_parsers.py.dotpath_map.DotPathMap.get_module_fpath_by_dotpath", "automata.singletons.py_module_loader.PyModuleLoader.fetch_existing_module_fpath_by_dotpath", "automata.code_parsers.py.dotpath_map.DotPathMap", "automata.singletons.py_module_loader.PyModuleLoader.delete_module", "automata.singletons.py_module_loader.PyModuleLoader.put_module", "automata.code_parsers.py.dotpath_map.DotPathMap.put_module"], "k": 20}
{"task_id": "ContextCodeRetrieval/321", "query": "What function is used to save data into a JSON file?", "truth_top_match": "automata.experimental.scripts.run_update_tool_eval.save_json_data", "top_k_matches": ["automata.experimental.scripts.run_update_tool_eval.save_json_data", "automata.core.base.database.vector_database.JSONVectorDatabase.save", "automata.tests.unit.database.test_database_vector.test_save", "automata.core.base.database.vector_database.JSONVectorDatabase", "automata.symbol_embedding.vector_databases.JSONSymbolEmbeddingVectorDatabase", "automata.eval.tool.tool_eval_harness.ToolEvalSetLoader", "automata.tests.unit.database.test_database_vector.test_load", "automata.core.base.database.vector_database.VectorDatabaseProvider.save", "automata.eval.tool.tool_eval_harness.ToolEvalSetLoader.load_json", "automata.eval.agent.agent_eval_harness.AgentEvalSetLoader.load_json"], "k": 20}
{"task_id": "ContextCodeRetrieval/322", "query": "What abstract property is used to get the conversation associated with the Agent?", "truth_top_match": "automata.agent.agent.Agent.conversation", "top_k_matches": ["automata.agent.agent.Agent.conversation", "automata.agent.openai_agent.OpenAIAutomataAgent.conversation", "automata.agent.openai_agent.OpenAIAutomataAgent.agent_responses", "automata.agent.agent.Agent.agent_responses", "automata.llm.llm_base.LLMConversation.messages", "automata.llm.llm_base.LLMConversation", "automata.agent.agent.Agent", "automata.llm.llm_base.LLMConversation.__len__", "automata.agent.agent.Agent.tools", "automata.llm.llm_base.LLMConversation.reset_conversation"], "k": 20}
{"task_id": "ContextCodeRetrieval/323", "query": "Which method loads the configuration for the Automata OpenAI Agent?", "truth_top_match": "automata.config.openai_config.OpenAIAutomataAgentConfig.load", "top_k_matches": ["automata.config.openai_config.OpenAIAutomataAgentConfig", "automata.config.openai_config.OpenAIAutomataAgentConfig.load", "automata.agent.openai_agent.OpenAIAutomataAgent", "automata.tests.unit.automata_agent.test_automata_agent_builder.test_builder_creates_proper_instance", "automata.config.openai_config.OpenAIAutomataAgentConfigBuilder", "automata.tests.unit.automata_agent.test_automata_agent_builder.test_config_loading_different_versions", "automata.config.config_base.AgentConfig.Config", "automata.agent.openai_agent.OpenAIAutomataAgent.__init__", "automata.tasks.task_executor.IAutomataTaskExecution._build_agent", "automata.tests.unit.automata_agent.test_automata_agent.test_agent_initialization"], "k": 20}
{"task_id": "ContextCodeRetrieval/324", "query": "Which method is used to remove a label from an issue on the remote repository?", "truth_top_match": "automata.singletons.github_client.GitHubClient.remove_label", "top_k_matches": ["automata.singletons.github_client.GitHubClient.remove_label", "automata.singletons.github_client.GitHubClient.create_label", "automata.singletons.github_client.GitHubClient.add_label", "automata.singletons.github_client.GitHubClient.remove_issue_comment", "automata.singletons.github_client.GitHubClient.create_issue", "automata.singletons.github_client.GitHubClient.fetch_issue", "automata.singletons.github_client.GitHubClient.create_issue_comment", "automata.tests.unit.singletons.test_singletons_github_client.test_create_issue", "automata.singletons.github_client.GitHubClient.get_open_issues", "automata.tests.unit.github.test_github_client.test_remove_issue_comment"], "k": 20}
{"task_id": "ContextCodeRetrieval/325", "query": "Which method of PyInterpreter attempts to execute the provided code?", "truth_top_match": "automata.experimental.tools.builders.py_interpreter.PyInterpreter._execute_code", "top_k_matches": ["automata.experimental.tools.builders.py_interpreter.PyInterpreter", "automata.experimental.tools.builders.py_interpreter.PyInterpreter._execute_code", "automata.experimental.tools.builders.py_interpreter.PyInterpreter._attempt_execution", "automata.experimental.tools.builders.py_interpreter.PyInterpreter.__repr__", "automata.experimental.tools.builders.py_interpreter.PyInterpreter.__init__", "automata.experimental.tools.builders.py_interpreter.PyInterpreterToolkitBuilder.__init__", "automata.code_parsers.py.py_reader.PyReader", "automata.eval.agent.code_writing_eval.CodeWritingAction.__repr__", "automata.tests.unit.context_retriever.test_context_retriever.test_source_code_2", "automata.tests.unit.context_retriever.test_context_retriever.test_source_code"], "k": 20}
{"task_id": "ContextCodeRetrieval/326", "query": "How to generate a search list by splicing the search results on the symbol with the search results biased on automata.tests?", "truth_top_match": "automata.experimental.symbol_embedding.symbol_doc_embedding_builder.SymbolDocEmbeddingBuilder._generate_search_list", "top_k_matches": ["automata.experimental.symbol_embedding.symbol_doc_embedding_builder.SymbolDocEmbeddingBuilder._generate_search_list", "automata.tests.regression.test_symbol_searcher_regression.test_symbol_rank_search_on_symbol", "automata.tests.unit.agentified_search.test_agentified_search.test_get_top_matches", "automata.tests.regression.test_dependencies.test_automata_symbol_providers", "automata.tests.regression.test_symbol_searcher_regression.test_source_code_retrieval", "automata.tests.unit.tool_eval.test_symbol_search_eval.test_symbol_search_eval_extract_action", "automata.tests.unit.symbol.test_symbol_utils.test_get_rankable_symbols", "automata.tests.unit.agentified_search.test_agentified_search.test_get_code_for_best_match", "automata.tests.unit.tool_eval.test_symbol_search_eval.test_symbol_search_action", "automata.tests.unit.symbol.test_symbol_search.test_symbol_rank_search"], "k": 20}
{"task_id": "ContextCodeRetrieval/327", "query": "What is the main entry point to run the Automata agent?", "truth_top_match": "automata.cli.scripts.run_agent.main", "top_k_matches": ["automata.cli.scripts.run_agent.main", "automata.cli.commands.run_agent", "automata.tests.unit.cli.test_cli_commands.test_cli_run_agent", "automata.agent.openai_agent.OpenAIAutomataAgent", "automata.cli.scripts.run_agent_eval.main", "automata.cli.scripts.run_tool_eval.main", "automata.tests.unit.automata_agent.test_automata_agent_builder.test_automata_agent_init", "automata.tests.unit.automata_agent.test_automata_agent.test_agent_initialization", "automata.core.run_handlers.run_setup", "automata.tests.unit.automata_agent.test_automata_agent.test_tool_execution"], "k": 20}
{"task_id": "ContextCodeRetrieval/328", "query": "What abstract method is used to select data from a table in RelationalDatabase?", "truth_top_match": "automata.core.base.database.relational_database.RelationalDatabase.select", "top_k_matches": ["automata.core.base.database.relational_database.RelationalDatabase", "automata.core.base.database.relational_database.RelationalDatabase.select", "automata.core.base.database.relational_database.SQLDatabase.select", "automata.core.base.database.relational_database.SQLDatabase", "automata.tests.unit.database.test_database_sql.test_insert_select", "automata.llm.llm_base.LLMConversationDatabaseProvider", "automata.core.base.database.vector_database.VectorDatabaseProvider.load", "automata.tasks.task_database.AutomataAgentTaskDatabase", "automata.tests.unit.database.test_database_sql.test_delete", "automata.tests.unit.automata_agent.test_automata_database.test_init"], "k": 20}
{"task_id": "ContextCodeRetrieval/329", "query": "Which class provides a vector database that saves into a JSON file?", "truth_top_match": "automata.symbol_embedding.vector_databases.JSONSymbolEmbeddingVectorDatabase", "top_k_matches": ["automata.core.base.database.vector_database.JSONVectorDatabase", "automata.symbol_embedding.vector_databases.JSONSymbolEmbeddingVectorDatabase", "automata.core.base.database.vector_database.JSONVectorDatabase.save", "automata.tests.unit.database.test_database_vector.test_save", "automata.core.base.database.vector_database.JSONVectorDatabase.load", "automata.tests.unit.database.test_database_vector.test_load", "automata.tests.conftest.json_vector_db", "automata.core.base.database.vector_database.ChromaVectorDatabase", "automata.core.base.database.vector_database.VectorDatabaseProvider", "automata.symbol_embedding.vector_databases.ChromaSymbolEmbeddingVectorDatabase"], "k": 20}
{"task_id": "ContextCodeRetrieval/330", "query": "Which method from `SymbolCodeEmbeddingBuilder` builds embeddings for a list of symbols' source code?", "truth_top_match": "automata.symbol_embedding.symbol_embedding_builders.SymbolCodeEmbeddingBuilder.batch_build", "top_k_matches": ["automata.symbol_embedding.symbol_embedding_builders.SymbolCodeEmbeddingBuilder", "automata.symbol_embedding.symbol_embedding_builders.SymbolCodeEmbeddingBuilder.batch_build", "automata.symbol_embedding.symbol_embedding_builders.SymbolCodeEmbeddingBuilder.build", "automata.experimental.symbol_embedding.symbol_doc_embedding_builder.SymbolDocEmbeddingBuilder.build", "automata.experimental.symbol_embedding.symbol_doc_embedding_builder.SymbolDocEmbeddingBuilder", "automata.memory_store.symbol_code_embedding_handler.SymbolCodeEmbeddingHandler", "automata.experimental.symbol_embedding.symbol_doc_embedding_builder.SymbolDocEmbeddingBuilder.build_non_class", "automata.experimental.memory_store.symbol_doc_embedding_handler.SymbolDocEmbeddingHandler._create_new_embedding", "automata.memory_store.symbol_code_embedding_handler.SymbolCodeEmbeddingHandler.process_embedding", "automata.embedding.embedding_base.EmbeddingBuilder.batch_build"], "k": 20}
{"task_id": "ContextCodeRetrieval/331", "query": "What abstract base class represents the different types of LLM chat completion providers?", "truth_top_match": "automata.llm.llm_base.LLMChatCompletionProvider", "top_k_matches": ["automata.llm.llm_base.LLMChatCompletionProvider", "automata.llm.llm_base.LLMConversation", "automata.llm.providers.openai_llm.OpenAIChatCompletionProvider", "automata.llm.llm_base.LLMCompletionResult", "automata.llm.llm_base.LLMChatCompletionProvider.get_next_assistant_completion", "automata.llm.providers.openai_llm.OpenAIChatCompletionResult", "automata.config.config_base.LLMProvider", "automata.llm.llm_base.LLMChatMessage", "automata.llm.providers.openai_llm.OpenAIChatMessage", "automata.llm.llm_base.LLMConversationDatabaseProvider"], "k": 20}
{"task_id": "ContextCodeRetrieval/332", "query": "Which abstract method in AgentConfigBuilder is used to set the model for the agent?", "truth_top_match": "automata.config.config_base.AgentConfigBuilder.with_model", "top_k_matches": ["automata.config.config_base.AgentConfigBuilder.with_model", "automata.config.config_base.AgentConfig", "automata.config.openai_config.OpenAIAutomataAgentConfigBuilder.with_model", "automata.config.openai_config.OpenAIAutomataAgentConfigBuilder", "automata.config.config_base.AgentConfigBuilder", "automata.tests.unit.automata_agent.test_automata_agent_builder.test_builder_default_config", "automata.agent.agent.Agent._setup", "automata.tests.unit.automata_agent.test_automata_agent_builder.test_builder_provided_parameters_override_defaults", "automata.tests.unit.automata_agent.test_automata_agent_builder.test_builder_creates_proper_instance", "automata.tests.unit.automata_agent.test_automata_agent_builder.test_builder_accepts_all_fields"], "k": 20}
{"task_id": "ContextCodeRetrieval/333", "query": "How can the DependencyFactory set its overrides?", "truth_top_match": "automata.singletons.dependency_factory.DependencyFactory.set_overrides", "top_k_matches": ["automata.tests.unit.singletons.test_singletons_dependency_factory.test_set_overrides_raises_exception", "automata.singletons.dependency_factory.DependencyFactory.set_overrides", "automata.tests.unit.singletons.test_singletons_dependency_factory.test_reset", "automata.tests.unit.singletons.test_singletons_dependency_factory.test_get_with_override", "automata.tests.unit.singletons.test_singletons_dependency_factory.dependency_factory", "automata.singletons.dependency_factory.DependencyFactory", "automata.singletons.dependency_factory.DependencyFactory.reset", "automata.tests.unit.singletons.test_singletons_dependency_factory.test_create_symbol_search", "automata.singletons.dependency_factory.DependencyFactory.get", "automata.tests.unit.singletons.test_singletons_dependency_factory.test_create_subgraph_is_instance"], "k": 20}
{"task_id": "ContextCodeRetrieval/334", "query": "What is the exception raised for errors during JSON loading?", "truth_top_match": "automata.eval.tool.tool_eval_harness.EvalLoadingError", "top_k_matches": ["automata.eval.tool.tool_eval_harness.EvalLoadingError", "automata.eval.eval_error.EvalLoadingError", "automata.eval.tool.tool_eval_harness.EvalExecutionError", "automata.eval.tool.tool_eval_harness.ToolEvalSetLoader.load_json", "automata.code_writers.py.py_code_writer.PyCodeWriter.InvalidArgumentsError", "automata.eval.tool.tool_eval_harness.ToolEvalSetLoader", "automata.tasks.task_error.TaskGeneralError", "automata.eval.eval_error.EvalExecutionError", "automata.eval.agent.code_writing_eval.CodeExecutionError", "automata.eval.agent.agent_eval_harness.AgentEvalSetLoader.load_json"], "k": 20}
{"task_id": "ContextCodeRetrieval/335", "query": "What method in the ToolExecutor class is used for execution?", "truth_top_match": "automata.tools.tool_executor.ToolExecutor.execute", "top_k_matches": ["automata.tools.tool_executor.ToolExecutor", "automata.tests.unit.tool.test_tool.test_tool_executor", "automata.tools.tool_executor.ToolExecution", "automata.tests.unit.tool.test_tool.test_tool_execution", "automata.tests.conftest.tool_executor", "automata.tests.unit.tool.test_tool.test_tool_executor_no_tool_found", "automata.tools.tool_executor.ToolExecutor.__init__", "automata.tools.tool_executor.IToolExecution", "automata.eval.tool.tool_eval.ToolEval", "automata.tests.conftest.tool_execution"], "k": 20}
{"task_id": "ContextCodeRetrieval/336", "query": "What method is used to get the output directory where task logs are saved?", "truth_top_match": "automata.tasks.task_base.Task._get_log_dir", "top_k_matches": ["automata.tasks.task_base.Task._get_log_dir", "automata.tasks.automata_task.AutomataTask.get_logs", "automata.tasks.task_base.Task._get_task_dir", "automata.tasks.automata_task.AutomataTask.initialize_logging", "automata.tests.conftest.temp_output_dir", "automata.tasks.automata_task.AutomataTask", "automata.tasks.task_base.Task", "automata.core.utils.get_config_fpath", "automata.core.utils.get_root_py_fpath", "automata.tests.conftest.temp_output_filename"], "k": 20}
{"task_id": "ContextCodeRetrieval/337", "query": "How does the toolkit perform a similarity based search of symbols?", "truth_top_match": "automata.experimental.tools.builders.symbol_search_builder.SymbolSearchToolkitBuilder._symbol_code_similarity_search_processor", "top_k_matches": ["automata.experimental.tools.builders.symbol_search_builder.SymbolSearchToolkitBuilder", "automata.tests.unit.symbol.test_symbol_search.test_symbol_rank_search", "automata.tests.unit.symbol.test_symbol_search_tool.test_symbol_rank_search", "automata.experimental.tools.builders.agentified_search_builder.AgentifiedSearchToolkitBuilder", "automata.experimental.tools.builders.advanced_context_oracle_builder.AdvancedContextOracleToolkitBuilder", "automata.eval.tool.search_eval.SymbolSearchEval", "automata.experimental.search.symbol_search.SymbolSearch", "automata.experimental.tools.builders.document_oracle_builder.DocumentOracleToolkitBuilder", "automata.experimental.tools.builders.symbol_search_builder.SymbolSearchToolkitBuilder._symbol_code_similarity_search_processor", "automata.experimental.search.symbol_search.SymbolSearch.get_symbol_code_similarity_results"], "k": 20}
{"task_id": "ContextCodeRetrieval/338", "query": "How can DependencyFactory create a `SymbolDocEmbeddingHandler` instance?", "truth_top_match": "automata.singletons.dependency_factory.DependencyFactory.create_symbol_doc_embedding_handler", "top_k_matches": ["automata.singletons.dependency_factory.DependencyFactory.create_symbol_doc_embedding_handler", "automata.singletons.dependency_factory.DependencyFactory.create_symbol_code_embedding_handler", "automata.experimental.memory_store.symbol_doc_embedding_handler.SymbolDocEmbeddingHandler", "automata.tests.unit.singletons.test_singletons_dependency_factory.test_create_symbol_doc_embedding_handler", "automata.tests.unit.context_oracle.test_context_oracle_tool.symbol_doc_embedding_handler", "automata.tests.unit.context_oracle.test_document_oracle_tool.symbol_doc_embedding_handler", "automata.experimental.symbol_embedding.symbol_doc_embedding_builder.SymbolDocEmbeddingBuilder", "automata.tests.unit.singletons.test_singletons_dependency_factory.test_create_symbol_code_embedding_handler", "automata.symbol_embedding.symbol_embedding_handler.SymbolEmbeddingHandler", "automata.cli.scripts.run_doc_embedding.initialize_providers"], "k": 20}
{"task_id": "ContextCodeRetrieval/339", "query": "Which method in SymbolProviderSynchronizationContext registers a symbol provider?", "truth_top_match": "automata.context_providers.symbol_synchronization_context.SymbolProviderSynchronizationContext.register_provider", "top_k_matches": ["automata.context_providers.symbol_synchronization_context.SymbolProviderSynchronizationContext", "automata.context_providers.symbol_synchronization_context.SymbolProviderSynchronizationContext.register_provider", "automata.context_providers.symbol_synchronization_context.SymbolProviderRegistry.register_provider", "automata.context_providers.symbol_synchronization_context.SymbolProviderRegistry", "automata.singletons.dependency_factory.DependencyFactory._synchronize_provider", "automata.context_providers.symbol_synchronization_context.SymbolProviderSynchronizationContext.synchronize", "automata.tests.unit.synchronizer.test_synchronizer.test_synchronize", "automata.context_providers.symbol_synchronization_context.SymbolProviderRegistry.synchronize", "automata.symbol.symbol_base.ISymbolProvider", "automata.tests.unit.symbol.test_symbol_graph_static.sync_context"], "k": 20}
{"task_id": "ContextCodeRetrieval/340", "query": "How to get all database keys in a sorted order?", "truth_top_match": "automata.symbol_embedding.vector_databases.ChromaSymbolEmbeddingVectorDatabase.get_ordered_keys", "top_k_matches": ["automata.symbol_embedding.vector_databases.ChromaSymbolEmbeddingVectorDatabase.get_ordered_keys", "automata.core.base.database.vector_database.VectorDatabaseProvider.get_ordered_keys", "automata.core.base.database.vector_database.JSONVectorDatabase.get_ordered_keys", "automata.symbol_embedding.vector_databases.JSONSymbolEmbeddingVectorDatabase.get_ordered_keys", "automata.symbol_embedding.symbol_embedding_handler.SymbolEmbeddingHandler.get_all_ordered_embeddings", "automata.core.base.database.vector_database.ChromaVectorDatabase.get_ordered_keys", "automata.symbol_embedding.vector_databases.ChromaSymbolEmbeddingVectorDatabase.get_all_ordered_embeddings", "automata.core.base.database.vector_database.VectorDatabaseProvider.get_all_ordered_embeddings", "automata.symbol_embedding.vector_databases.JSONSymbolEmbeddingVectorDatabase.get_all_ordered_embeddings", "automata.core.base.database.vector_database.JSONVectorDatabase.get_all_ordered_embeddings"], "k": 20}
{"task_id": "ContextCodeRetrieval/341", "query": "Which method sets the instruction version for the Automata OpenAI Agent configuration builder?", "truth_top_match": "automata.config.openai_config.OpenAIAutomataAgentConfigBuilder.with_instruction_version", "top_k_matches": ["automata.config.openai_config.OpenAIAutomataAgentConfigBuilder.with_instruction_version", "automata.config.config_base.InstructionConfigVersion", "automata.config.openai_config.OpenAIAutomataAgentConfig", "automata.agent.openai_agent.OpenAIAutomataAgent.__init__", "automata.config.openai_config.OpenAIAutomataAgentConfigBuilder", "automata.agent.openai_agent.OpenAIAutomataAgent", "automata.tests.unit.automata_agent.test_automata_agent_builder.test_builder_provided_parameters_override_defaults", "automata.tests.unit.automata_agent.test_automata_agent_builder.test_builder_creates_proper_instance", "automata.tests.unit.automata_agent.test_automata_agent_builder.test_config_loading_different_versions", "automata.tests.unit.automata_agent.test_automata_agent_builder.test_builder_default_config"], "k": 20}
{"task_id": "ContextCodeRetrieval/342", "query": "Which class acts as a registry for different OpenAI agent toolkits?", "truth_top_match": "automata.singletons.toolkit_registry.OpenAIAutomataAgentToolkitRegistry", "top_k_matches": ["automata.singletons.toolkit_registry.OpenAIAutomataAgentToolkitRegistry", "automata.experimental.tools.builders.agentified_search_builder.AgentifiedSearchOpenAIToolkitBuilder", "automata.experimental.tools.builders.advanced_context_oracle_builder.AdvancedContextOracleOpenAIToolkitBuilder", "automata.experimental.tools.builders.document_oracle_builder.DocumentOracleOpenAIToolkitBuilder", "automata.experimental.tools.builders.symbol_search_builder.SymbolSearchOpenAIToolkitBuilder", "automata.singletons.toolkit_registry.OpenAIAutomataAgentToolkitRegistry.register_tool_manager", "automata.agent.openai_agent.OpenAIAgentToolkitBuilder", "automata.experimental.tools.builders.py_interpreter.PyInterpreterOpenAIToolkitBuilder", "automata.tools.builders.py_writer_builder.PyCodeWriterOpenAIToolkitBuilder", "automata.tools.builders.py_reader_builder.PyReaderOpenAIToolkitBuilder"], "k": 20}
{"task_id": "ContextCodeRetrieval/343", "query": "How is determined if the result of the AgentEvalResult is a full match using properties?", "truth_top_match": "automata.eval.agent.agent_eval.AgentEvalResult.is_full_match", "top_k_matches": ["automata.eval.eval_base.EvalResult.is_full_match", "automata.eval.agent.agent_eval.AgentEvalResult.is_full_match", "automata.eval.agent.agent_eval.AgentEvalResult", "automata.eval.eval_base.EvalResult.is_partial_match", "automata.eval.tool.search_eval.SymbolSearchEvalResult.is_full_match", "automata.eval.agent.agent_eval.AgentEvalResult.is_partial_match", "automata.eval.tool.tool_eval_metrics.ToolEvaluationMetrics.full_match_rate", "automata.eval.tool.search_eval.SymbolSearchEvalResult.is_partial_match", "automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics.total_full_matches", "automata.eval.tool.tool_eval_metrics.ToolEvaluationMetrics.total_full_matches"], "k": 20}
{"task_id": "ContextCodeRetrieval/344", "query": "Which method in automata.eval.tool.tool_eval_metrics.ToolEvaluationMetrics calculates the partial match rate?", "truth_top_match": "automata.eval.tool.tool_eval_metrics.ToolEvaluationMetrics.partial_match_rate", "top_k_matches": ["automata.eval.tool.tool_eval_metrics.ToolEvaluationMetrics.partial_match_rate", "automata.eval.tool.tool_eval_metrics.ToolEvaluationMetrics.full_match_rate", "automata.eval.tool.tool_eval_metrics.ToolEvaluationMetrics", "automata.tests.unit.tool_eval.test_tool_eval_harness_and_metrics.test_tool_evaluation_harness_and_metrics", "automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics.partial_match_rate", "automata.eval.eval_base.EvalResult.is_partial_match", "automata.eval.tool.tool_eval_metrics.ToolEvaluationMetrics.total_partial_matches", "automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics.total_partial_matches", "automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics.full_match_rate", "automata.eval.eval_base.EvalResult.is_full_match"], "k": 20}
{"task_id": "ContextCodeRetrieval/345", "query": "Which method of GitHubClient class is used to merge a pull request on GitHub?", "truth_top_match": "automata.singletons.github_client.GitHubClient.merge_pull_request", "top_k_matches": ["automata.tests.unit.github.test_github_client.test_merge_pull_request", "automata.tests.unit.singletons.test_singletons_github_client.test_create_pull_request", "automata.singletons.github_client.GitHubClient.merge_pull_request", "automata.tests.unit.github.test_github_client.test_create_pull_request", "automata.tests.unit.singletons.test_singletons_github_client.test_commit_and_push_changes", "automata.singletons.github_client.GitHubClient.create_pull_request", "automata.singletons.github_client.GitHubClient", "automata.tests.unit.singletons.test_singletons_github_client.test_checkout_branch", "automata.tests.unit.singletons.test_singletons_github_client.test_clone_repository", "automata.tests.unit.singletons.test_singletons_github_client.test_create_branch"], "k": 20}
{"task_id": "ContextCodeRetrieval/346", "query": "What function is used to get a list of symbols which are supported by SymbolRank?", "truth_top_match": "automata.symbol.symbol_utils.get_rankable_symbols", "top_k_matches": ["automata.context_providers.symbol_synchronization_context.SymbolProviderRegistry.get_sorted_supported_symbols", "automata.symbol.graph.symbol_graph.SymbolGraph._get_sorted_supported_symbols", "automata.symbol_embedding.symbol_embedding_handler.SymbolEmbeddingHandler._get_sorted_supported_symbols", "automata.cli.scripts.run_code_embedding.collect_symbols", "automata.symbol.symbol_base.ISymbolProvider.get_sorted_supported_symbols", "automata.symbol.symbol_base.ISymbolProvider._get_sorted_supported_symbols", "automata.experimental.code_parsers.py.context_processing.context_handler.PyContextHandler.get_symbol_rank_matches", "automata.experimental.scripts.run_update_tool_eval.process_symbol_graph", "automata.symbol.graph.symbol_navigator.SymbolGraphNavigator.get_sorted_supported_symbols", "automata.experimental.search.symbol_search.SymbolSearch.get_symbol_rank_results"], "k": 20}
{"task_id": "ContextCodeRetrieval/347", "query": "How to get all ordered embeddings in the JSONVectorDatabase?", "truth_top_match": "automata.core.base.database.vector_database.JSONVectorDatabase.get_all_ordered_embeddings", "top_k_matches": ["automata.symbol_embedding.vector_databases.ChromaSymbolEmbeddingVectorDatabase.get_all_ordered_embeddings", "automata.symbol_embedding.symbol_embedding_handler.SymbolEmbeddingHandler.get_all_ordered_embeddings", "automata.symbol_embedding.vector_databases.JSONSymbolEmbeddingVectorDatabase", "automata.core.base.database.vector_database.VectorDatabaseProvider.get_all_ordered_embeddings", "automata.tests.unit.database.test_database_vector.test_load", "automata.core.base.database.vector_database.JSONVectorDatabase.get_all_ordered_embeddings", "automata.symbol_embedding.vector_databases.JSONSymbolEmbeddingVectorDatabase.get_all_ordered_embeddings", "automata.core.base.database.vector_database.JSONVectorDatabase", "automata.core.base.database.vector_database.ChromaVectorDatabase.get_all_ordered_embeddings", "automata.tests.unit.database.test_database_vector.test_save"], "k": 20}
{"task_id": "ContextCodeRetrieval/348", "query": "Which method in SymbolSearch class performs an exact search across the indexed codebase?", "truth_top_match": "automata.experimental.search.symbol_search.SymbolSearch.exact_search", "top_k_matches": ["automata.experimental.search.symbol_search.SymbolSearch.exact_search", "automata.experimental.search.symbol_search.SymbolSearch", "automata.tests.unit.symbol.test_symbol_search.test_exact_search", "automata.tests.unit.symbol.test_symbol_search_tool.test_exact_search", "automata.tests.regression.test_symbol_searcher_regression.test_source_code_retrieval", "automata.tests.regression.test_symbol_searcher_regression.test_exact_search", "automata.experimental.tools.builders.symbol_search_builder.SymbolSearchToolkitBuilder._exact_search_processor", "automata.experimental.tools.builders.symbol_search_builder.SymbolSearchToolkitBuilder._retrieve_source_code_by_symbol_processor", "automata.experimental.tools.builders.symbol_search_builder.SymbolSearchToolkitBuilder", "automata.eval.tool.search_eval.SymbolSearchEval"], "k": 20}
{"task_id": "ContextCodeRetrieval/349", "query": "What method is used to load the vector database from the JSON file in JSONVectorDatabase?", "truth_top_match": "automata.core.base.database.vector_database.JSONVectorDatabase.load", "top_k_matches": ["automata.core.base.database.vector_database.JSONVectorDatabase.load", "automata.core.base.database.vector_database.JSONVectorDatabase", "automata.symbol_embedding.vector_databases.JSONSymbolEmbeddingVectorDatabase", "automata.tests.unit.database.test_database_vector.test_load", "automata.core.base.database.vector_database.JSONVectorDatabase.save", "automata.tests.unit.database.test_database_vector.test_save", "automata.tests.conftest.json_vector_db", "automata.tests.unit.database.test_database_vector.test_lookup_symbol", "automata.tests.unit.database.test_database_vector.test_add_symbol", "automata.core.base.database.vector_database.ChromaVectorDatabase"], "k": 20}
{"task_id": "ContextCodeRetrieval/350", "query": "What method of TaskEnvironment is used to tear down the task_environment?", "truth_top_match": "automata.tasks.task_base.TaskEnvironment.teardown", "top_k_matches": ["automata.tasks.task_base.TaskEnvironment.teardown", "automata.tasks.task_environment.AutomataTaskEnvironment.teardown", "automata.tasks.task_base.TaskEnvironment", "automata.tasks.task_environment.AutomataTaskEnvironment.reset", "automata.tasks.task_environment.AutomataTaskEnvironment", "automata.tests.conftest.task_environment", "automata.tasks.task_environment.AutomataTaskEnvironment.validate", "automata.tasks.task_base.TaskEnvironment.validate", "automata.tasks.task_base.TaskEnvironment.setup", "automata.tests.unit.task.test_task.test_setup_environment"], "k": 20}
{"task_id": "ContextCodeRetrieval/351", "query": "What function tests the compatibility of a YAML file?", "truth_top_match": "automata.cli.scripts.run_agent_config_validation.test_yaml_compatibility", "top_k_matches": ["automata.cli.scripts.run_agent_config_validation.test_yaml_compatibility", "automata.cli.scripts.run_agent_config_validation.test_yaml_validation", "automata.tests.unit.tool_eval.test_tool_eval_loader.test_tool_eval_loader", "automata.tests.unit.code_writers.test_py_writer.test_create_function_source_function", "automata.tests.unit.ast_utils.test_ast_utils_bounding_box.test_fetch_bounding_box_with_function_node_in_file", "automata.tests.unit.code_writers.test_py_writer_tool.test_bootstrap_module_with_new_function", "automata.tests.unit.agent_eval.test_agent_eval_loader.test_eval_loader", "automata.tests.unit.code_writers.test_py_writer_tool.test_extend_module_with_documented_new_function", "automata.tests.unit.context_retriever.test_context_retriever.test_interface", "automata.tests.unit.code_writers.test_py_writer.test_update_existing_function"], "k": 20}
{"task_id": "ContextCodeRetrieval/352", "query": "How can we remove a module using its dotpath from the PyModuleLoader map?", "truth_top_match": "automata.singletons.py_module_loader.PyModuleLoader.delete_module", "top_k_matches": ["automata.singletons.py_module_loader.PyModuleLoader.delete_module", "automata.code_parsers.py.dotpath_map.DotPathMap.delete_module", "automata.code_parsers.py.dotpath_map.DotPathMap.put_module", "automata.singletons.py_module_loader.PyModuleLoader.put_module", "automata.code_writers.py.py_code_writer.PyCodeWriter.delete_module", "automata.code_parsers.py.dotpath_map.DotPathMap.contains_dotpath", "automata.singletons.py_module_loader.PyModuleLoader.fetch_ast_module", "automata.singletons.py_module_loader.PyModuleLoader.reset", "automata.tests.unit.module_loader.test_module_loader.test_dotpath_map", "automata.code_parsers.py.dotpath_map.DotPathMap.get_module_fpath_by_dotpath"], "k": 20}
{"task_id": "ContextCodeRetrieval/353", "query": "How can a FunctionCall be converted to a dictionary?", "truth_top_match": "automata.llm.llm_base.FunctionCall.to_dict", "top_k_matches": ["automata.llm.llm_base.FunctionCall.to_dict", "automata.llm.llm_base.FunctionCall", "automata.llm.providers.openai_llm.OpenAIChatMessage.to_dict", "automata.llm.llm_base.FunctionCall.from_response_dict", "automata.eval.agent.openai_function_eval.OpenAIFunctionCallAction.to_payload", "automata.llm.providers.openai_llm.OpenAIChatCompletionResult.get_function_call", "automata.tests.conftest.function_call", "automata.tests.unit.tool_eval.test_symbol_search_eval.function_call", "automata.eval.agent.openai_function_eval.OpenAIFunctionCallAction.__repr__", "automata.eval.agent.openai_function_eval.OpenAIFunctionCallAction.from_payload"], "k": 20}
{"task_id": "ContextCodeRetrieval/354", "query": "What method is used to add a comment to an issue on the remote repository?", "truth_top_match": "automata.singletons.github_client.GitHubClient.create_issue_comment", "top_k_matches": ["automata.singletons.github_client.GitHubClient.create_issue_comment", "automata.singletons.github_client.GitHubClient.remove_issue_comment", "automata.singletons.github_client.GitHubClient.add_label", "automata.tests.unit.github.test_github_client.test_create_issue_comment", "automata.singletons.github_client.GitHubClient.create_label", "automata.singletons.github_client.GitHubClient.remove_label", "automata.singletons.github_client.GitHubClient.create_issue", "automata.tests.unit.github.test_github_client.test_remove_issue_comment", "automata.singletons.github_client.GitHubClient.fetch_issue", "automata.tests.unit.github.test_github_client.test_create_issue"], "k": 20}
{"task_id": "ContextCodeRetrieval/355", "query": "How are symbol references in the scope of a symbol fetched?", "truth_top_match": "automata.symbol.graph.symbol_navigator.SymbolGraphNavigator._get_symbol_references_in_scope", "top_k_matches": ["automata.symbol.graph.symbol_navigator.SymbolGraphNavigator._get_symbol_references_in_scope", "automata.symbol.graph.symbol_navigator.SymbolGraphNavigator.get_symbol_dependencies", "automata.symbol.graph.symbol_navigator.process_symbol_bounds", "automata.symbol.graph.symbol_graph.SymbolGraph.get_references_to_symbol", "automata.experimental.search.symbol_search.SymbolSearch.symbol_references", "automata.symbol.graph.symbol_navigator.SymbolGraphNavigator.get_potential_symbol_callees", "automata.embedding.embedding_base.EmbeddingBuilder.fetch_embedding_source_code", "automata.symbol.graph.symbol_navigator.SymbolGraphNavigator.get_potential_symbol_callers", "automata.experimental.tools.builders.symbol_search_builder.SymbolSearchToolkitBuilder._symbol_references_processor", "automata.symbol.graph.symbol_navigator.SymbolGraphNavigator.get_references_to_symbol"], "k": 20}
{"task_id": "ContextCodeRetrieval/356", "query": "How to identify the dangling nodes in the graph?", "truth_top_match": "automata.experimental.search.symbol_rank.SymbolRank._get_dangling_nodes", "top_k_matches": ["automata.experimental.search.symbol_rank.SymbolRank._get_dangling_nodes", "automata.experimental.search.symbol_rank.SymbolRank._prepare_dangling_weights", "automata.symbol.graph.symbol_caller_callees.CallerCalleeProcessor.process", "automata.symbol.graph.graph_builder.GraphBuilder._process_caller_callee_relationships", "automata.symbol.graph.symbol_navigator.SymbolGraphNavigator.get_sorted_supported_symbols", "automata.symbol.graph.symbol_relationships.RelationshipProcessor.process", "automata.symbol.graph.symbol_references.ReferenceProcessor.process", "automata.experimental.scripts.run_update_tool_eval.process_symbol_graph", "automata.tests.unit.ast_utils.test_ast_utils_bounding_box.test_fetch_bounding_box_with_incomplete_node", "automata.symbol.graph.symbol_caller_callees.CallerCalleeProcessor"], "k": 20}
{"task_id": "ContextCodeRetrieval/357", "query": "What method is used to insert data into a table in SQLDatabase?", "truth_top_match": "automata.core.base.database.relational_database.SQLDatabase.insert", "top_k_matches": ["automata.core.base.database.relational_database.SQLDatabase", "automata.tests.unit.database.test_database_sql.test_insert_select", "automata.core.base.database.relational_database.SQLDatabase.insert", "automata.core.base.database.relational_database.RelationalDatabase.insert", "automata.tasks.task_database.AutomataAgentTaskDatabase", "automata.tests.unit.database.test_database_sql.test_update_entry", "automata.core.base.database.relational_database.SQLDatabase.update_entry", "automata.tests.unit.database.test_database_sql.test_delete", "automata.eval.agent.agent_eval_database.AgentEvalResultDatabase", "automata.tests.unit.database.test_database_sql.test_create_table"], "k": 20}
{"task_id": "ContextCodeRetrieval/358", "query": "What method is used in CallerCalleeProcessor to populate the graph with caller-callee relationships?", "truth_top_match": "automata.symbol.graph.symbol_caller_callees.CallerCalleeProcessor.process", "top_k_matches": ["automata.symbol.graph.symbol_caller_callees.CallerCalleeProcessor", "automata.symbol.graph.graph_builder.GraphBuilder._process_caller_callee_relationships", "automata.symbol.graph.symbol_caller_callees.CallerCalleeProcessor.process", "automata.symbol.graph.symbol_relationships.RelationshipProcessor", "automata.symbol.graph.symbol_relationships.RelationshipProcessor.process", "automata.symbol.graph.symbol_navigator.SymbolGraphNavigator.get_potential_symbol_callees", "automata.symbol.graph.symbol_navigator.SymbolGraphNavigator.get_potential_symbol_callers", "automata.symbol.graph.symbol_graph.SymbolGraph.get_potential_symbol_callers", "automata.symbol.graph.symbol_references.ReferenceProcessor", "automata.symbol.graph.symbol_graph.SymbolGraph.get_potential_symbol_callees"], "k": 20}
{"task_id": "ContextCodeRetrieval/359", "query": "What abstract base class represents different types of relational databases?", "truth_top_match": "automata.core.base.database.relational_database.RelationalDatabase", "top_k_matches": ["automata.core.base.database.relational_database.RelationalDatabase", "automata.core.base.database.relational_database.SQLDatabase", "automata.llm.llm_base.LLMConversationDatabaseProvider", "automata.core.base.database.vector_database.VectorDatabaseProvider", "automata.core.base.database.vector_database.ChromaVectorDatabase", "automata.tests.unit.database.test_database_sql.test_connect_close", "automata.core.base.database.relational_database.SQLDatabase.__init__", "automata.llm.llm_base.LLMConversation", "automata.core.base.database.vector_database.JSONVectorDatabase", "automata.singletons.github_client.RepositoryClient"], "k": 20}
{"task_id": "ContextCodeRetrieval/360", "query": "What function is used to get the custom style for logging?", "truth_top_match": "automata.cli.cli_utils.get_custom_style", "top_k_matches": ["automata.cli.cli_utils.get_custom_style", "automata.cli.cli_output_logger.CustomLogger", "automata.core.utils.get_logging_config", "automata.tests.unit.task.test_task_executor.patch_logging", "automata.core.utils.LoggingConfig", "automata.tasks.automata_task.AutomataTask.initialize_logging", "automata.tests.unit.task.test_task.mock_logging_config_dict", "automata.tests.unit.cli.test_cli_commands.mock_logger", "automata.cli.cli_output_logger.CustomLogger.__init__", "automata.tests.unit.cli.test_cli_utils.mock_logger"], "k": 20}
{"task_id": "ContextCodeRetrieval/361", "query": "What function is used to get all attributes in a given class?", "truth_top_match": "automata.experimental.code_parsers.py.context_processing.context_utils.get_all_attributes", "top_k_matches": ["automata.experimental.code_parsers.py.context_processing.context_utils.get_all_attributes", "automata.tests.unit.context_retriever.test_context_retriever.test_class_attributes_in_source_code.TestClass", "automata.tests.unit.context_retriever.test_context_retriever.test_class_attributes_in_source_code", "automata.tests.unit.code_writers.test_py_writer.test_create_class_with_multiple_methods_properties_attributes", "automata.experimental.code_parsers.py.context_processing.context_utils.get_all_classes", "automata.agent.openai_agent.OpenAIAutomataAgent.functions", "automata.tests.unit.context_retriever.test_context_retriever.test_constructor_and_attributes", "automata.tests.unit.context_retriever.test_context_retriever.testget_all_classes", "automata.tests.unit.context_retriever.test_context_retriever.testget_all_methods", "automata.experimental.code_parsers.py.context_processing.context_utils.get_all_methods"], "k": 20}
{"task_id": "ContextCodeRetrieval/362", "query": "What method is used to start the agent evaluation script?", "truth_top_match": "automata.cli.scripts.run_agent_eval.main", "top_k_matches": ["automata.cli.scripts.run_agent_eval.main", "automata.cli.scripts.run_tool_eval.main", "automata.cli.commands.run_agent_eval", "automata.tests.unit.sample_modules.sample2.PythonAgentToolkit.python_agent_python_task", "automata.eval.agent.agent_eval_harness.AgentEvaluationHarness", "automata.eval.agent.agent_eval_harness.AgentEvaluationHarness.__init__", "automata.tests.conftest.agent_eval_harness", "automata.eval.agent.agent_eval_database.AgentEvalResultDatabase.__init__", "automata.tests.unit.agent_eval.test_agent_evaluation_harness_and_metrics.test_evaluation_harness_and_metrics", "automata.cli.commands.run_tool_eval"], "k": 20}
{"task_id": "ContextCodeRetrieval/363", "query": "What abstract method is used to generate a unique hashable key from an entry of type V in VectorDatabaseProvider?", "truth_top_match": "automata.core.base.database.vector_database.VectorDatabaseProvider.entry_to_key", "top_k_matches": ["automata.core.base.database.vector_database.VectorDatabaseProvider.entry_to_key", "automata.core.base.database.vector_database.VectorDatabaseProvider", "automata.core.base.database.vector_database.JSONVectorDatabase", "automata.symbol_embedding.vector_databases.ChromaSymbolEmbeddingVectorDatabase.entry_to_key", "automata.core.base.database.vector_database.ChromaVectorDatabase", "automata.symbol_embedding.vector_databases.JSONSymbolEmbeddingVectorDatabase.entry_to_key", "automata.symbol_embedding.vector_databases.ChromaSymbolEmbeddingVectorDatabase", "automata.symbol_embedding.vector_databases.JSONSymbolEmbeddingVectorDatabase", "automata.core.base.database.vector_database.ChromaVectorDatabase.entry_to_key", "automata.core.base.database.vector_database.JSONVectorDatabase.entry_to_key"], "k": 20}
{"task_id": "ContextCodeRetrieval/364", "query": "What exception is raised when the conversation is empty?", "truth_top_match": "automata.llm.llm_base.LLMConversation.LLMEmptyConversationError", "top_k_matches": ["automata.llm.llm_base.LLMConversation.LLMEmptyConversationError", "automata.llm.llm_base.LLMConversation.LLMEmptyConversationError.__init__", "automata.llm.providers.openai_llm.OpenAIChatCompletionProvider.reset", "automata.llm.llm_base.LLMConversation", "automata.llm.llm_base.LLMConversation.reset_conversation", "automata.llm.providers.openai_llm.OpenAIConversation.reset_conversation", "automata.llm.providers.openai_llm.OpenAIConversation.__init__", "automata.llm.llm_base.LLMConversation.__len__", "automata.tests.unit.automata_agent.test_automata_database.test_invalid_session_id", "automata.llm.providers.openai_llm.OpenAIConversation"], "k": 20}
{"task_id": "ContextCodeRetrieval/365", "query": "What method is used to retrieve all messages from a chat session?", "truth_top_match": "automata.memory_store.conversation_database_providers.OpenAIAutomataConversationDatabase.get_messages", "top_k_matches": ["automata.memory_store.conversation_database_providers.OpenAIAutomataConversationDatabase.get_messages", "automata.llm.llm_base.LLMConversationDatabaseProvider.get_messages", "automata.tests.unit.conversation_database.test_conversation_database.test_get_messages_returns_single_message_for_session", "automata.llm.providers.openai_llm.OpenAIConversation.get_latest_message", "automata.tests.unit.conversation_database.test_conversation_database.test_get_messages_returns_multiple_messages_in_order", "automata.tests.unit.automata_agent.test_automata_database.test_get_messages", "automata.llm.llm_base.LLMConversation.get_latest_message", "automata.llm.llm_base.LLMConversation.messages", "automata.memory_store.conversation_database_providers.OpenAIAutomataConversationDatabase", "automata.llm.providers.openai_llm.OpenAIConversation.messages"], "k": 20}
{"task_id": "ContextCodeRetrieval/366", "query": "What method is used to get a function call from the completion result?", "truth_top_match": "automata.llm.providers.openai_llm.OpenAIChatCompletionResult.get_function_call", "top_k_matches": ["automata.llm.providers.openai_llm.OpenAIChatCompletionResult.get_function_call", "automata.llm.providers.openai_llm.OpenAIChatCompletionResult.from_args", "automata.tests.conftest.function_call", "automata.llm.providers.openai_llm.OpenAIChatMessage.from_completion_result", "automata.tools.tool_executor.ToolExecutor.execute", "automata.llm.providers.openai_llm.OpenAIChatCompletionResult", "automata.tests.unit.tool_eval.test_symbol_search_eval.function_call", "automata.experimental.scripts.run_update_tool_eval.call_completion_provider", "automata.tools.tool_executor.ToolExecution.execute", "automata.llm.providers.openai_llm.OpenAIChatCompletionProvider.get_next_assistant_completion"], "k": 20}
{"task_id": "ContextCodeRetrieval/367", "query": "Which method is used for processing embeddings?", "truth_top_match": "automata.embedding.embedding_base.EmbeddingHandler.process_embedding", "top_k_matches": ["automata.symbol_embedding.symbol_embedding_handler.SymbolEmbeddingHandler.process_embedding", "automata.experimental.memory_store.symbol_doc_embedding_handler.SymbolDocEmbeddingHandler.process_embedding", "automata.embedding.embedding_base.EmbeddingHandler.process_embedding", "automata.cli.scripts.run_code_embedding.process_embeddings", "automata.memory_store.symbol_code_embedding_handler.SymbolCodeEmbeddingHandler.process_embedding", "automata.experimental.memory_store.symbol_doc_embedding_handler.SymbolDocEmbeddingHandler", "automata.tests.unit.symbol_embedding.test_symbol_embedding.test_update_embedding", "automata.tests.unit.cli.test_cli_scripts_run_code_embedding.test_process_embeddings", "automata.embedding.embedding_base.EmbeddingHandler", "automata.symbol_embedding.symbol_embedding_handler.SymbolEmbeddingHandler"], "k": 20}
{"task_id": "ContextCodeRetrieval/368", "query": "Which method creates a default formatter for the Automata configuration?", "truth_top_match": "automata.config.formatter.TemplateFormatter.create_default_formatter", "top_k_matches": ["automata.config.formatter.TemplateFormatter", "automata.tests.unit.automata_agent.test_automata_agent_builder.test_builder_default_config", "automata.tests.conftest.automata_agent", "automata.tests.unit.automata_agent.test_automata_agent.test_build_initial_messages", "automata.config.openai_config.OpenAIAutomataAgentConfig", "automata.tests.unit.automata_agent.test_automata_agent_builder.test_builder_accepts_all_fields", "automata.config.formatter.TemplateFormatter.create_default_formatter", "automata.tests.conftest.automata_agent_config_builder", "automata.tests.unit.automata_agent.test_automata_agent_builder.test_builder_creates_proper_instance", "automata.tests.unit.automata_agent.test_automata_agent_builder.test_builder_provided_parameters_override_defaults"], "k": 20}
{"task_id": "ContextCodeRetrieval/369", "query": "How can one check if a Symbol is a protobuf?", "truth_top_match": "automata.symbol.symbol_base.Symbol.is_protobuf", "top_k_matches": ["automata.symbol.symbol_base.Symbol.is_protobuf", "automata.tests.unit.cli.test_cli_scripts_run_doc_embedding.FakeSymbol", "automata.tests.unit.symbol.test_symbol_base.test_parsed_symbol", "automata.tests.unit.cli.test_cli_scripts_run_code_embedding.test_collect_symbols", "automata.tests.unit.database.test_database_vector.test_lookup_symbol", "automata.tests.unit.symbol.test_symbol_subgraph.symbol_graph_mocked_index", "automata.tests.unit.symbol.test_symbol_base.test_symbol_hash", "automata.symbol.symbol_base.Symbol", "automata.tests.unit.symbol.test_symbol_parser.test_parse_symbol", "automata.tests.regression.test_dependencies.test_automata_symbol_providers"], "k": 20}
{"task_id": "ContextCodeRetrieval/370", "query": "How does the PyDocWriter generate a summary from the content?", "truth_top_match": "automata.code_writers.py.py_doc_writer.PyDocWriter.generate_summary", "top_k_matches": ["automata.code_writers.py.py_doc_writer.PyDocWriter", "automata.code_writers.py.py_doc_writer.PyDocWriter.generate_summary", "automata.code_writers.py.py_doc_writer.PyDocWriter.generate_module_summary", "automata.tests.unit.code_writers.test_py_doc_writer.test_generate_module_summary", "automata.experimental.symbol_embedding.symbol_doc_embedding_builder.SymbolDocEmbeddingBuilder._build_class_document_summary", "automata.tests.unit.code_writers.test_py_writer.test_write_and_retrieve_mock_code", "automata.code_writers.py.py_doc_writer.PyDocWriter.generate_index_files", "automata.tests.unit.code_writers.test_py_writer.py_writer", "automata.code_parsers.py.py_reader.PyReader", "automata.code_writers.py.py_doc_writer.PyDocWriter.write_documentation"], "k": 20}
{"task_id": "ContextCodeRetrieval/371", "query": "What property determines the action success rate?", "truth_top_match": "automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics.action_success_rate", "top_k_matches": ["automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics.action_success_rate", "automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics.total_successful_actions", "automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics.successful_actions_frequency", "automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics.partial_match_rate", "automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics.failed_actions_frequency", "automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics.full_match_rate", "automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics.total_actions", "automata.eval.tool.tool_eval_metrics.ToolEvaluationMetrics.partial_match_rate", "automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics.total_extra_actions", "automata.tests.unit.agent_eval.test_agent_evaluation_harness_and_metrics.test_evaluation_harness_and_metrics"], "k": 20}
{"task_id": "ContextCodeRetrieval/372", "query": "What abstract base class represents an arbitrary action to be taken by an LLM?", "truth_top_match": "automata.eval.eval_base.Action", "top_k_matches": ["automata.eval.eval_base.Action", "automata.eval.eval_base.Eval", "automata.llm.llm_base.LLMConversation", "automata.llm.llm_base.LLMChatCompletionProvider", "automata.eval.agent.openai_function_eval.OpenAIFunctionEval", "automata.eval.agent.agent_eval.AgentEval", "automata.config.config_base.LLMProvider", "automata.llm.llm_base.LLMCompletionResult", "automata.eval.tool.search_eval.SymbolSearchEval", "automata.eval.agent.openai_function_eval.OpenAIFunctionEval.extract_action"], "k": 20}
{"task_id": "ContextCodeRetrieval/373", "query": "Which class in the module is responsible for handling the embedding of symbols?", "truth_top_match": "automata.symbol_embedding.symbol_embedding_handler.SymbolEmbeddingHandler", "top_k_matches": ["automata.symbol_embedding.symbol_embedding_handler.SymbolEmbeddingHandler", "automata.experimental.memory_store.symbol_doc_embedding_handler.SymbolDocEmbeddingHandler", "automata.memory_store.symbol_code_embedding_handler.SymbolCodeEmbeddingHandler", "automata.experimental.symbol_embedding.symbol_doc_embedding_builder.SymbolDocEmbeddingBuilder", "automata.embedding.embedding_base.EmbeddingHandler", "automata.symbol_embedding.symbol_embedding_base.SymbolCodeEmbedding", "automata.embedding.embedding_base.EmbeddingBuilder", "automata.symbol_embedding.symbol_embedding_base.SymbolEmbedding", "automata.symbol_embedding.symbol_embedding_base.SymbolDocEmbedding", "automata.experimental.memory_store.symbol_doc_embedding_handler.SymbolDocEmbeddingHandler.process_embedding"], "k": 20}
{"task_id": "ContextCodeRetrieval/374", "query": "Which method of the GitHubClient class is used for committing and pushing all changes in the repository?", "truth_top_match": "automata.singletons.github_client.GitHubClient.commit_and_push_changes", "top_k_matches": ["automata.tests.unit.singletons.test_singletons_github_client.test_commit_and_push_changes", "automata.tests.unit.singletons.test_singletons_github_client.test_stage_all_changes", "automata.singletons.github_client.GitHubClient.commit_and_push_changes", "automata.singletons.github_client.GitHubClient", "automata.singletons.github_client.RepositoryClient.commit_and_push_changes", "automata.singletons.github_client.GitHubClient.stage_all_changes", "automata.tests.unit.singletons.test_singletons_github_client.test_clone_repository", "automata.tests.unit.singletons.test_singletons_github_client.test_checkout_branch", "automata.singletons.github_client.RepositoryClient", "automata.tests.unit.singletons.test_singletons_github_client.test_create_branch"], "k": 20}
{"task_id": "ContextCodeRetrieval/375", "query": "What method is used to calculate the similarity of a query in the EmbeddingSimilarityCalculator class?", "truth_top_match": "automata.embedding.embedding_base.EmbeddingSimilarityCalculator.calculate_query_similarity_dict", "top_k_matches": ["automata.embedding.embedding_base.EmbeddingSimilarityCalculator", "automata.experimental.search.symbol_search.SymbolSearch.get_symbol_code_similarity_results", "automata.singletons.dependency_factory.DependencyFactory.create_embedding_similarity_calculator", "automata.embedding.embedding_base.EmbeddingSimilarityCalculator.calculate_query_similarity_dict", "automata.experimental.tools.builders.symbol_search_builder.SymbolSearchToolkitBuilder._symbol_code_similarity_search_processor", "automata.experimental.search.symbol_search.SymbolSearch.get_symbol_rank_results", "automata.tests.unit.context_oracle.test_context_oracle_tool.embedding_similarity_calculator", "automata.tests.unit.context_oracle.test_document_oracle_tool.embedding_similarity_calculator", "automata.tests.unit.symbol.test_symbol_similarity.test_get_nearest_symbols_for_query", "automata.embedding.embedding_base.EmbeddingSimilarityCalculator._calculate_embedding_similarity"], "k": 20}
{"task_id": "ContextCodeRetrieval/376", "query": "What method checks for the presence of a specific entry in the VectorDatabaseProvider?", "truth_top_match": "automata.core.base.database.vector_database.VectorDatabaseProvider.contains", "top_k_matches": ["automata.core.base.database.vector_database.ChromaVectorDatabase", "automata.core.base.database.vector_database.VectorDatabaseProvider", "automata.core.base.database.vector_database.JSONVectorDatabase", "automata.symbol_embedding.vector_databases.ChromaSymbolEmbeddingVectorDatabase", "automata.tests.unit.database.test_database_vector.test_lookup_symbol", "automata.tests.unit.chroma.test_chroma_vector.test_contains", "automata.tests.unit.chroma.test_chroma_vector.test_update_database", "automata.tests.unit.database.test_database_vector.test_lookup_symbol_fail", "automata.symbol_embedding.vector_databases.JSONSymbolEmbeddingVectorDatabase", "automata.tests.unit.database.test_database_vector.test_delete_symbol"], "k": 20}
{"task_id": "ContextCodeRetrieval/377", "query": "Which function contains the CLI command responsible for running agent evaluations?", "truth_top_match": "automata.cli.commands.run_agent_eval", "top_k_matches": ["automata.cli.commands.run_agent_eval", "automata.cli.scripts.run_agent_eval.main", "automata.cli.scripts.run_tool_eval.main", "automata.cli.commands.run_tool_eval", "automata.eval.agent.agent_eval_harness.AgentEvaluationHarness", "automata.tests.conftest.composite_evaluator", "automata.eval.agent.openai_function_eval.OpenAIFunctionEval", "automata.tests.conftest.agent_eval_harness", "automata.core.run_handlers.run_with_eval", "automata.eval.agent.agent_eval.AgentEval"], "k": 20}
{"task_id": "ContextCodeRetrieval/378", "query": "What method generates a deterministic session id for a Task?", "truth_top_match": "automata.tasks.task_base.Task._deterministic_session_id", "top_k_matches": ["automata.tasks.task_base.Task._deterministic_session_id", "automata.tests.unit.task.test_task.test_session_id_determinism", "automata.tasks.task_base.Task", "automata.tasks.task_registry.AutomataTaskRegistry.fetch_task_by_id", "automata.tests.unit.task.test_task_database.test_fetch_task_by_id", "automata.tests.unit.task.test_task_executor.test_agent_session_id_matches_task", "automata.tasks.task_base.Task._get_task_dir", "automata.tasks.task_base.Task.__str__", "automata.memory_store.conversation_database_providers.OpenAIAutomataConversationDatabase._get_last_interaction_id", "automata.tasks.task_base.Task.__init__"], "k": 20}
{"task_id": "ContextCodeRetrieval/379", "query": "What is the abstract base class for processing edges in the `MultiDiGraph`?", "truth_top_match": "automata.symbol.graph.symbol_graph_base.GraphProcessor", "top_k_matches": ["automata.symbol.graph.symbol_graph_base.GraphProcessor", "automata.symbol.graph.symbol_relationships.RelationshipProcessor.process", "automata.symbol.graph.symbol_graph_base.GraphProcessor.process", "automata.symbol.graph.symbol_relationships.RelationshipProcessor", "automata.symbol.graph.symbol_references.ReferenceProcessor", "automata.symbol.graph.symbol_caller_callees.CallerCalleeProcessor", "automata.symbol.graph.symbol_caller_callees.CallerCalleeProcessor.process", "automata.experimental.code_parsers.py.context_processing.context_retriever.BaseContextComponent", "automata.symbol.graph.symbol_references.ReferenceProcessor.process", "automata.symbol.graph.graph_builder.GraphBuilder"], "k": 20}
{"task_id": "ContextCodeRetrieval/380", "query": "How can all observers of a LLMConversation be notified of a change in conversation?", "truth_top_match": "automata.llm.llm_base.LLMConversation.notify_observers", "top_k_matches": ["automata.llm.llm_base.LLMConversation.notify_observers", "automata.llm.llm_base.LLMConversationDatabaseProvider.update", "automata.llm.llm_base.LLMConversationDatabaseProvider", "automata.llm.llm_base.LLMConversation", "automata.agent.openai_agent.OpenAIAutomataAgent.conversation", "automata.agent.agent.Agent.conversation", "automata.llm.providers.openai_llm.OpenAIConversation.add_message", "automata.llm.llm_base.LLMConversation.register_observer", "automata.llm.providers.openai_llm.OpenAIConversation.get_latest_message", "automata.llm.llm_base.LLMConversation.get_latest_message"], "k": 20}
{"task_id": "ContextCodeRetrieval/381", "query": "How is the prompt for a symbol doc generation built?", "truth_top_match": "automata.experimental.symbol_embedding.symbol_doc_embedding_builder.SymbolDocEmbeddingBuilder._build_prompt", "top_k_matches": ["automata.experimental.symbol_embedding.symbol_doc_embedding_builder.SymbolDocEmbeddingBuilder._build_prompt", "automata.experimental.symbol_embedding.symbol_doc_embedding_builder.SymbolDocEmbeddingBuilder._build_class_document", "automata.experimental.symbol_embedding.symbol_doc_embedding_builder.SymbolDocEmbeddingBuilder", "automata.experimental.symbol_embedding.symbol_doc_embedding_builder.SymbolDocEmbeddingBuilder.build", "automata.experimental.symbol_embedding.symbol_doc_embedding_builder.SymbolDocEmbeddingBuilder.build_non_class", "automata.tests.unit.context_oracle.test_document_oracle_tool.document_oracle_tool_builder", "automata.code_writers.py.py_doc_writer.PyDocWriter.write_documentation", "automata.experimental.tools.builders.document_oracle_builder.DocumentOracleToolkitBuilder", "automata.cli.env_operations.select_graph_type", "automata.cli.scripts.run_doc_embedding.main"], "k": 20}
{"task_id": "ContextCodeRetrieval/382", "query": "Which class manages an OpenAI agent lifecycle?", "truth_top_match": "automata.agent.openai_agent.OpenAIAutomataAgent", "top_k_matches": ["automata.agent.openai_agent.OpenAIAutomataAgent", "automata.config.config_base.AgentConfig.Config", "automata.llm.providers.openai_llm.OpenAIConversation", "automata.config.openai_config.OpenAIAutomataAgentConfig", "automata.config.config_base.LLMProvider", "automata.config.openai_config.OpenAIAutomataAgentConfig.get_llm_provider", "automata.agent.openai_agent.OpenAIAutomataAgent.__init__", "automata.llm.providers.openai_llm.OpenAITool", "automata.agent.agent.Agent", "automata.config.config_base.AgentConfig"], "k": 20}
{"task_id": "ContextCodeRetrieval/383", "query": "Which registered class extends the AgentifiedSearchToolkitBuilder and OpenAIAgentToolkitBuilder?", "truth_top_match": "automata.experimental.tools.builders.agentified_search_builder.AgentifiedSearchOpenAIToolkitBuilder", "top_k_matches": ["automata.experimental.tools.builders.agentified_search_builder.AgentifiedSearchOpenAIToolkitBuilder", "automata.experimental.tools.builders.symbol_search_builder.SymbolSearchOpenAIToolkitBuilder", "automata.experimental.tools.builders.advanced_context_oracle_builder.AdvancedContextOracleOpenAIToolkitBuilder", "automata.experimental.tools.builders.document_oracle_builder.DocumentOracleOpenAIToolkitBuilder", "automata.agent.openai_agent.OpenAIAgentToolkitBuilder", "automata.experimental.tools.builders.agentified_search_builder.AgentifiedSearchToolkitBuilder", "automata.tools.builders.py_reader_builder.PyReaderOpenAIToolkitBuilder", "automata.experimental.tools.builders.symbol_search_builder.SymbolSearchToolkitBuilder", "automata.singletons.toolkit_registry.OpenAIAutomataAgentToolkitRegistry", "automata.experimental.tools.builders.py_interpreter.PyInterpreterOpenAIToolkitBuilder"], "k": 20}
{"task_id": "ContextCodeRetrieval/384", "query": "How do you perform the SymbolRank ranking calculations?", "truth_top_match": "automata.experimental.search.symbol_rank.SymbolRank.get_ordered_ranks", "top_k_matches": ["automata.experimental.search.symbol_rank.SymbolRank", "automata.experimental.search.symbol_rank.SymbolRank.get_ordered_ranks", "automata.experimental.code_parsers.py.context_processing.context_handler.PyContextHandler.get_symbol_rank_matches", "automata.experimental.search.symbol_search.SymbolSearch.symbol_rank", "automata.experimental.search.symbol_search.SymbolSearch.get_symbol_rank_results", "automata.tests.unit.symbol.test_symbol_rank.test_get_ranks", "automata.tests.unit.symbol.test_symbol_rank.test_prepare_initial_ranks", "automata.experimental.tools.builders.symbol_search_builder.SymbolSearchToolkitBuilder._symbol_rank_search_processor", "automata.cli.scripts.run_code_embedding.collect_symbols", "automata.singletons.dependency_factory.DependencyFactory.create_symbol_rank"], "k": 20}
{"task_id": "ContextCodeRetrieval/385", "query": "What does the build_for_open_ai method in PyReaderOpenAIToolkitBuilder do?", "truth_top_match": "automata.tools.builders.py_reader_builder.PyReaderOpenAIToolkitBuilder.build_for_open_ai", "top_k_matches": ["automata.tools.builders.py_reader_builder.PyReaderOpenAIToolkitBuilder", "automata.tools.builders.py_writer_builder.PyCodeWriterOpenAIToolkitBuilder.build_for_open_ai", "automata.tools.builders.py_writer_builder.PyCodeWriterOpenAIToolkitBuilder", "automata.tools.builders.py_reader_builder.PyReaderOpenAIToolkitBuilder.build_for_open_ai", "automata.experimental.tools.builders.py_interpreter.PyInterpreterOpenAIToolkitBuilder", "automata.experimental.tools.builders.py_interpreter.PyInterpreterOpenAIToolkitBuilder.build_for_open_ai", "automata.experimental.tools.builders.advanced_context_oracle_builder.AdvancedContextOracleOpenAIToolkitBuilder.build_for_open_ai", "automata.experimental.tools.builders.symbol_search_builder.SymbolSearchOpenAIToolkitBuilder.build_for_open_ai", "automata.experimental.tools.builders.document_oracle_builder.DocumentOracleOpenAIToolkitBuilder.build_for_open_ai", "automata.agent.openai_agent.OpenAIAgentToolkitBuilder.build_for_open_ai"], "k": 20}
{"task_id": "ContextCodeRetrieval/386", "query": "What abstract method is used to close the connection to the database in RelationalDatabase?", "truth_top_match": "automata.core.base.database.relational_database.RelationalDatabase.close", "top_k_matches": ["automata.core.base.database.relational_database.RelationalDatabase.close", "automata.core.base.database.relational_database.SQLDatabase.close", "automata.core.base.database.relational_database.RelationalDatabase", "automata.tests.unit.database.test_database_sql.test_connect_close", "automata.core.base.database.relational_database.SQLDatabase", "automata.core.base.database.relational_database.SQLDatabase.NullConnection", "automata.llm.llm_base.LLMConversationDatabaseProvider", "automata.core.base.database.relational_database.RelationalDatabase.connect", "automata.core.base.database.relational_database.SQLDatabase.__init__", "automata.tests.unit.automata_agent.test_automata_agent.test_db_cleanup"], "k": 20}
{"task_id": "ContextCodeRetrieval/387", "query": "Which class method of OpenAIAgentToolkitBuilder is used to check if the ToolkitBuilder matches the expected tool_manager type?", "truth_top_match": "automata.agent.openai_agent.OpenAIAgentToolkitBuilder.can_handle", "top_k_matches": ["automata.agent.openai_agent.OpenAIAgentToolkitBuilder.can_handle", "automata.agent.openai_agent.OpenAIAgentToolkitBuilder", "automata.experimental.tools.builders.agentified_search_builder.AgentifiedSearchOpenAIToolkitBuilder", "automata.experimental.tools.builders.document_oracle_builder.DocumentOracleOpenAIToolkitBuilder", "automata.singletons.toolkit_registry.OpenAIAutomataAgentToolkitRegistry.register_tool_manager", "automata.experimental.tools.builders.symbol_search_builder.SymbolSearchOpenAIToolkitBuilder", "automata.experimental.tools.builders.advanced_context_oracle_builder.AdvancedContextOracleOpenAIToolkitBuilder", "automata.singletons.toolkit_registry.OpenAIAutomataAgentToolkitRegistry.get_all_builders", "automata.experimental.tools.builders.py_interpreter.PyInterpreterOpenAIToolkitBuilder", "automata.tools.builders.py_reader_builder.PyReaderOpenAIToolkitBuilder"], "k": 20}
{"task_id": "ContextCodeRetrieval/388", "query": "Which class represents a file in the file tree?", "truth_top_match": "automata.code_parsers.directory.File", "top_k_matches": ["automata.code_parsers.directory.File", "automata.code_parsers.directory.Node", "automata.code_parsers.directory.Directory", "automata.tests.unit.context_retriever.test_context_retriever.test_nested_class_detection.Parent", "automata.tests.unit.context_retriever.test_context_retriever.test_nested_class_detection.Parent.Child", "automata.tests.unit.context_retriever.test_context_retriever.test_class_inheritance.Child", "automata.tests.unit.context_retriever.test_context_retriever.test_class_inheritance_in_source_code.Child", "automata.tests.unit.context_retriever.test_context_retriever.test_class_attributes_in_source_code.TestClass", "automata.symbol.symbol_base.SymbolReference", "automata.config.config_base.SerializedDataCategory"], "k": 20}
{"task_id": "ContextCodeRetrieval/389", "query": "What method is used to fetch embedding source code in the EmbeddingBuilder class?", "truth_top_match": "automata.embedding.embedding_base.EmbeddingBuilder.fetch_embedding_source_code", "top_k_matches": ["automata.embedding.embedding_base.EmbeddingBuilder.fetch_embedding_source_code", "automata.symbol_embedding.symbol_embedding_builders.SymbolCodeEmbeddingBuilder", "automata.symbol_embedding.symbol_embedding_builders.SymbolCodeEmbeddingBuilder.build", "automata.experimental.symbol_embedding.symbol_doc_embedding_builder.SymbolDocEmbeddingBuilder.build", "automata.embedding.embedding_base.EmbeddingBuilder", "automata.experimental.symbol_embedding.symbol_doc_embedding_builder.SymbolDocEmbeddingBuilder.build_non_class", "automata.experimental.symbol_embedding.symbol_doc_embedding_builder.SymbolDocEmbeddingBuilder", "automata.memory_store.symbol_code_embedding_handler.SymbolCodeEmbeddingHandler", "automata.experimental.memory_store.symbol_doc_embedding_handler.SymbolDocEmbeddingHandler._create_new_embedding", "automata.memory_store.symbol_code_embedding_handler.SymbolCodeEmbeddingHandler.process_embedding"], "k": 20}
{"task_id": "ContextCodeRetrieval/390", "query": "What abstract method is used to insert data into a table in RelationalDatabase?", "truth_top_match": "automata.core.base.database.relational_database.RelationalDatabase.insert", "top_k_matches": ["automata.core.base.database.relational_database.RelationalDatabase", "automata.core.base.database.relational_database.SQLDatabase", "automata.core.base.database.relational_database.RelationalDatabase.insert", "automata.core.base.database.relational_database.SQLDatabase.insert", "automata.llm.llm_base.LLMConversationDatabaseProvider", "automata.tests.unit.database.test_database_sql.test_insert_select", "automata.core.base.database.vector_database.VectorDatabaseProvider.add", "automata.core.base.database.vector_database.VectorDatabaseProvider.save", "automata.tasks.task_database.AutomataAgentTaskDatabase", "automata.tests.unit.automata_agent.test_automata_database.test_init"], "k": 20}
{"task_id": "ContextCodeRetrieval/391", "query": "Which method in AgentConfigBuilder is used to set the tools for the agent?", "truth_top_match": "automata.config.config_base.AgentConfigBuilder.with_tools", "top_k_matches": ["automata.config.config_base.AgentConfigBuilder.with_tools", "automata.tests.unit.automata_agent.test_automata_agent_builder.test_builder_accepts_all_fields", "automata.agent.agent.AgentToolkitBuilder", "automata.experimental.tools.builders.agentified_search_builder.AgentifiedSearchOpenAIToolkitBuilder", "automata.tools.agent_tool_factory.AgentToolFactory", "automata.agent.openai_agent.OpenAIAutomataAgent.tools", "automata.agent.openai_agent.OpenAIAgentToolkitBuilder", "automata.tests.unit.agentified_search.test_agentified_search.test_build", "automata.experimental.tools.builders.py_interpreter.PyInterpreterToolkitBuilder", "automata.agent.agent.Agent.tools"], "k": 20}
{"task_id": "ContextCodeRetrieval/392", "query": "What function loads a config file from the config directory?", "truth_top_match": "automata.core.utils.load_config", "top_k_matches": ["automata.core.utils.load_config", "automata.config.config_base.AgentConfig.load", "automata.config.openai_config.OpenAIAutomataAgentConfig.load", "automata.config.config_base.AgentConfig._load_automata_yaml_config", "automata.tests.unit.cli.test_cli_commands.test_configure_load_env_vars_called", "automata.eval.tool.tool_eval_harness.ToolEvalSetLoader.__init__", "automata.eval.tool.tool_eval_harness.ToolEvalSetLoader", "automata.cli.commands.configure", "automata.eval.tool.tool_eval_harness.ToolEvalSetLoader.load_json", "automata.singletons.py_module_loader.PyModuleLoader._load_module_from_fpath"], "k": 20}
{"task_id": "ContextCodeRetrieval/393", "query": "How do you create a new pull request on the remote?", "truth_top_match": "automata.singletons.github_client.RepositoryClient.create_pull_request", "top_k_matches": ["automata.singletons.github_client.GitHubClient.create_pull_request", "automata.singletons.github_client.RepositoryClient.create_pull_request", "automata.tests.unit.singletons.test_singletons_github_client.test_create_pull_request", "automata.tests.unit.github.test_github_client.test_create_pull_request", "automata.singletons.github_client.RepositoryClient.merge_pull_request", "automata.singletons.github_client.GitHubClient.merge_pull_request", "automata.singletons.github_client.GitHubClient.get_open_pull_requests", "automata.singletons.github_client.GitHubClient.create_issue_comment", "automata.singletons.github_client.GitHubClient.create_issue", "automata.tests.unit.github.test_github_client.test_merge_pull_request"], "k": 20}
{"task_id": "ContextCodeRetrieval/394", "query": "What function runs a task with the given parameters and evaluates it?", "truth_top_match": "automata.core.run_handlers.run_with_eval", "top_k_matches": ["automata.core.run_handlers.run_with_eval", "automata.core.run_handlers.run_with_task", "automata.tests.unit.agent_eval.test_agent_eval_actions_results.test_generate_eval_result_partial_match", "automata.tests.unit.agent_eval.test_agent_eval_actions_results.test_generate_function_eval_result_match", "automata.tests.unit.agent_eval.test_agent_eval_actions_results.test_code_execution_error", "automata.cli.scripts.run_agent_eval.run_eval_harness", "automata.tests.unit.agent_eval.test_agent_eval_database.test_task_evaluation_with_database_integration", "automata.tests.unit.agent_eval.test_eval_database.test_task_evaluation_with_database_integration", "automata.eval.tool.tool_eval_harness.ToolEvaluationHarness", "automata.cli.scripts.run_tool_eval.run_eval_harness"], "k": 20}
{"task_id": "ContextCodeRetrieval/395", "query": "How does the toolkit perform an exact search?", "truth_top_match": "automata.experimental.tools.builders.symbol_search_builder.SymbolSearchToolkitBuilder._exact_search_processor", "top_k_matches": ["automata.tests.unit.symbol.test_symbol_search.test_exact_search", "automata.tests.unit.symbol.test_symbol_search_tool.test_exact_search", "automata.experimental.search.symbol_search.SymbolSearch.exact_search", "automata.tests.regression.test_symbol_searcher_regression.test_exact_search", "automata.experimental.tools.builders.symbol_search_builder.SymbolSearchToolkitBuilder", "automata.tests.unit.agentified_search.test_agentified_search.test_get_top_matches", "automata.experimental.tools.builders.agentified_search_builder.AgentifiedSearchToolkitBuilder", "automata.experimental.tools.builders.symbol_search_builder.SymbolSearchToolkitBuilder._exact_search_processor", "automata.experimental.tools.builders.advanced_context_oracle_builder.AdvancedContextOracleToolkitBuilder", "automata.experimental.tools.builders.symbol_search_builder.SearchTool"], "k": 20}
{"task_id": "ContextCodeRetrieval/396", "query": "Which class is designed to manage, store, and retrieve tasks?", "truth_top_match": "automata.tasks.task_registry.AutomataTaskRegistry", "top_k_matches": ["automata.tasks.task_registry.AutomataTaskRegistry", "automata.tasks.task_base.Task", "automata.tasks.task_database.AutomataAgentTaskDatabase", "automata.tasks.task_base.TaskEnvironment", "automata.tasks.task_base.TaskStatus", "automata.tasks.task_base.ITaskExecution", "automata.tests.unit.task.test_task_database.test_insert_task", "automata.tests.unit.task.test_task_database.test_get_all_tasks", "automata.tasks.task_database.AutomataAgentTaskDatabase.__init__", "automata.tasks.task_executor.AutomataTaskExecutor"], "k": 20}
{"task_id": "ContextCodeRetrieval/397", "query": "How can we reset the PyModuleLoader to its initial state?", "truth_top_match": "automata.singletons.py_module_loader.PyModuleLoader.reset", "top_k_matches": ["automata.singletons.py_module_loader.PyModuleLoader.reset", "automata.tests.unit.task.test_task_executor.module_loader", "automata.tests.unit.code_writers.test_py_writer.module_loader", "automata.tests.unit.code_readers.test_py_reader.module_loader", "automata.tests.unit.code_readers.test_py_reader_tool.module_loader", "automata.tests.unit.code_writers.test_py_writer_tool.module_loader", "automata.tests.unit.context_retriever.test_context_handler.local_module_loader", "automata.tests.unit.context_retriever.test_context_retriever.local_module_loader", "automata.tests.unit.symbol.test_symbol_utils.local_module_loader", "automata.tests.unit.module_loader.test_module_loader.setup_module_loader"], "k": 20}
{"task_id": "ContextCodeRetrieval/398", "query": "How can an observer be unregistered from a LLMConversation?", "truth_top_match": "automata.llm.llm_base.LLMConversation.unregister_observer", "top_k_matches": ["automata.llm.llm_base.LLMConversation.unregister_observer", "automata.llm.llm_base.LLMConversation", "automata.llm.llm_base.LLMConversation.register_observer", "automata.llm.llm_base.LLMConversationDatabaseProvider", "automata.llm.llm_base.LLMConversationDatabaseProvider.update", "automata.agent.openai_agent.OpenAIAutomataAgent.conversation", "automata.agent.agent.Agent.conversation", "automata.llm.llm_base.LLMConversation.notify_observers", "automata.agent.openai_agent.OpenAIAutomataAgent.set_database_provider", "automata.llm.providers.openai_llm.OpenAIChatCompletionProvider.reset"], "k": 20}
{"task_id": "ContextCodeRetrieval/399", "query": "What class is raised when the agent fails to set the database provider?", "truth_top_match": "automata.agent.error.AgentDatabaseError", "top_k_matches": ["automata.agent.error.AgentDatabaseError", "automata.agent.agent.Agent.set_database_provider", "automata.agent.openai_agent.OpenAIAutomataAgent.set_database_provider", "automata.agent.error.AgentResultError", "automata.agent.error.AgentGeneralError", "automata.tasks.task_registry.AutomataTaskRegistry.__init__", "automata.agent.agent.Agent", "automata.core.base.database.relational_database.SQLDatabase.NullConnection", "automata.llm.llm_base.LLMConversationDatabaseProvider", "automata.config.config_base.AgentConfig.get_llm_provider"], "k": 20}
{"task_id": "ContextCodeRetrieval/400", "query": "How can I replace an existing key in a .env file?", "truth_top_match": "automata.cli.env_operations.replace_key", "top_k_matches": ["automata.cli.env_operations.replace_key", "automata.cli.env_operations.delete_key_value", "automata.tests.unit.cli.test_cli_env_operations.test_replace_key", "automata.cli.env_operations.update_key_value", "automata.tests.unit.cli.test_cli_env_operations.test_update_key_value", "automata.tests.unit.cli.test_cli_env_operations.test_delete_key_value", "automata.cli.env_operations.get_key", "automata.tests.unit.cli.test_cli_env_operations.test_load_env_vars", "automata.tests.unit.cli.test_cli_env_operations.test_get_key", "automata.cli.env_operations.load_env_vars"], "k": 20}
{"task_id": "ContextCodeRetrieval/401", "query": "What method of `AutomataTask` is responsible for initializing the task's logging?", "truth_top_match": "automata.tasks.automata_task.AutomataTask.initialize_logging", "top_k_matches": ["automata.tasks.automata_task.AutomataTask", "automata.tasks.automata_task.AutomataTask.initialize_logging", "automata.tests.unit.task.test_task_executor.test_execute_automata_task_success", "automata.core.run_handlers.initialize_automata", "automata.tasks.task_executor.IAutomataTaskExecution._build_agent", "automata.tasks.task_environment.AutomataTaskEnvironment", "automata.tests.unit.task.test_task.test_task_inital_state", "automata.tasks.task_registry.AutomataTaskRegistry", "automata.tasks.task_registry.AutomataTaskRegistry.register", "automata.tasks.task_executor.AutomataTaskExecutor"], "k": 20}
{"task_id": "ContextCodeRetrieval/402", "query": "Which method ensures a directory exists?", "truth_top_match": "automata.code_parsers.directory.DirectoryManager.ensure_directory_exists", "top_k_matches": ["automata.code_parsers.directory.DirectoryManager.ensure_directory_exists", "automata.code_parsers.directory.DirectoryManager", "automata.tests.unit.module_loader.test_module_loader.test_directory_without_init", "automata.singletons.py_module_loader.PyModuleLoader._assert_initialized", "automata.tests.unit.directory_manager.test_directory_manager.test_load_directory_structure", "automata.code_parsers.directory.DirectoryManager._load_directory_structure", "automata.tests.unit.directory_manager.test_directory_manager.test_get_subdirectories", "automata.singletons.py_module_loader.PyModuleLoader.__contains__", "automata.tests.unit.code_writers.test_py_doc_writer.test_init", "automata.code_parsers.directory.Directory.is_leaf_dir"], "k": 20}
{"task_id": "ContextCodeRetrieval/403", "query": "Which property of OpenAIAutomataAgent returns the conversation associated with the agent?", "truth_top_match": "automata.agent.openai_agent.OpenAIAutomataAgent.conversation", "top_k_matches": ["automata.agent.openai_agent.OpenAIAutomataAgent.conversation", "automata.agent.agent.Agent.conversation", "automata.agent.openai_agent.OpenAIAutomataAgent", "automata.agent.openai_agent.OpenAIAutomataAgent.agent_responses", "automata.tests.unit.automata_agent.test_automata_agent.test_chat_provider", "automata.agent.openai_agent.OpenAIAutomataAgent.__repr__", "automata.memory_store.conversation_database_providers.OpenAIAutomataConversationDatabase", "automata.tests.unit.automata_agent.test_automata_agent_builder.test_automata_agent_init", "automata.tests.unit.automata_agent.test_automata_agent.test_agent_initialization", "automata.tasks.task_executor.IAutomataTaskExecution._build_agent"], "k": 20}
{"task_id": "ContextCodeRetrieval/404", "query": "What function initializes resources for a project?", "truth_top_match": "automata.cli.scripts.run_code_embedding.initialize_resources", "top_k_matches": ["automata.cli.scripts.run_code_embedding.initialize_resources", "automata.tests.unit.cli.test_cli_scripts_run_code_embedding.test_initialize_resources", "automata.cli.scripts.run_doc_embedding.initialize_providers", "automata.singletons.py_module_loader.PyModuleLoader.initialize", "automata.core.run_handlers.initialize_automata", "automata.tests.unit.code_writers.test_py_doc_writer.test_init", "automata.singletons.toolkit_registry.OpenAIAutomataAgentToolkitRegistry.initialize", "automata.eval.tool.search_eval.SymbolSearchEval.__init__", "automata.tests.unit.context_retriever.test_context_retriever.test_dunder_not_private.MyClass.__init__", "automata.tests.unit.sample_modules.my_project.core.calculator.Calculator.__init__"], "k": 20}
{"task_id": "ContextCodeRetrieval/405", "query": "What function builds a completion provider and calls it?", "truth_top_match": "automata.experimental.scripts.run_update_tool_eval.call_completion_provider", "top_k_matches": ["automata.experimental.scripts.run_update_tool_eval.call_completion_provider", "automata.llm.providers.openai_llm.OpenAIChatCompletionProvider", "automata.llm.providers.openai_llm.OpenAIChatCompletionResult.get_function_call", "automata.llm.llm_base.LLMChatCompletionProvider", "automata.experimental.symbol_embedding.symbol_doc_embedding_builder.SymbolDocEmbeddingBuilder._build_class_document", "automata.llm.providers.openai_llm.OpenAIChatCompletionResult", "automata.llm.providers.openai_llm.OpenAIChatCompletionResult.from_args", "automata.llm.providers.openai_llm.OpenAIChatCompletionProvider.get_next_assistant_completion", "automata.experimental.symbol_embedding.symbol_doc_embedding_builder.SymbolDocEmbeddingBuilder.__init__", "automata.tests.unit.agent_eval.conftest.mock_openai_response_with_function_completion_message_final"], "k": 20}
{"task_id": "ContextCodeRetrieval/406", "query": "How does the PyDocWriter generate individual .rst files?", "truth_top_match": "automata.code_writers.py.py_doc_writer.PyDocWriter.generate_rst_files", "top_k_matches": ["automata.code_writers.py.py_doc_writer.PyDocWriter.generate_index_files", "automata.code_writers.py.py_doc_writer.PyDocWriter", "automata.code_writers.py.py_doc_writer.PyDocWriter.generate_rst_files", "automata.tests.unit.code_writers.test_py_doc_writer.test_write_documentation", "automata.code_writers.py.py_doc_writer.PyDocWriter.write_documentation", "automata.tests.unit.code_writers.test_py_doc_writer.test_generate_module_summary", "automata.tests.unit.code_writers.test_py_doc_writer.test_init", "automata.code_writers.py.py_doc_writer.PyDocWriter.generate_module_summary", "automata.tests.unit.code_writers.test_py_writer.test_write_and_retrieve_mock_code", "automata.tests.unit.code_writers.test_py_writer.py_writer"], "k": 20}
{"task_id": "ContextCodeRetrieval/407", "query": "Which method in SymbolSearch class processes a natural language query and returns the appropriate search result?", "truth_top_match": "automata.experimental.search.symbol_search.SymbolSearch.process_query", "top_k_matches": ["automata.experimental.search.symbol_search.SymbolSearch.process_query", "automata.experimental.tools.builders.symbol_search_builder.SymbolSearchToolkitBuilder._symbol_agent_search_processor", "automata.experimental.tools.builders.agentified_search_builder.AgentifiedSearchToolkitBuilder._agent_selected_best_match", "automata.experimental.tools.builders.symbol_search_builder.SymbolSearchToolkitBuilder._retrieve_source_code_by_symbol_processor", "automata.experimental.tools.builders.symbol_search_builder.SymbolSearchToolkitBuilder._symbol_rank_search_processor", "automata.experimental.tools.builders.symbol_search_builder.SymbolSearchToolkitBuilder._symbol_code_similarity_search_processor", "automata.experimental.tools.builders.agentified_search_builder.AgentifiedSearchToolkitBuilder._get_top_matches", "automata.experimental.tools.builders.agentified_search_builder.AgentifiedSearchToolkitBuilder._get_code_for_best_match", "automata.experimental.tools.builders.symbol_search_builder.SymbolSearchToolkitBuilder._exact_search_processor", "automata.experimental.search.symbol_search.SymbolSearch"], "k": 20}
{"task_id": "ContextCodeRetrieval/408", "query": "What method is used to create a new Python module with the given code?", "truth_top_match": "automata.tools.builders.py_writer_builder.PyCodeWriterToolkitBuilder._create_new_module", "top_k_matches": ["automata.tools.builders.py_writer_builder.PyCodeWriterToolkitBuilder._create_new_module", "automata.tools.builders.py_writer_builder.PyCodeWriterToolkitBuilder._update_existing_module", "automata.code_writers.py.py_code_writer.PyCodeWriter.create_new_module", "automata.code_writers.py.py_code_writer.PyCodeWriter", "automata.code_writers.py.py_code_writer.PyCodeWriter.delete_module", "automata.tests.unit.code_writers.test_py_writer.test_create_new_module", "automata.tools.builders.py_writer_builder.PyCodeWriterToolkitBuilder", "automata.tests.unit.code_writers.test_py_writer_tool.test_bootstrap_module_with_new_function", "automata.code_parsers.py.py_reader.PyReader.get_source_code", "automata.code_writers.py.py_code_writer.PyCodeWriter._write_to_disk_and_format"], "k": 20}
{"task_id": "ContextCodeRetrieval/409", "query": "Which method in the PyReader class is responsible for getting the docstring for a specified module, class, or function/method?", "truth_top_match": "automata.code_parsers.py.py_reader.PyReader.get_docstring", "top_k_matches": ["automata.code_parsers.py.py_reader.PyReader.get_docstring", "automata.code_parsers.py.py_reader.PyReader", "automata.tools.builders.py_reader_builder.PyReaderToolkitBuilder._run_indexer_retrieve_docstring", "automata.code_parsers.py.py_reader.PyReader.get_source_code_without_docstrings", "automata.code_parsers.py.py_reader.PyReader.get_docstring_from_node", "automata.code_parsers.py.py_reader.PyReader.get_source_code", "automata.code_writers.py.py_doc_writer.PyDocWriter", "automata.tools.builders.py_reader_builder.PyReaderToolkitBuilder._run_indexer_retrieve_code", "automata.tests.unit.code_readers.test_py_reader.test_get_docstring_function", "automata.tests.unit.code_readers.test_py_reader.test_get_docstring_no_docstring_class"], "k": 20}
{"task_id": "ContextCodeRetrieval/410", "query": "Which method of AutomataTaskRegistry is responsible for updating tasks?", "truth_top_match": "automata.tasks.task_registry.AutomataTaskRegistry.update_task", "top_k_matches": ["automata.tasks.task_registry.AutomataTaskRegistry.update_task", "automata.tasks.task_registry.AutomataTaskRegistry", "automata.tests.unit.task.test_task_database.test_register_and_update_task", "automata.tasks.task_registry.AutomataTaskRegistry.get_all_tasks", "automata.tasks.task_registry.AutomataTaskRegistry.register", "automata.tests.unit.task.test_task.test_callback", "automata.tests.unit.task.test_task_executor.test_execute_automata_task_success", "automata.tasks.task_database.AutomataAgentTaskDatabase.update_task", "automata.tests.conftest.task_registry", "automata.tests.unit.task.test_task_database.test_get_all_tasks"], "k": 20}
{"task_id": "ContextCodeRetrieval/411", "query": "What class provides logic to convert the symbol URI into a human-readable form?", "truth_top_match": "automata.symbol.symbol_parser._SymbolParser", "top_k_matches": ["automata.symbol.symbol_base.Symbol", "automata.symbol.symbol_parser.parse_symbol", "automata.symbol.symbol_parser._SymbolParser", "automata.tests.unit.symbol.test_symbol_parser._unparse", "automata.symbol.symbol_base.SymbolDescriptor", "automata.symbol.symbol_base.SymbolPackage", "automata.symbol.symbol_base.SymbolDescriptor.unparse", "automata.symbol.symbol_base.Symbol.__repr__", "automata.experimental.search.symbol_search.SymbolSearch.symbol_references", "automata.tests.unit.cli.test_cli_scripts_run_doc_embedding.FakeSymbol"], "k": 20}
{"task_id": "ContextCodeRetrieval/412", "query": "Which method in automata.eval.tool.tool_eval.ToolEval converts the evaluation result to a ToolEvalResult?", "truth_top_match": "automata.eval.tool.tool_eval.ToolEval.to_tool_result", "top_k_matches": ["automata.eval.tool.tool_eval.ToolEvalResult", "automata.eval.tool.tool_eval.ToolEval", "automata.eval.tool.tool_eval.ToolEval.to_tool_result", "automata.eval.tool.search_eval.SymbolSearchEval", "automata.eval.tool.tool_eval_metrics.ToolEvaluationMetrics", "automata.eval.tool.tool_eval_harness.ToolEvaluationHarness", "automata.eval.tool.search_eval.SymbolSearchEval.to_tool_result", "automata.eval.tool.search_eval.SymbolSearchEvalResult", "automata.eval.tool.tool_eval.ToolEval.generate_eval_result", "automata.tests.unit.tool_eval.test_symbol_search_eval.test_symbol_search_eval_to_tool_result"], "k": 20}
{"task_id": "ContextCodeRetrieval/413", "query": "What method of TaskEnvironment is used to set up the task_environment?", "truth_top_match": "automata.tasks.task_base.TaskEnvironment.setup", "top_k_matches": ["automata.tasks.task_base.TaskEnvironment", "automata.tasks.task_base.TaskEnvironment.setup", "automata.tasks.task_base.TaskEnvironment.teardown", "automata.tests.conftest.task_environment", "automata.tasks.task_environment.AutomataTaskEnvironment", "automata.tasks.task_environment.AutomataTaskEnvironment.setup", "automata.tests.unit.task.test_task.test_setup_environment", "automata.tasks.task_environment.AutomataTaskEnvironment.teardown", "automata.tasks.task_base.TaskEnvironment.validate", "automata.tasks.task_environment.AutomataTaskEnvironment.reset"], "k": 20}
{"task_id": "ContextCodeRetrieval/414", "query": "What property gives the status of a Task?", "truth_top_match": "automata.tasks.task_base.Task.status", "top_k_matches": ["automata.tasks.task_base.Task.status", "automata.tests.unit.task.test_task.test_status_setter", "automata.tasks.task_base.TaskStatus", "automata.tasks.task_base.Task.__str__", "automata.tests.unit.task.test_task.test_task_inital_state", "automata.tasks.task_error.TaskStateError", "automata.tasks.task_base.Task", "automata.tests.unit.task.test_task_database.test_update_task_2", "automata.tasks.task_base.Task.notify_observer", "automata.tasks.task_registry.AutomataTaskRegistry"], "k": 20}
{"task_id": "ContextCodeRetrieval/415", "query": "How is the document for a class symbol built?", "truth_top_match": "automata.experimental.symbol_embedding.symbol_doc_embedding_builder.SymbolDocEmbeddingBuilder._build_class_document", "top_k_matches": ["automata.experimental.symbol_embedding.symbol_doc_embedding_builder.SymbolDocEmbeddingBuilder._build_class_document", "automata.experimental.symbol_embedding.symbol_doc_embedding_builder.SymbolDocEmbeddingBuilder", "automata.experimental.symbol_embedding.symbol_doc_embedding_builder.SymbolDocEmbeddingBuilder.build_non_class", "automata.experimental.symbol_embedding.symbol_doc_embedding_builder.SymbolDocEmbeddingBuilder.build", "automata.symbol.symbol_base.Symbol", "automata.symbol_embedding.symbol_embedding_base.SymbolDocEmbedding", "automata.experimental.symbol_embedding.symbol_doc_embedding_builder.SymbolDocEmbeddingBuilder._build_prompt", "automata.symbol_embedding.symbol_embedding_base.SymbolCodeEmbedding", "automata.experimental.tools.builders.document_oracle_builder.DocumentOracleToolkitBuilder", "automata.tests.unit.cli.test_cli_scripts_run_doc_embedding.FakeSymbol"], "k": 20}
{"task_id": "ContextCodeRetrieval/416", "query": "What class exists as a Singleton to create dependencies for input Tool construction?", "truth_top_match": "automata.singletons.dependency_factory.DependencyFactory", "top_k_matches": ["automata.singletons.dependency_factory.DependencyFactory", "automata.tools.tool_base.Tool", "automata.tests.conftest.TestTool", "automata.singletons.toolkit_registry.OpenAIAutomataAgentToolkitRegistry", "automata.tools.tool_executor.ToolExecutor", "automata.tests.conftest.test_tool", "automata.tests.conftest.test_tool_instantiation", "automata.tools.tool_executor.ToolExecution", "automata.experimental.tools.builders.document_oracle_builder.DocumentOracleOpenAIToolkitBuilder", "automata.tests.conftest.tool_executor"], "k": 20}
{"task_id": "ContextCodeRetrieval/417", "query": "How does the PyDocWriter write a full documentation?", "truth_top_match": "automata.code_writers.py.py_doc_writer.PyDocWriter.write_documentation", "top_k_matches": ["automata.code_writers.py.py_doc_writer.PyDocWriter", "automata.code_writers.py.py_doc_writer.PyDocWriter.write_documentation", "automata.tests.unit.code_writers.test_py_doc_writer.test_init", "automata.tests.unit.code_writers.test_py_writer.test_write_and_retrieve_mock_code", "automata.tests.unit.cli.test_cli_scripts_run_doc_post_process.mock_pydocwriter", "automata.tests.unit.code_writers.test_py_doc_writer.test_write_documentation", "automata.tools.builders.py_writer_builder.PyCodeWriterToolkitBuilder.__init__", "automata.tests.unit.sample_modules.sample.OuterClass", "automata.code_writers.py.py_code_writer.PyCodeWriter", "automata.tests.unit.sample_modules.sample.OuterClass.InnerClass"], "k": 20}
{"task_id": "ContextCodeRetrieval/418", "query": "Which class holds the configuration for the Automata OpenAI Agent?", "truth_top_match": "automata.config.openai_config.OpenAIAutomataAgentConfig", "top_k_matches": ["automata.config.openai_config.OpenAIAutomataAgentConfig", "automata.agent.openai_agent.OpenAIAutomataAgent", "automata.config.config_base.AgentConfig.Config", "automata.config.openai_config.OpenAIAutomataAgentConfigBuilder", "automata.config.config_base.AgentConfig", "automata.tests.unit.automata_agent.test_automata_agent_builder.test_builder_creates_proper_instance", "automata.config.openai_config.OpenAIAutomataAgentConfig.load", "automata.agent.openai_agent.OpenAIAutomataAgent.__init__", "automata.tests.unit.automata_agent.test_automata_agent.test_chat_provider", "automata.tests.unit.automata_agent.test_automata_agent.test_agent_initialization"], "k": 20}
{"task_id": "ContextCodeRetrieval/419", "query": "What method is used to build the embedding for a symbol's documentation?", "truth_top_match": "automata.experimental.symbol_embedding.symbol_doc_embedding_builder.SymbolDocEmbeddingBuilder.build", "top_k_matches": ["automata.experimental.symbol_embedding.symbol_doc_embedding_builder.SymbolDocEmbeddingBuilder", "automata.experimental.symbol_embedding.symbol_doc_embedding_builder.SymbolDocEmbeddingBuilder.build", "automata.experimental.symbol_embedding.symbol_doc_embedding_builder.SymbolDocEmbeddingBuilder.build_non_class", "automata.tests.conftest.embedding_maker._make_embedding", "automata.symbol_embedding.symbol_embedding_builders.SymbolCodeEmbeddingBuilder.build", "automata.symbol_embedding.symbol_embedding_base.SymbolDocEmbedding", "automata.experimental.memory_store.symbol_doc_embedding_handler.SymbolDocEmbeddingHandler", "automata.embedding.embedding_base.EmbeddingBuilder.build", "automata.symbol_embedding.symbol_embedding_builders.SymbolCodeEmbeddingBuilder", "automata.tests.unit.symbol_embedding.test_persistent_symbol_embedding.create_embedding"], "k": 20}
{"task_id": "ContextCodeRetrieval/420", "query": "Which class in automata.eval.tool.tool_eval_metrics evaluates detailed metrics from a sequence of ToolEvalResults?", "truth_top_match": "automata.eval.tool.tool_eval_metrics.ToolEvaluationMetrics", "top_k_matches": ["automata.eval.tool.tool_eval_metrics.ToolEvaluationMetrics", "automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics", "automata.eval.tool.tool_eval_harness.ToolEvaluationHarness", "automata.eval.tool.tool_eval.ToolEvalResult", "automata.eval.tool.tool_eval.ToolEval", "automata.tests.unit.tool_eval.test_tool_eval_harness_and_metrics.test_tool_evaluation_harness_and_metrics", "automata.eval.tool.search_eval.SymbolSearchEval", "automata.eval.tool.tool_eval_harness.ToolEvaluationHarness.evaluate", "automata.eval.tool.tool_eval_harness.ToolEvaluationHarness.__init__", "automata.eval.tool.search_eval.SymbolSearchEvalResult"], "k": 20}
{"task_id": "ContextCodeRetrieval/421", "query": "What method is used to create a new table in SQLDatabase?", "truth_top_match": "automata.core.base.database.relational_database.SQLDatabase.create_table", "top_k_matches": ["automata.tests.unit.database.test_database_sql.test_create_table", "automata.core.base.database.relational_database.SQLDatabase.create_table", "automata.core.base.database.relational_database.SQLDatabase", "automata.core.base.database.relational_database.RelationalDatabase.create_table", "automata.tests.unit.database.test_database_sql.test_insert_select", "automata.tests.unit.automata_agent.test_automata_database.test_init", "automata.tasks.task_database.AutomataAgentTaskDatabase", "automata.tasks.task_database.AutomataAgentTaskDatabase.__init__", "automata.core.base.database.relational_database.SQLDatabase.__init__", "automata.memory_store.conversation_database_providers.OpenAIAutomataConversationDatabase.__init__"], "k": 20}
{"task_id": "ContextCodeRetrieval/422", "query": "How can DependencyFactory create `EmbeddingSimilarityCalculator` instance?", "truth_top_match": "automata.singletons.dependency_factory.DependencyFactory.create_embedding_similarity_calculator", "top_k_matches": ["automata.singletons.dependency_factory.DependencyFactory.create_embedding_similarity_calculator", "automata.tests.unit.context_oracle.test_context_oracle_tool.embedding_similarity_calculator", "automata.tests.unit.context_oracle.test_document_oracle_tool.embedding_similarity_calculator", "automata.embedding.embedding_base.EmbeddingSimilarityCalculator", "automata.singletons.dependency_factory.DependencyFactory", "automata.singletons.dependency_factory.DependencyFactory.create_symbol_doc_embedding_handler", "automata.singletons.dependency_factory.DependencyFactory.create_symbol_code_embedding_handler", "automata.tests.unit.singletons.test_singletons_dependency_factory.test_create_symbol_doc_embedding_handler", "automata.tests.unit.singletons.test_singletons_dependency_factory.test_create_symbol_code_embedding_handler", "automata.tests.conftest.chroma_vector_db"], "k": 20}
{"task_id": "ContextCodeRetrieval/423", "query": "What class provides an interface for working with GitHub repositories?", "truth_top_match": "automata.singletons.github_client.GitHubClient", "top_k_matches": ["automata.singletons.github_client.GitHubClient", "automata.singletons.github_client.RepositoryClient", "automata.tests.unit.singletons.test_singletons_github_client.test_clone_repository", "automata.singletons.github_client.GitHubClient.__init__", "automata.tests.unit.singletons.test_singletons_github_client.gh_client", "automata.tests.conftest.task_environment", "automata.tasks.task_environment.EnvironmentMode", "automata.tests.unit.singletons.test_singletons_github_client.test_commit_and_push_changes", "automata.tests.unit.singletons.test_singletons_github_client.test_stage_all_changes", "automata.tests.unit.singletons.test_singletons_github_client.test_checkout_branch"], "k": 20}
{"task_id": "ContextCodeRetrieval/424", "query": "What function aggregates a list of EvalResult objects into a single result?", "truth_top_match": "automata.eval.agent.agent_eval_composite.aggregate_agent_result", "top_k_matches": ["automata.eval.agent.agent_eval_composite.aggregate_agent_result", "automata.eval.agent.agent_eval_harness.process_task", "automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics", "automata.eval.agent.agent_eval.AgentEvalResult", "automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics.__init__", "automata.eval.agent.agent_eval_composite.AgentEvalComposite", "automata.eval.agent.agent_eval_harness.AgentEvaluationHarness.evaluate", "automata.eval.agent.agent_eval_harness.AgentEvaluationHarness", "automata.eval.eval_base.EvalResult", "automata.eval.tool.tool_eval_metrics.ToolEvaluationMetrics"], "k": 20}
{"task_id": "ContextCodeRetrieval/425", "query": "What method is used to discard a specific entry in JSONVectorDatabase?", "truth_top_match": "automata.core.base.database.vector_database.JSONVectorDatabase.discard", "top_k_matches": ["automata.tests.unit.database.test_database_vector.test_delete_symbol", "automata.core.base.database.vector_database.JSONVectorDatabase", "automata.tests.unit.database.test_database_vector.test_lookup_symbol_fail", "automata.symbol_embedding.vector_databases.JSONSymbolEmbeddingVectorDatabase", "automata.tests.unit.database.test_database_vector.test_save", "automata.tests.unit.chroma.test_chroma_vector.test_delete_single_symbol", "automata.core.base.database.vector_database.ChromaVectorDatabase", "automata.tests.conftest.json_vector_db", "automata.core.base.database.vector_database.VectorDatabaseProvider.discard", "automata.tests.unit.database.test_database_vector.test_lookup_symbol"], "k": 20}
{"task_id": "ContextCodeRetrieval/426", "query": "Which property of OpenAIAutomataAgent returns the functions associated with the agent?", "truth_top_match": "automata.agent.openai_agent.OpenAIAutomataAgent.functions", "top_k_matches": ["automata.agent.openai_agent.OpenAIAutomataAgent.functions", "automata.agent.openai_agent.OpenAIAutomataAgent", "automata.agent.openai_agent.OpenAIAutomataAgent.tools", "automata.llm.providers.openai_llm.OpenAIFunction", "automata.tests.unit.automata_agent.test_automata_agent.test_agent_initialization", "automata.tests.unit.automata_agent.test_automata_agent.test_chat_provider", "automata.eval.agent.openai_function_eval.OpenAIFunctionEval", "automata.tests.unit.automata_agent.test_automata_agent.test_tool_execution", "automata.agent.openai_agent.OpenAIAutomataAgent.__repr__", "automata.config.openai_config.OpenAIAutomataAgentConfig"], "k": 20}
{"task_id": "ContextCodeRetrieval/427", "query": "What abstract property is used to get the tools associated with the Agent?", "truth_top_match": "automata.agent.agent.Agent.tools", "top_k_matches": ["automata.agent.agent.Agent.tools", "automata.agent.openai_agent.OpenAIAutomataAgent.tools", "automata.agent.agent.AgentToolkitBuilder", "automata.experimental.tools.builders.agentified_search_builder.AgentifiedSearchOpenAIToolkitBuilder", "automata.agent.openai_agent.OpenAIAutomataAgent.functions", "automata.agent.openai_agent.OpenAIAgentToolkitBuilder", "automata.agent.agent.Agent.conversation", "automata.experimental.tools.builders.advanced_context_oracle_builder.AdvancedContextOracleOpenAIToolkitBuilder", "automata.experimental.tools.builders.agentified_search_builder.AgentifiedSearchOpenAIToolkitBuilder.build_for_open_ai", "automata.agent.agent.AgentToolkitBuilder.build"], "k": 20}
{"task_id": "ContextCodeRetrieval/428", "query": "What private method is used to process the caller-callee relationships between `Symbol` nodes?", "truth_top_match": "automata.symbol.graph.graph_builder.GraphBuilder._process_caller_callee_relationships", "top_k_matches": ["automata.symbol.graph.graph_builder.GraphBuilder._process_caller_callee_relationships", "automata.symbol.graph.symbol_caller_callees.CallerCalleeProcessor.process", "automata.symbol.graph.symbol_graph.SymbolGraph.get_potential_symbol_callers", "automata.symbol.graph.symbol_caller_callees.CallerCalleeProcessor", "automata.symbol.graph.symbol_graph.SymbolGraph.get_potential_symbol_callees", "automata.symbol.graph.symbol_relationships.RelationshipProcessor.process", "automata.symbol.graph.symbol_navigator.SymbolGraphNavigator.get_potential_symbol_callees", "automata.symbol.graph.symbol_navigator.SymbolGraphNavigator.get_potential_symbol_callers", "automata.symbol.graph.symbol_graph.SymbolGraph.get_symbol_relationships", "automata.symbol.graph.graph_builder.GraphBuilder._process_references"], "k": 20}
{"task_id": "ContextCodeRetrieval/429", "query": "Which function gets the escaped name of a symbol?", "truth_top_match": "automata.symbol.symbol_parser.get_escaped_name", "top_k_matches": ["automata.symbol.symbol_base.SymbolDescriptor.get_escaped_name", "automata.symbol.graph.symbol_navigator.SymbolGraphNavigator._get_symbol_containing_file", "automata.tests.unit.symbol.test_symbol_parser._unparse", "automata.tests.unit.tool_eval.test_symbol_search_eval.test_symbol_search_eval_extract_action", "automata.symbol.symbol_parser.get_escaped_name", "automata.experimental.symbol_embedding.symbol_doc_embedding_builder.SymbolDocEmbeddingBuilder._build_prompt", "automata.symbol.symbol_base.SymbolDescriptor.unparse", "automata.embedding.embedding_base.EmbeddingBuilder.fetch_embedding_source_code", "automata.symbol.graph.symbol_navigator.SymbolGraphNavigator.get_potential_symbol_callers", "automata.symbol.graph.symbol_navigator.SymbolGraphNavigator.get_potential_symbol_callees"], "k": 20}
{"task_id": "ContextCodeRetrieval/430", "query": "What property is used to determine if a symbol search evaluation was a partial match?", "truth_top_match": "automata.eval.tool.search_eval.SymbolSearchEvalResult.is_partial_match", "top_k_matches": ["automata.eval.eval_base.EvalResult.is_partial_match", "automata.tests.unit.tool_eval.test_symbol_search_eval.test_symbol_search_eval_result_partial_match", "automata.eval.agent.agent_eval.AgentEvalResult.is_partial_match", "automata.eval.eval_base.EvalResult.is_full_match", "automata.eval.tool.search_eval.SymbolSearchEvalResult.is_partial_match", "automata.eval.tool.search_eval.SymbolSearchEval", "automata.tests.unit.tool_eval.test_symbol_search_eval.test_symbol_search_eval_result", "automata.eval.tool.tool_eval_metrics.ToolEvaluationMetrics.total_partial_matches", "automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics.total_partial_matches", "automata.eval.tool.tool_eval_metrics.ToolEvaluationMetrics.partial_match_rate"], "k": 20}
{"task_id": "ContextCodeRetrieval/431", "query": "What abstract class is designed for symbol code embeddings?", "truth_top_match": "automata.symbol_embedding.symbol_embedding_base.SymbolEmbedding", "top_k_matches": ["automata.symbol_embedding.symbol_embedding_base.SymbolEmbedding", "automata.symbol_embedding.symbol_embedding_base.SymbolCodeEmbedding", "automata.embedding.embedding_base.EmbeddingBuilder", "automata.symbol_embedding.symbol_embedding_handler.SymbolEmbeddingHandler", "automata.symbol_embedding.symbol_embedding_builders.SymbolCodeEmbeddingBuilder", "automata.symbol_embedding.symbol_embedding_base.SymbolDocEmbedding", "automata.embedding.embedding_base.EmbeddingVectorProvider", "automata.embedding.embedding_base.EmbeddingBuilder.fetch_embedding_source_code", "automata.experimental.symbol_embedding.symbol_doc_embedding_builder.SymbolDocEmbeddingBuilder", "automata.symbol_embedding.symbol_embedding_builders.SymbolCodeEmbeddingBuilder.build"], "k": 20}
{"task_id": "ContextCodeRetrieval/432", "query": "Which method gets a list of subdirectory names in a directory?", "truth_top_match": "automata.code_parsers.directory.Directory.get_subdirectories", "top_k_matches": ["automata.code_parsers.directory.Directory.get_subdirectories", "automata.code_parsers.directory.DirectoryManager.get_subdirectories", "automata.code_parsers.directory.Directory.get_file_names", "automata.tests.unit.directory_manager.test_directory_manager.test_get_subdirectories", "automata.code_parsers.directory.DirectoryManager.get_files_in_dir", "automata.code_parsers.directory.Directory.is_leaf_dir", "automata.code_parsers.directory.Directory", "automata.tests.unit.directory_manager.test_directory_manager.test_get_files_in_dir", "automata.code_parsers.directory.DirectoryManager._load_directory_structure", "automata.tests.unit.directory_manager.test_directory_manager.test_load_directory_structure"], "k": 20}
{"task_id": "ContextCodeRetrieval/433", "query": "What method is used to load the vector database from the Chroma database in ChromaVectorDatabase?", "truth_top_match": "automata.core.base.database.vector_database.ChromaVectorDatabase.load", "top_k_matches": ["automata.core.base.database.vector_database.ChromaVectorDatabase", "automata.tests.unit.chroma.test_chroma_vector.test_vector_initialization", "automata.core.base.database.vector_database.ChromaVectorDatabase.load", "automata.symbol_embedding.vector_databases.ChromaSymbolEmbeddingVectorDatabase", "automata.core.base.database.vector_database.JSONVectorDatabase.load", "automata.tests.conftest.chroma_vector_db", "automata.tests.unit.chroma.test_chroma_vector.test_update_database", "automata.core.base.database.vector_database.JSONVectorDatabase", "automata.tests.unit.symbol_embedding.test_persistent_symbol_embedding._extracted_from_test_symbol_doc_embedding", "automata.tests.conftest.chroma_vector_db_persistent"], "k": 20}
{"task_id": "ContextCodeRetrieval/434", "query": "What function is used to filter actions in the context of ToolEval?", "truth_top_match": "automata.eval.tool.tool_eval.ToolEval._filter_actions", "top_k_matches": ["automata.eval.tool.tool_eval.ToolEval._filter_actions", "automata.eval.tool.tool_eval.ToolEval", "automata.eval.tool.search_eval.SymbolSearchEval", "automata.eval.agent.agent_eval_composite.AgentEvalComposite._filter_actions", "automata.eval.tool.tool_eval_harness.ToolEvaluationHarness", "automata.eval.tool.tool_eval.ToolEvalResult", "automata.eval.eval_base.Eval._filter_actions", "automata.eval.tool.tool_eval.ToolEval.generate_eval_result", "automata.eval.tool.tool_eval_harness.ToolEvaluationHarness.evaluate", "automata.experimental.tools.builders.advanced_context_oracle_builder.AdvancedContextOracleToolkitBuilder.build"], "k": 20}
{"task_id": "ContextCodeRetrieval/435", "query": "What class inherits from both PyInterpreterToolkitBuilder and OpenAIAgentToolkitBuilder?", "truth_top_match": "automata.experimental.tools.builders.py_interpreter.PyInterpreterOpenAIToolkitBuilder", "top_k_matches": ["automata.experimental.tools.builders.py_interpreter.PyInterpreterOpenAIToolkitBuilder", "automata.experimental.tools.builders.py_interpreter.PyInterpreterToolkitBuilder", "automata.agent.openai_agent.OpenAIAgentToolkitBuilder", "automata.tools.builders.py_reader_builder.PyReaderOpenAIToolkitBuilder", "automata.tools.builders.py_writer_builder.PyCodeWriterOpenAIToolkitBuilder", "automata.experimental.tools.builders.advanced_context_oracle_builder.AdvancedContextOracleOpenAIToolkitBuilder", "automata.experimental.tools.builders.symbol_search_builder.SymbolSearchOpenAIToolkitBuilder", "automata.experimental.tools.builders.agentified_search_builder.AgentifiedSearchOpenAIToolkitBuilder", "automata.tools.builders.py_reader_builder.PyReaderToolkitBuilder", "automata.tools.builders.py_writer_builder.PyCodeWriterToolkitBuilder"], "k": 20}
{"task_id": "ContextCodeRetrieval/436", "query": "Which method sets the number of max iterations for the agent's configuration?", "truth_top_match": "automata.config.config_base.AgentConfigBuilder.with_max_iterations", "top_k_matches": ["automata.config.config_base.AgentConfigBuilder.with_max_iterations", "automata.agent.error.AgentMaxIterError", "automata.tests.unit.automata_agent.test_automata_agent.test_run_with_no_completion", "automata.config.config_base.AgentConfigBuilder.with_abs_max_tokens", "automata.core.run_handlers.run_with_agent", "automata.tests.unit.automata_agent.test_automata_agent_builder.test_builder_provided_parameters_override_defaults", "automata.agent.openai_agent.OpenAIAutomataAgent", "automata.tests.unit.automata_agent.test_automata_agent_builder.test_builder_accepts_all_fields", "automata.agent.error.AgentStopIterationError", "automata.agent.openai_agent.OpenAIAutomataAgent.run"], "k": 20}
{"task_id": "ContextCodeRetrieval/437", "query": "What function parses a string of comma-separated dotpaths into a list?", "truth_top_match": "automata.cli.scripts.run_doc_embedding.parse_dotpaths", "top_k_matches": ["automata.cli.scripts.run_doc_embedding.parse_dotpaths", "automata.cli.scripts.run_doc_embedding.map_dotpaths_to_symbols", "automata.singletons.py_module_loader.PyModuleLoader.__contains__", "automata.code_parsers.py.dotpath_map.DotPathMap", "automata.symbol.symbol_base.Symbol.dotpath", "automata.code_parsers.py.dotpath_map.DotPathMap.contains_dotpath", "automata.singletons.py_module_loader.PyModuleLoader.fetch_existing_module_fpath_by_dotpath", "automata.singletons.py_module_loader.PyModuleLoader.fetch_ast_module", "automata.code_parsers.py.dotpath_map.DotPathMap._build_module_dotpath_to_fpath_map", "automata.code_parsers.py.dotpath_map.DotPathMap.get_module_fpath_by_dotpath"], "k": 20}
{"task_id": "ContextCodeRetrieval/438", "query": "What method in the IToolExecution interface is used to execute a function call?", "truth_top_match": "automata.tools.tool_executor.IToolExecution.execute", "top_k_matches": ["automata.tools.tool_executor.IToolExecution", "automata.tools.tool_executor.ToolExecutor", "automata.tools.tool_executor.ToolExecution", "automata.tests.unit.tool.test_tool.test_tool_execution", "automata.tools.tool_executor.ToolExecution.execute", "automata.tests.unit.tool.test_tool.test_tool_executor", "automata.tests.conftest.function_call", "automata.tests.unit.tool_eval.test_symbol_search_eval.function_call", "automata.tools.tool_executor.ToolExecutor.__init__", "automata.tools.tool_executor.ToolExecutor.execute"], "k": 20}
{"task_id": "ContextCodeRetrieval/439", "query": "Which method gets a list of file names in a directory?", "truth_top_match": "automata.code_parsers.directory.Directory.get_file_names", "top_k_matches": ["automata.code_parsers.directory.Directory.get_file_names", "automata.code_parsers.directory.Directory.get_subdirectories", "automata.code_parsers.directory.DirectoryManager.get_files_in_dir", "automata.tests.unit.directory_manager.test_directory_manager.test_get_files_in_dir", "automata.code_parsers.directory.DirectoryManager.get_subdirectories", "automata.tests.unit.directory_manager.test_directory_manager.test_get_subdirectories", "automata.code_parsers.directory.Directory", "automata.code_writers.py.py_doc_writer.PyDocWriter.generate_index_files", "automata.code_parsers.directory.DirectoryManager._load_directory_structure", "automata.tests.unit.directory_manager.test_directory_manager.test_load_directory_structure"], "k": 20}
{"task_id": "ContextCodeRetrieval/440", "query": "How can we fetch the AST module for a given dotpath using PyModuleLoader?", "truth_top_match": "automata.singletons.py_module_loader.PyModuleLoader.fetch_ast_module", "top_k_matches": ["automata.singletons.py_module_loader.PyModuleLoader.fetch_ast_module", "automata.singletons.py_module_loader.PyModuleLoader", "automata.singletons.py_module_loader.PyModuleLoader._load_module_from_fpath", "automata.tests.unit.module_loader.test_module_loader.test_invalid_dotpath", "automata.tests.unit.module_loader.test_module_loader.test_empty_dotpath", "automata.code_parsers.py.py_reader.PyReader.get_source_code", "automata.code_parsers.py.py_reader.PyReader.get_docstring", "automata.code_parsers.py.py_reader.PyReader.get_source_code_without_docstrings", "automata.singletons.py_module_loader.PyModuleLoader.fetch_existing_module_fpath_by_dotpath", "automata.code_parsers.py.dotpath_map.DotPathMap.get_module_fpath_by_dotpath"], "k": 20}
{"task_id": "ContextCodeRetrieval/441", "query": "Which class provides tools for translating an NLP query to relevant context?", "truth_top_match": "automata.experimental.tools.builders.document_oracle_builder.DocumentOracleToolkitBuilder", "top_k_matches": ["automata.experimental.tools.builders.document_oracle_builder.DocumentOracleToolkitBuilder", "automata.experimental.tools.builders.advanced_context_oracle_builder.AdvancedContextOracleToolkitBuilder", "automata.experimental.tools.builders.document_oracle_builder.DocumentOracleToolkitBuilder.build", "automata.experimental.tools.builders.advanced_context_oracle_builder.AdvancedContextOracleToolkitBuilder.build", "automata.experimental.tools.builders.advanced_context_oracle_builder.AdvancedContextOracleOpenAIToolkitBuilder", "automata.experimental.search.symbol_search.SymbolSearch.process_query", "automata.experimental.tools.builders.document_oracle_builder.DocumentOracleOpenAIToolkitBuilder", "automata.config.config_base.LLMProvider", "automata.experimental.tools.builders.advanced_context_oracle_builder.AdvancedContextOracleOpenAIToolkitBuilder.build_for_open_ai", "automata.experimental.tools.builders.document_oracle_builder.DocumentOracleOpenAIToolkitBuilder.build_for_open_ai"], "k": 20}
{"task_id": "ContextCodeRetrieval/442", "query": "Which class is a Singleton for lazy loading mapping dotpaths to AST objects?", "truth_top_match": "automata.singletons.py_module_loader.PyModuleLoader", "top_k_matches": ["automata.singletons.py_module_loader.PyModuleLoader", "automata.code_parsers.py.dotpath_map.DotPathMap", "automata.singletons.py_module_loader.PyModuleLoader.fetch_ast_module", "automata.tests.unit.module_loader.test_module_loader.test_empty_dotpath", "automata.core.base.patterns.singleton.Singleton", "automata.tests.unit.module_loader.test_module_loader.test_invalid_dotpath", "automata.tests.unit.cli.test_cli_scripts_run_doc_embedding.FakeSymbol.__init__", "automata.tests.unit.symbol.test_symbol_utils.test_convert_to_ast_object", "automata.code_parsers.py.py_reader.PyReader", "automata.tests.unit.cli.test_cli_scripts_run_doc_embedding.FakeSymbol"], "k": 20}
{"task_id": "ContextCodeRetrieval/443", "query": "What function finds a module, or a function, method, or class inside a module?", "truth_top_match": "automata.core.ast_handlers.find_syntax_tree_node", "top_k_matches": ["automata.core.ast_handlers.find_syntax_tree_node", "automata.core.ast_handlers.find_imports", "automata.code_parsers.py.py_reader.PyReader.get_source_code", "automata.tests.unit.module_loader.test_module_loader.test_load_module", "automata.code_parsers.py.py_reader.PyReader.get_docstring", "automata.singletons.py_module_loader.PyModuleLoader.fetch_ast_module", "automata.code_parsers.py.py_reader.PyReader.get_source_code_without_docstrings", "automata.code_parsers.py.dotpath_map.DotPathMap.contains_dotpath", "automata.code_parsers.py.py_reader.PyReader", "automata.code_parsers.py.dotpath_map.DotPathMap.contains_fpath"], "k": 20}
{"task_id": "ContextCodeRetrieval/444", "query": "How does the OpenAIAutomataAgent get the iteration status?", "truth_top_match": "automata.agent.openai_agent.OpenAIAutomataAgent._get_iteration_status", "top_k_matches": ["automata.agent.openai_agent.OpenAIAutomataAgent", "automata.agent.openai_agent.OpenAIAutomataAgent._get_iteration_status", "automata.tests.unit.automata_agent.test_automata_agent.test_agent_initialization", "automata.agent.error.AgentStopIterationError", "automata.agent.openai_agent.OpenAIAutomataAgent.__repr__", "automata.tests.unit.automata_agent.test_automata_agent.test_iter_step_without_api_call", "automata.tests.unit.automata_agent.test_automata_agent.test_tool_execution", "automata.agent.error.AgentMaxIterError", "automata.tasks.task_executor.IAutomataTaskExecution.execute", "automata.tests.unit.automata_agent.test_automata_agent.test_run_with_no_completion"], "k": 20}
{"task_id": "ContextCodeRetrieval/445", "query": "What method is used to process the symbol graph and fetch the local rankable symbols?", "truth_top_match": "automata.experimental.scripts.run_update_tool_eval.process_symbol_graph", "top_k_matches": ["automata.experimental.scripts.run_update_tool_eval.process_symbol_graph", "automata.cli.scripts.run_code_embedding.collect_symbols", "automata.tests.unit.symbol.test_symbol_utils.test_get_rankable_symbols", "automata.experimental.search.symbol_search.SymbolSearch.symbol_rank", "automata.experimental.search.symbol_rank.SymbolRank", "automata.experimental.search.symbol_search.SymbolSearch.get_symbol_rank_results", "automata.experimental.tools.builders.symbol_search_builder.SymbolSearchToolkitBuilder._symbol_rank_search_processor", "automata.experimental.search.symbol_rank.SymbolRank.get_ordered_ranks", "automata.experimental.code_parsers.py.context_processing.context_handler.PyContextHandler.get_symbol_rank_matches", "automata.tests.unit.cli.test_cli_scripts_run_code_embedding.test_collect_symbols"], "k": 20}
{"task_id": "ContextCodeRetrieval/446", "query": "Which method is responsible for generating an eval result for a given set of instructions and expected actions?", "truth_top_match": "automata.eval.agent.agent_eval.AgentEval.generate_eval_result", "top_k_matches": ["automata.eval.tool.tool_eval.ToolEval.generate_eval_result", "automata.eval.agent.agent_eval.AgentEval.generate_eval_result", "automata.eval.tool.tool_eval.ToolEval", "automata.eval.eval_base.Eval.generate_eval_result", "automata.tests.regression.test_agent_end_to_end.test_action_based_eval_tasks", "automata.eval.agent.agent_eval.AgentEval", "automata.eval.agent.agent_eval_composite.AgentEvalComposite.generate_eval_result", "automata.eval.eval_base.Eval", "automata.core.run_handlers.run_with_eval", "automata.tests.unit.agent_eval.test_agent_eval_database.test_eval_result_writer"], "k": 20}
{"task_id": "ContextCodeRetrieval/447", "query": "What function in this module retrieves all methods in a given Abstract Syntax Tree (AST)?", "truth_top_match": "automata.experimental.code_parsers.py.context_processing.context_utils.get_all_methods", "top_k_matches": ["automata.experimental.code_parsers.py.context_processing.context_utils.get_all_methods", "automata.tests.unit.context_retriever.test_context_retriever.testget_all_methods", "automata.experimental.code_parsers.py.context_processing.context_utils.get_all_classes", "automata.code_parsers.py.py_reader.PyReader", "automata.code_parsers.py.py_reader.PyReader.get_source_code", "automata.core.ast_handlers.find_imports", "automata.tests.unit.ast_utils.test_ast_utils_bounding_box.test_fetch_bounding_box_with_method_node", "automata.core.ast_handlers.find_syntax_tree_node", "automata.tests.unit.context_retriever.test_context_retriever.testis_private_method", "automata.code_parsers.py.py_reader.PyReader.get_source_code_without_docstrings"], "k": 20}
{"task_id": "ContextCodeRetrieval/448", "query": "What method is used to reset the conversation?", "truth_top_match": "automata.llm.providers.openai_llm.OpenAIConversation.reset_conversation", "top_k_matches": ["automata.llm.providers.openai_llm.OpenAIChatCompletionProvider.reset", "automata.llm.llm_base.LLMConversation.reset_conversation", "automata.llm.providers.openai_llm.OpenAIConversation.reset_conversation", "automata.llm.llm_base.LLMChatCompletionProvider.reset", "automata.tasks.task_base.TaskEnvironment.reset", "automata.llm.llm_base.LLMConversation.__len__", "automata.llm.llm_base.LLMConversation.LLMEmptyConversationError.__init__", "automata.llm.providers.openai_llm.OpenAIConversation.__init__", "automata.tests.unit.conversation_database.test_conversation_database.test_put_message_increments_interaction_id", "automata.tests.conftest.conversation_db"], "k": 20}
{"task_id": "ContextCodeRetrieval/449", "query": "What method is used to select data from a table in SQLDatabase?", "truth_top_match": "automata.core.base.database.relational_database.SQLDatabase.select", "top_k_matches": ["automata.core.base.database.relational_database.SQLDatabase.select", "automata.tests.unit.database.test_database_sql.test_insert_select", "automata.core.base.database.relational_database.RelationalDatabase.select", "automata.core.base.database.relational_database.SQLDatabase", "automata.tasks.task_database.AutomataAgentTaskDatabase", "automata.tests.unit.database.test_database_sql.test_delete", "automata.tests.unit.database.test_database_sql.test_update_entry", "automata.tests.unit.database.test_database_sql.test_create_table", "automata.core.base.database.relational_database.SQLDatabase.delete", "automata.eval.agent.agent_eval_database.AgentEvalResultDatabase"], "k": 20}
{"task_id": "ContextCodeRetrieval/450", "query": "What class is used to handle the configuration for the Python context handler?", "truth_top_match": "automata.experimental.code_parsers.py.context_processing.context_handler.PyContextHandlerConfig", "top_k_matches": ["automata.experimental.code_parsers.py.context_processing.context_handler.PyContextHandlerConfig", "automata.singletons.dependency_factory.DependencyFactory.create_py_context_handler", "automata.experimental.code_parsers.py.context_processing.context_handler.PyContextHandler", "automata.tests.unit.context_retriever.test_context_handler.context_handler", "automata.config.config_base.AgentConfig.Config", "automata.experimental.tools.builders.py_interpreter.PyInterpreter.__init__", "automata.experimental.code_parsers.py.context_processing.context_retriever.PyContextRetriever", "automata.tools.tool_base.Tool.Config", "automata.experimental.symbol_embedding.symbol_doc_embedding_builder.SymbolDocEmbeddingBuilder.__init__", "automata.experimental.code_parsers.py.context_processing.context_handler.PyContextHandler.__init__"], "k": 20}
{"task_id": "ContextCodeRetrieval/451", "query": "Which method of the GitHubClient stages all changes in the repository?", "truth_top_match": "automata.singletons.github_client.GitHubClient.stage_all_changes", "top_k_matches": ["automata.tests.unit.singletons.test_singletons_github_client.test_stage_all_changes", "automata.singletons.github_client.GitHubClient.stage_all_changes", "automata.singletons.github_client.RepositoryClient.stage_all_changes", "automata.tests.unit.singletons.test_singletons_github_client.test_commit_and_push_changes", "automata.tests.unit.singletons.test_singletons_github_client.test_clone_repository", "automata.tests.unit.singletons.test_singletons_github_client.test_checkout_branch", "automata.singletons.github_client.GitHubClient", "automata.tests.unit.singletons.test_singletons_github_client.test_create_branch", "automata.singletons.github_client.GitHubClient.commit_and_push_changes", "automata.tests.unit.singletons.test_singletons_github_client.test_create_pull_request"], "k": 20}
{"task_id": "ContextCodeRetrieval/452", "query": "Which class represents the result of an agent eval?", "truth_top_match": "automata.eval.agent.agent_eval.AgentEvalResult", "top_k_matches": ["automata.eval.agent.agent_eval.AgentEvalResult", "automata.eval.agent.agent_eval.AgentEval", "automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics", "automata.eval.tool.tool_eval.ToolEvalResult", "automata.eval.agent.agent_eval.AgentEvalResult.__repr__", "automata.eval.agent.agent_eval_harness.AgentEvaluationHarness", "automata.eval.agent.agent_eval.AgentEvalResult.from_payload", "automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics.__init__", "automata.eval.tool.search_eval.SymbolSearchEvalResult", "automata.eval.agent.agent_eval_harness.AgentEvaluationHarness.__init__"], "k": 20}
{"task_id": "ContextCodeRetrieval/453", "query": "Which private method does the OpenAI agent call to perform setup?", "truth_top_match": "automata.agent.openai_agent.OpenAIAutomataAgent._setup", "top_k_matches": ["automata.agent.openai_agent.OpenAIAutomataAgent._setup", "automata.config.openai_config.OpenAIAutomataAgentConfig.setup", "automata.agent.agent.Agent._setup", "automata.tests.conftest.setup", "automata.tests.conftest.matched_setup", "automata.core.run_handlers.run_setup", "automata.agent.openai_agent.OpenAIAutomataAgent.__init__", "automata.config.openai_config.OpenAIAutomataAgentConfig", "automata.tests.unit.agent_eval.test_agent_evaluation_harness_and_metrics.test_evaluation_harness_and_metrics", "automata.tests.regression.test_agent_end_to_end.automata_setup"], "k": 20}
{"task_id": "ContextCodeRetrieval/454", "query": "How does AutomataTaskEnvironment reset the task environment?", "truth_top_match": "automata.tasks.task_environment.AutomataTaskEnvironment.reset", "top_k_matches": ["automata.tasks.task_environment.AutomataTaskEnvironment.reset", "automata.tasks.task_environment.AutomataTaskEnvironment", "automata.core.run_handlers.initialize_automata", "automata.tasks.task_base.TaskEnvironment.reset", "automata.tasks.task_base.TaskEnvironment.teardown", "automata.tasks.task_base.TaskEnvironment", "automata.tests.regression.test_agent_end_to_end.automata_setup", "automata.tests.conftest.task_environment", "automata.tasks.task_environment.AutomataTaskEnvironment.setup", "automata.tasks.task_environment.AutomataTaskEnvironment.teardown"], "k": 20}
{"task_id": "ContextCodeRetrieval/455", "query": "What command group is used to categorize CLI commands?", "truth_top_match": "automata.cli.commands.cli", "top_k_matches": ["automata.cli.commands.cli", "automata.cli.options.common_options", "automata.config.config_base.ConfigCategory", "automata.cli.options.agent_options", "automata.cli.options.eval_options", "automata.tests.unit.cli.test_cli_options.command_with_options", "automata.tests.unit.cli.test_cli_options.command_with_options.dummy_command", "automata.cli.commands.configure", "automata.cli.env_operations.select_graph_type", "automata.config.config_base.EmbeddingDataCategory"], "k": 20}
{"task_id": "ContextCodeRetrieval/456", "query": "What method extracts a list of action from the given message in `AgentEvalComposite` class?", "truth_top_match": "automata.eval.agent.agent_eval_composite.AgentEvalComposite.extract_action", "top_k_matches": ["automata.eval.agent.agent_eval_composite.AgentEvalComposite.extract_action", "automata.eval.agent.openai_function_eval.OpenAIFunctionEval.extract_action", "automata.eval.agent.agent_eval_composite.AgentEvalComposite", "automata.eval.agent.code_writing_eval.CodeWritingEval.extract_action", "automata.eval.eval_base.Eval.extract_action", "automata.eval.agent.openai_function_eval.OpenAIFunctionEval", "automata.eval.tool.tool_eval.ToolEval.extract_action", "automata.eval.agent.agent_eval.AgentEval.process_result", "automata.eval.agent.agent_eval_composite.AgentEvalComposite._filter_actions", "automata.eval.agent.agent_eval.AgentEval"], "k": 20}
{"task_id": "ContextCodeRetrieval/457", "query": "What property determines the frequency of successful actions?", "truth_top_match": "automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics.successful_actions_frequency", "top_k_matches": ["automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics.successful_actions_frequency", "automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics.failed_actions_frequency", "automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics.extra_action_frequency", "automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics.action_success_rate", "automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics.total_successful_actions", "automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics.total_actions", "automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics.total_extra_actions", "automata.tests.unit.agent_eval.test_agent_evaluation_harness_and_metrics.test_evaluation_harness_and_metrics", "automata.tests.unit.task.test_task.test_status_setter", "automata.agent.openai_agent.OpenAIAutomataAgent.functions"], "k": 20}
{"task_id": "ContextCodeRetrieval/458", "query": "Which static method is used to create tools given the agent's toolkit?", "truth_top_match": "automata.tools.agent_tool_factory.AgentToolFactory.create_tools_from_builder", "top_k_matches": ["automata.tools.agent_tool_factory.AgentToolFactory.create_tools_from_builder", "automata.tools.agent_tool_factory.AgentToolFactory", "automata.tools.agent_tool_factory.AgentToolFactory.build_tools", "automata.experimental.tools.builders.agentified_search_builder.AgentifiedSearchOpenAIToolkitBuilder", "automata.agent.openai_agent.OpenAIAgentToolkitBuilder", "automata.tests.unit.sample_modules.sample2.PythonAgentToolkit", "automata.core.run_handlers.run_setup", "automata.agent.agent.AgentToolkitBuilder", "automata.experimental.tools.builders.symbol_search_builder.SymbolSearchOpenAIToolkitBuilder", "automata.experimental.tools.builders.agentified_search_builder.AgentifiedSearchToolkitBuilder"], "k": 20}
{"task_id": "ContextCodeRetrieval/459", "query": "Which class adds edges to the `MultiDiGraph` for references between `Symbol` nodes?", "truth_top_match": "automata.symbol.graph.symbol_references.ReferenceProcessor", "top_k_matches": ["automata.symbol.graph.symbol_references.ReferenceProcessor", "automata.symbol.graph.symbol_relationships.RelationshipProcessor.process", "automata.symbol.graph.symbol_references.ReferenceProcessor.process", "automata.symbol.graph.symbol_caller_callees.CallerCalleeProcessor.process", "automata.symbol.graph.symbol_caller_callees.CallerCalleeProcessor", "automata.symbol.graph.symbol_relationships.RelationshipProcessor", "automata.symbol.graph.symbol_graph.SymbolGraph", "automata.symbol.graph.graph_builder.GraphBuilder", "automata.symbol.graph.symbol_navigator.SymbolGraphNavigator.get_references_to_symbol", "automata.experimental.search.symbol_search.SymbolSearch.symbol_references"], "k": 20}
{"task_id": "ContextCodeRetrieval/460", "query": "What method is used to delete a module from a module dictionary?", "truth_top_match": "automata.code_writers.py.py_code_writer.PyCodeWriter.delete_module", "top_k_matches": ["automata.code_parsers.py.dotpath_map.DotPathMap.delete_module", "automata.singletons.py_module_loader.PyModuleLoader.delete_module", "automata.code_writers.py.py_code_writer.PyCodeWriter.delete_from_module", "automata.code_writers.py.py_code_writer.PyCodeWriter.delete_module", "automata.tests.unit.code_writers.test_py_writer.test_delete_from_module", "automata.code_parsers.py.dotpath_map.DotPathMap.put_module", "automata.singletons.py_module_loader.PyModuleLoader.put_module", "automata.tests.unit.code_writers.test_py_writer.test_delete_module_non_existent_module", "automata.tests.unit.database.test_database_vector.test_delete_symbol", "automata.tests.unit.code_writers.test_py_writer.test_create_delete_module"], "k": 20}
{"task_id": "ContextCodeRetrieval/461", "query": "What method is used to create a new issue on Github?", "truth_top_match": "automata.singletons.github_client.GitHubClient.create_issue", "top_k_matches": ["automata.singletons.github_client.GitHubClient.create_issue", "automata.tests.unit.singletons.test_singletons_github_client.test_create_issue", "automata.tests.unit.github.test_github_client.test_create_issue_comment", "automata.tests.unit.github.test_github_client.test_create_issue", "automata.singletons.github_client.GitHubClient.create_pull_request", "automata.tests.unit.github.test_github_client.test_fetch_issue", "automata.tests.unit.singletons.test_singletons_github_client.test_create_pull_request", "automata.singletons.github_client.GitHubClient.create_issue_comment", "automata.tests.unit.github.test_github_client.test_create_pull_request", "automata.tests.unit.singletons.test_singletons_github_client.test_create_branch"], "k": 20}
{"task_id": "ContextCodeRetrieval/462", "query": "How can DependencyFactory create `PyContextRetriever` instance?", "truth_top_match": "automata.singletons.dependency_factory.DependencyFactory.create_py_context_retriever", "top_k_matches": ["automata.singletons.dependency_factory.DependencyFactory.create_py_context_retriever", "automata.tests.unit.context_retriever.test_context_retriever.context_retriever", "automata.singletons.dependency_factory.DependencyFactory.create_py_context_handler", "automata.tests.unit.context_retriever.test_context_handler.context_handler", "automata.tests.unit.code_readers.test_py_reader_tool.python_retriever_tool_builder", "automata.tests.unit.singletons.test_singletons_dependency_factory.dependency_factory", "automata.experimental.code_parsers.py.context_processing.context_retriever.PyContextRetriever", "automata.tests.unit.code_writers.test_py_writer.py_writer", "automata.tests.unit.context_retriever.test_context_retriever.test_constructor_and_attributes", "automata.singletons.dependency_factory.DependencyFactory.create_py_reader"], "k": 20}
{"task_id": "ContextCodeRetrieval/463", "query": "How are the tools for a PyInterpreter built?", "truth_top_match": "automata.experimental.tools.builders.py_interpreter.PyInterpreterToolkitBuilder.build", "top_k_matches": ["automata.experimental.tools.builders.py_interpreter.PyInterpreterOpenAIToolkitBuilder", "automata.experimental.tools.builders.py_interpreter.PyInterpreterToolkitBuilder.build", "automata.experimental.tools.builders.py_interpreter.PyInterpreterToolkitBuilder", "automata.experimental.tools.builders.py_interpreter.PyInterpreterOpenAIToolkitBuilder.build_for_open_ai", "automata.tools.builders.py_reader_builder.PyReaderToolkitBuilder.build", "automata.tests.unit.code_readers.test_py_reader_tool.test_build", "automata.experimental.tools.builders.agentified_search_builder.AgentifiedSearchToolkitBuilder.build", "automata.tests.unit.code_writers.test_py_writer_tool.test_build", "automata.tools.builders.py_writer_builder.PyCodeWriterOpenAIToolkitBuilder", "automata.tools.builders.py_reader_builder.PyReaderOpenAIToolkitBuilder"], "k": 20}
{"task_id": "ContextCodeRetrieval/464", "query": "Which method of the Python context handler is responsible for constructing the context for a symbol?", "truth_top_match": "automata.experimental.code_parsers.py.context_processing.context_handler.PyContextHandler.construct_symbol_context", "top_k_matches": ["automata.experimental.code_parsers.py.context_processing.context_handler.PyContextHandler", "automata.tests.unit.context_retriever.test_context_handler.test_construct_symbol_context_interface", "automata.experimental.code_parsers.py.context_processing.context_handler.PyContextHandler.construct_symbol_context", "automata.experimental.code_parsers.py.context_processing.context_retriever.PyContextRetriever", "automata.tests.unit.context_retriever.test_context_handler.test_construct_symbol_context_no_interface", "automata.experimental.code_parsers.py.context_processing.context_retriever.PyContextRetriever.process_symbol", "automata.experimental.code_parsers.py.context_processing.context_handler.PyContextHandler.__init__", "automata.tests.unit.context_retriever.test_context_retriever.test_process_symbol_source", "automata.embedding.embedding_base.EmbeddingBuilder.fetch_embedding_source_code", "automata.tests.unit.context_retriever.test_context_handler.context_handler"], "k": 20}
{"task_id": "ContextCodeRetrieval/465", "query": "What is the purpose of the AgentToolFactory class?", "truth_top_match": "automata.tools.agent_tool_factory.AgentToolFactory", "top_k_matches": ["automata.tools.agent_tool_factory.AgentToolFactory", "automata.agent.openai_agent.OpenAIAgentToolkitBuilder", "automata.experimental.tools.builders.agentified_search_builder.AgentifiedSearchOpenAIToolkitBuilder", "automata.agent.agent.AgentToolkitBuilder", "automata.singletons.toolkit_registry.OpenAIAutomataAgentToolkitRegistry", "automata.agent.agent.AgentToolkitNames", "automata.experimental.tools.builders.document_oracle_builder.DocumentOracleOpenAIToolkitBuilder", "automata.tools.agent_tool_factory.AgentToolFactory.create_tools_from_builder", "automata.experimental.tools.builders.advanced_context_oracle_builder.AdvancedContextOracleOpenAIToolkitBuilder", "automata.tests.unit.agentified_search.test_agentified_search.test_build"], "k": 20}
{"task_id": "ContextCodeRetrieval/466", "query": "What method is used to close the connection to the SQL database in SQLDatabase?", "truth_top_match": "automata.core.base.database.relational_database.SQLDatabase.close", "top_k_matches": ["automata.core.base.database.relational_database.SQLDatabase.close", "automata.core.base.database.relational_database.RelationalDatabase.close", "automata.tests.unit.database.test_database_sql.test_connect_close", "automata.core.base.database.relational_database.SQLDatabase", "automata.core.base.database.relational_database.SQLDatabase.__init__", "automata.core.base.database.relational_database.SQLDatabase.NullConnection", "automata.tests.unit.automata_agent.test_automata_agent.test_db_cleanup", "automata.tests.unit.database.test_database_sql.db", "automata.core.base.database.relational_database.SQLDatabase.connect", "automata.tests.unit.automata_agent.test_automata_agent.test_db_connection"], "k": 20}
{"task_id": "ContextCodeRetrieval/467", "query": "What static method processes symbol roles into a dictionary mapping?", "truth_top_match": "automata.symbol.graph.symbol_references.ReferenceProcessor._process_symbol_roles", "top_k_matches": ["automata.symbol.graph.symbol_references.ReferenceProcessor._process_symbol_roles", "automata.experimental.scripts.run_update_tool_eval.process_symbol_graph", "automata.symbol.graph.symbol_navigator.SymbolGraphNavigator.get_potential_symbol_callers", "automata.symbol.graph.symbol_navigator.SymbolGraphNavigator.get_potential_symbol_callees", "automata.symbol.graph.symbol_caller_callees.CallerCalleeProcessor.process", "automata.tests.unit.context_retriever.test_context_retriever.test_process_symbol_interface", "automata.symbol.graph.symbol_graph.SymbolGraph.get_potential_symbol_callers", "automata.tests.unit.context_retriever.test_context_retriever.test_process_symbol_source", "automata.symbol.graph.symbol_graph_types.SymbolGraphType", "automata.symbol.graph.symbol_references.ReferenceProcessor.process"], "k": 20}
{"task_id": "ContextCodeRetrieval/468", "query": "What method is used to build tools associated with the context oracle using AdvancedContextOracleToolkitBuilder?", "truth_top_match": "automata.experimental.tools.builders.advanced_context_oracle_builder.AdvancedContextOracleToolkitBuilder.build", "top_k_matches": ["automata.experimental.tools.builders.advanced_context_oracle_builder.AdvancedContextOracleOpenAIToolkitBuilder", "automata.experimental.tools.builders.advanced_context_oracle_builder.AdvancedContextOracleToolkitBuilder", "automata.experimental.tools.builders.advanced_context_oracle_builder.AdvancedContextOracleToolkitBuilder.build", "automata.experimental.tools.builders.document_oracle_builder.DocumentOracleToolkitBuilder.build", "automata.tests.unit.context_oracle.test_context_oracle_tool.test_build", "automata.experimental.tools.builders.document_oracle_builder.DocumentOracleOpenAIToolkitBuilder", "automata.experimental.tools.builders.document_oracle_builder.DocumentOracleToolkitBuilder", "automata.tests.unit.context_oracle.test_context_oracle_tool.advanced_context_oracle_tool_builder", "automata.tests.unit.context_oracle.test_context_oracle_tool.test_init", "automata.experimental.tools.builders.advanced_context_oracle_builder.AdvancedContextOracleOpenAIToolkitBuilder.build_for_open_ai"], "k": 20}
{"task_id": "ContextCodeRetrieval/469", "query": "Which class represents a reference to a symbol in a file?", "truth_top_match": "automata.symbol.symbol_base.SymbolReference", "top_k_matches": ["automata.symbol.symbol_base.SymbolReference", "automata.symbol.symbol_base.Symbol", "automata.experimental.search.symbol_search.SymbolSearch.symbol_references", "automata.tests.unit.cli.test_cli_scripts_run_doc_embedding.FakeSymbol", "automata.symbol.graph.symbol_navigator.SymbolGraphNavigator._get_symbol_containing_file", "automata.symbol.graph.symbol_navigator.SymbolGraphNavigator._get_symbol_references_in_scope", "automata.symbol.symbol_parser._SymbolParser", "automata.symbol.graph.symbol_graph_types.SymbolGraphType", "automata.symbol.graph.symbol_graph.SymbolGraph.get_references_to_symbol", "automata.symbol_embedding.symbol_embedding_base.SymbolDocEmbedding"], "k": 20}
{"task_id": "ContextCodeRetrieval/470", "query": "What private method is used to add `Symbol` nodes to the `SymbolGraph`?", "truth_top_match": "automata.symbol.graph.graph_builder.GraphBuilder._add_symbol_vertices", "top_k_matches": ["automata.symbol.graph.graph_builder.GraphBuilder._add_symbol_vertices", "automata.symbol.graph.symbol_graph.SymbolGraph", "automata.symbol.graph.symbol_caller_callees.CallerCalleeProcessor.process", "automata.symbol.graph.symbol_relationships.RelationshipProcessor.process", "automata.symbol.graph.symbol_navigator.SymbolGraphNavigator", "automata.symbol.graph.symbol_references.ReferenceProcessor.process", "automata.symbol.graph.symbol_references.ReferenceProcessor", "automata.symbol.graph.graph_builder.GraphBuilder", "automata.experimental.scripts.run_update_tool_eval.process_symbol_graph", "automata.tests.unit.symbol.test_symbol_graph_static.test_build_real_graph"], "k": 20}
{"task_id": "ContextCodeRetrieval/471", "query": "What function checks if a list is sorted?", "truth_top_match": "automata.core.utils.is_sorted", "top_k_matches": ["automata.core.utils.is_sorted", "automata.tests.unit.code_writers.test_py_writer.test_create_function_source_function", "automata.tests.unit.symbol.test_symbol_rank.test_get_ranks", "automata.tests.unit.symbol.test_symbol_graph_static.test_get_all_symbols", "automata.tests.unit.symbol.test_symbol_graph.test_get_all_symbols", "automata.tests.unit.symbol.test_symbol_rank.test_get_ranks_small_graph", "automata.tests.unit.symbol.test_symbol_utils.test_get_rankable_symbols", "automata.tests.unit.code_writers.test_py_writer.MockCodeGenerator._check_function_obj", "automata.symbol.symbol_base.ISymbolProvider.get_sorted_supported_symbols", "automata.tests.unit.ast_utils.test_ast_utils_bounding_box.test_fetch_bounding_box_with_function_node"], "k": 20}
{"task_id": "ContextCodeRetrieval/472", "query": "What class represents a generic task object used by the TaskExecutor?", "truth_top_match": "automata.tasks.task_base.Task", "top_k_matches": ["automata.tasks.task_base.Task", "automata.tasks.task_base.ITaskExecution", "automata.tasks.task_error.TaskGeneralError", "automata.tasks.task_executor.AutomataTaskExecutor", "automata.tasks.task_base.TaskStatus", "automata.tasks.task_executor.IAutomataTaskExecution", "automata.tasks.task_base.ITaskExecution.execute", "automata.tests.unit.task.test_task_executor.TestExecuteBehavior", "automata.tasks.task_base.Task.__init__", "automata.tasks.task_base.TaskEnvironment"], "k": 20}
{"task_id": "ContextCodeRetrieval/473", "query": "What method in the AgentEvaluationHarness class checks the evaluation metrics for the given instructions and expected actions?", "truth_top_match": "automata.eval.agent.agent_eval_harness.AgentEvaluationHarness.evaluate", "top_k_matches": ["automata.eval.agent.agent_eval_harness.AgentEvaluationHarness", "automata.tests.regression.test_agent_end_to_end.test_action_based_eval_tasks", "automata.tests.unit.agent_eval.test_agent_evaluation_harness_and_metrics.test_evaluation_harness_and_metrics", "automata.eval.agent.agent_eval_harness.AgentEvaluationHarness.evaluate", "automata.eval.tool.tool_eval_harness.ToolEvaluationHarness", "automata.tests.regression.test_agent_end_to_end.test_basic_eval_tasks", "automata.tests.unit.tool_eval.test_tool_eval_harness_and_metrics.test_tool_evaluation_harness_and_metrics", "automata.eval.tool.tool_eval_harness.ToolEvaluationHarness.evaluate", "automata.eval.agent.agent_eval.AgentEval", "automata.tests.unit.agent_eval.test_agent_eval_database.test_eval_result_writer"], "k": 20}
{"task_id": "ContextCodeRetrieval/474", "query": "What method in the Action class is used to convert the action to a dictionary?", "truth_top_match": "automata.eval.eval_base.Action.to_payload", "top_k_matches": ["automata.eval.eval_base.Action.to_payload", "automata.eval.agent.agent_eval.AgentEvalResult.to_payload", "automata.eval.eval_base.parse_action_from_payload", "automata.eval.eval_base.Action", "automata.eval.eval_base.Action.from_payload", "automata.eval.tool.search_eval.SymbolSearchEvalResult.to_payload", "automata.eval.agent.openai_function_eval.OpenAIFunctionCallAction", "automata.eval.agent.openai_function_eval.OpenAIFunctionCallAction.from_payload", "automata.eval.agent.openai_function_eval.OpenAIFunctionCallAction.to_payload", "automata.eval.agent.code_writing_eval.CodeWritingAction.to_payload"], "k": 20}
{"task_id": "ContextCodeRetrieval/475", "query": "Which method of the task database is responsible for inserting a new task?", "truth_top_match": "automata.tasks.task_database.AutomataAgentTaskDatabase.insert_task", "top_k_matches": ["automata.tests.unit.task.test_task_database.test_insert_task", "automata.tests.unit.task.test_task_database.test_insert_and_contains_task", "automata.tasks.task_database.AutomataAgentTaskDatabase", "automata.tests.unit.task.test_task_database.test_update_task", "automata.tests.unit.task.test_task_database.test_contains", "automata.tests.unit.task.test_task_database.test_update_task_2", "automata.tests.unit.task.test_task_database.test_get_tasks_by_query", "automata.tasks.task_database.AutomataAgentTaskDatabase.insert_task", "automata.tests.unit.task.test_task_database.test_get_tasks_by_query_with_sql_string", "automata.tasks.task_registry.AutomataTaskRegistry"], "k": 20}
{"task_id": "ContextCodeRetrieval/476", "query": "How to get all the registered toolkits in the OpenAIAutomataAgentToolkitRegistry?", "truth_top_match": "automata.singletons.toolkit_registry.OpenAIAutomataAgentToolkitRegistry.get_all_builders", "top_k_matches": ["automata.singletons.toolkit_registry.OpenAIAutomataAgentToolkitRegistry.get_all_builders", "automata.singletons.toolkit_registry.OpenAIAutomataAgentToolkitRegistry", "automata.experimental.tools.builders.agentified_search_builder.AgentifiedSearchOpenAIToolkitBuilder", "automata.experimental.tools.builders.symbol_search_builder.SymbolSearchOpenAIToolkitBuilder", "automata.experimental.tools.builders.advanced_context_oracle_builder.AdvancedContextOracleOpenAIToolkitBuilder", "automata.experimental.tools.builders.document_oracle_builder.DocumentOracleOpenAIToolkitBuilder", "automata.tools.builders.py_reader_builder.PyReaderOpenAIToolkitBuilder", "automata.singletons.toolkit_registry.OpenAIAutomataAgentToolkitRegistry.register_tool_manager", "automata.tools.agent_tool_factory.AgentToolFactory.create_tools_from_builder", "automata.agent.openai_agent.OpenAIAgentToolkitBuilder"], "k": 20}
{"task_id": "ContextCodeRetrieval/477", "query": "What function gets the path to the root of the Automata config directory?", "truth_top_match": "automata.core.utils.get_config_fpath", "top_k_matches": ["automata.core.utils.get_config_fpath", "automata.core.utils.get_root_fpath", "automata.core.utils.get_root_py_fpath", "automata.core.utils.get_embedding_data_fpath", "automata.core.run_handlers.initialize_automata", "automata.cli.install_indexing.get_project_paths", "automata.core.run_handlers.run_setup", "automata.symbol.symbol_utils.load_data_path", "automata.config.config_base.AgentConfigName", "automata.tests.unit.cli.test_cli_utils.default_args"], "k": 20}
{"task_id": "ContextCodeRetrieval/478", "query": "Which method of the GitHubClient class is used for creating a new pull request on GitHub?", "truth_top_match": "automata.singletons.github_client.GitHubClient.create_pull_request", "top_k_matches": ["automata.tests.unit.singletons.test_singletons_github_client.test_create_pull_request", "automata.singletons.github_client.GitHubClient.create_pull_request", "automata.tests.unit.github.test_github_client.test_create_pull_request", "automata.tests.unit.github.test_github_client.test_merge_pull_request", "automata.singletons.github_client.RepositoryClient.create_pull_request", "automata.tests.unit.singletons.test_singletons_github_client.test_create_branch", "automata.tests.unit.github.test_github_client.test_get_open_pull_requests", "automata.tests.unit.singletons.test_singletons_github_client.test_create_issue", "automata.singletons.github_client.GitHubClient.merge_pull_request", "automata.singletons.github_client.GitHubClient"], "k": 20}
{"task_id": "ContextCodeRetrieval/479", "query": "How can you check if a branch exists on the remote?", "truth_top_match": "automata.singletons.github_client.RepositoryClient.branch_exists", "top_k_matches": ["automata.singletons.github_client.RepositoryClient.branch_exists", "automata.singletons.github_client.GitHubClient.branch_exists", "automata.tests.unit.github.test_github_client.test_branch_exists", "automata.tests.unit.singletons.test_singletons_github_client.test_branch_exists", "automata.singletons.github_client.GitHubClient.checkout_branch", "automata.tests.unit.singletons.test_singletons_github_client.test_checkout_branch", "automata.singletons.github_client.RepositoryClient.checkout_branch", "automata.tests.unit.singletons.test_singletons_github_client.test_create_branch", "automata.singletons.github_client.GitHubClient.create_branch", "automata.singletons.github_client.RepositoryClient.create_branch"], "k": 20}
{"task_id": "ContextCodeRetrieval/480", "query": "What class represents a function call to be made by the OpenAI agent?", "truth_top_match": "automata.llm.llm_base.FunctionCall", "top_k_matches": ["automata.eval.agent.openai_function_eval.OpenAIFunctionCallAction", "automata.llm.llm_base.FunctionCall", "automata.eval.agent.openai_function_eval.OpenAIFunctionEval", "automata.llm.providers.openai_llm.OpenAIFunction", "automata.eval.agent.openai_function_eval.OpenAIFunctionCallAction.__repr__", "automata.llm.providers.openai_llm.OpenAIChatMessage", "automata.agent.openai_agent.OpenAIAutomataAgent", "automata.llm.providers.openai_llm.OpenAIChatCompletionResult", "automata.llm.providers.openai_llm.OpenAITool", "automata.llm.providers.openai_llm.OpenAITool.__init__"], "k": 20}
{"task_id": "ContextCodeRetrieval/481", "query": "How can we retrieve the filepath for a given dotpath in PyModuleLoader?", "truth_top_match": "automata.singletons.py_module_loader.PyModuleLoader.fetch_existing_module_fpath_by_dotpath", "top_k_matches": ["automata.code_parsers.py.dotpath_map.DotPathMap.get_module_fpath_by_dotpath", "automata.singletons.py_module_loader.PyModuleLoader.fetch_existing_module_fpath_by_dotpath", "automata.code_parsers.py.dotpath_map.DotPathMap.get_module_dotpath_by_fpath", "automata.singletons.py_module_loader.PyModuleLoader.fetch_ast_module", "automata.singletons.py_module_loader.PyModuleLoader.fetch_existing_module_dotpath", "automata.code_parsers.py.dotpath_map.DotPathMap.contains_dotpath", "automata.singletons.py_module_loader.PyModuleLoader.get_module_dotpath_by_fpath", "automata.tests.unit.module_loader.test_module_loader.test_dotpath_map", "automata.code_parsers.py.dotpath_map.DotPathMap.put_module", "automata.tests.unit.module_loader.test_module_loader.test_get_module_fpath_by_dotpath_for_invalid_dotpath"], "k": 20}
{"task_id": "ContextCodeRetrieval/482", "query": "What property is used to access the symbol of SymbolEmbedding?", "truth_top_match": "automata.symbol_embedding.symbol_embedding_base.SymbolEmbedding.symbol", "top_k_matches": ["automata.symbol_embedding.symbol_embedding_base.SymbolCodeEmbedding", "automata.symbol_embedding.symbol_embedding_base.SymbolDocEmbedding", "automata.symbol_embedding.symbol_embedding_base.SymbolEmbedding", "automata.symbol_embedding.vector_databases.IEmbeddingLookupProvider", "automata.tests.unit.cli.test_cli_scripts_run_code_embedding.symbol_code_embedding_handler_mock", "automata.symbol_embedding.symbol_embedding_handler.SymbolEmbeddingHandler", "automata.tests.unit.database.test_database_vector.test_lookup_symbol", "automata.symbol_embedding.symbol_embedding_base.SymbolEmbedding.symbol", "automata.tests.conftest.embedded_symbol", "automata.experimental.memory_store.symbol_doc_embedding_handler.SymbolDocEmbeddingHandler"], "k": 20}
{"task_id": "ContextCodeRetrieval/483", "query": "What is the utility that adds options related to the configuration of an evaluation in the command-line interface?", "truth_top_match": "automata.cli.options.eval_options", "top_k_matches": ["automata.cli.options.eval_options", "automata.cli.commands.run_tool_eval", "automata.cli.options.agent_options", "automata.cli.commands.run_agent_eval", "automata.cli.commands.configure", "automata.tests.unit.cli.test_cli_options.test_common_options_project_name", "automata.tests.unit.cli.test_cli_options.test_common_options_project_project_name", "automata.cli.options.common_options", "automata.tests.unit.cli.test_cli_options.command_with_options", "automata.tests.unit.cli.test_cli_options.test_common_options_log_level"], "k": 20}
{"task_id": "ContextCodeRetrieval/484", "query": "What abstract method is used to get a specific entry in the VectorDatabaseProvider?", "truth_top_match": "automata.core.base.database.vector_database.VectorDatabaseProvider.get", "top_k_matches": ["automata.core.base.database.vector_database.VectorDatabaseProvider", "automata.core.base.database.vector_database.ChromaVectorDatabase", "automata.core.base.database.vector_database.JSONVectorDatabase", "automata.symbol_embedding.vector_databases.ChromaSymbolEmbeddingVectorDatabase", "automata.symbol_embedding.vector_databases.JSONSymbolEmbeddingVectorDatabase", "automata.core.base.database.vector_database.VectorDatabaseProvider.get", "automata.core.base.database.vector_database.VectorDatabaseProvider.get_all_ordered_embeddings", "automata.core.base.database.vector_database.VectorDatabaseProvider.add", "automata.tests.unit.database.test_database_vector.test_lookup_symbol", "automata.symbol_embedding.vector_databases.IEmbeddingLookupProvider"], "k": 20}
{"task_id": "ContextCodeRetrieval/485", "query": "What utility does the `_extract_snippet` method provide in CodeWritingAction?", "truth_top_match": "automata.eval.agent.code_writing_eval.CodeWritingAction._extract_snippet", "top_k_matches": ["automata.eval.agent.code_writing_eval.CodeWritingAction._extract_snippet", "automata.eval.agent.code_writing_eval.CodeWritingAction", "automata.eval.agent.code_writing_eval.CodeWritingEval._parse_code_snippet", "automata.eval.agent.code_writing_eval.CodeWritingEval.extract_action", "automata.eval.agent.code_writing_eval.CodeWritingEval", "automata.eval.agent.openai_function_eval.OpenAIFunctionEval.extract_action", "automata.eval.agent.code_writing_eval.CodeWritingAction.from_payload", "automata.tests.unit.tool_eval.test_symbol_search_eval.test_symbol_search_eval_extract_action", "automata.eval.agent.code_writing_eval.CodeWritingEval._filter_actions", "automata.eval.tool.search_eval.SymbolSearchEval.extract_action"], "k": 20}
{"task_id": "ContextCodeRetrieval/486", "query": "What enum class defines the available search tools?", "truth_top_match": "automata.experimental.tools.builders.symbol_search_builder.SearchTool", "top_k_matches": ["automata.experimental.tools.builders.symbol_search_builder.SearchTool", "automata.agent.agent.AgentToolkitNames", "automata.experimental.tools.builders.symbol_search_builder.SymbolSearchOpenAIToolkitBuilder", "automata.experimental.tools.builders.symbol_search_builder.SymbolSearchToolkitBuilder.__init__", "automata.experimental.tools.builders.agentified_search_builder.AgentifiedSearchOpenAIToolkitBuilder", "automata.experimental.tools.builders.symbol_search_builder.SymbolSearchToolkitBuilder", "automata.experimental.tools.builders.symbol_search_builder.SymbolSearchToolkitBuilder.build", "automata.experimental.tools.builders.symbol_search_builder.SymbolSearchToolkitBuilder.build_tool", "automata.eval.tool.search_eval.SymbolSearchEval", "automata.experimental.code_parsers.py.context_processing.context_retriever.ContextComponent"], "k": 20}
{"task_id": "ContextCodeRetrieval/487", "query": "How does the vector database provider discard a batch of specific entries?", "truth_top_match": "automata.core.base.database.vector_database.VectorDatabaseProvider.batch_discard", "top_k_matches": ["automata.core.base.database.vector_database.JSONVectorDatabase", "automata.tests.unit.chroma.test_chroma_vector.test_batch_add_and_remove", "automata.tests.unit.database.test_database_vector.test_delete_symbol", "automata.core.base.database.vector_database.ChromaVectorDatabase", "automata.symbol_embedding.symbol_embedding_handler.SymbolEmbeddingHandler.flush", "automata.core.base.database.vector_database.ChromaVectorDatabase.batch_update", "automata.core.base.database.vector_database.VectorDatabaseProvider", "automata.core.base.database.vector_database.ChromaVectorDatabase.batch_discard", "automata.core.base.database.vector_database.VectorDatabaseProvider.batch_add", "automata.memory_store.symbol_code_embedding_handler.SymbolCodeEmbeddingHandler.flush"], "k": 20}
{"task_id": "ContextCodeRetrieval/488", "query": "What concrete class is designed for symbol code embeddings?", "truth_top_match": "automata.symbol_embedding.symbol_embedding_base.SymbolCodeEmbedding", "top_k_matches": ["automata.symbol_embedding.symbol_embedding_base.SymbolCodeEmbedding", "automata.symbol_embedding.symbol_embedding_builders.SymbolCodeEmbeddingBuilder", "automata.symbol_embedding.symbol_embedding_base.SymbolDocEmbedding", "automata.symbol_embedding.symbol_embedding_base.SymbolEmbedding", "automata.symbol_embedding.symbol_embedding_builders.SymbolCodeEmbeddingBuilder.build", "automata.experimental.symbol_embedding.symbol_doc_embedding_builder.SymbolDocEmbeddingBuilder", "automata.embedding.embedding_base.EmbeddingBuilder", "automata.symbol_embedding.symbol_embedding_handler.SymbolEmbeddingHandler", "automata.experimental.symbol_embedding.symbol_doc_embedding_builder.SymbolDocEmbeddingBuilder.build_non_class", "automata.memory_store.symbol_code_embedding_handler.SymbolCodeEmbeddingHandler"], "k": 20}
{"task_id": "ContextCodeRetrieval/489", "query": "What method retrieves potential caller references of a `Symbol` based on 'callee' label?", "truth_top_match": "automata.symbol.graph.symbol_navigator.SymbolGraphNavigator.get_potential_symbol_callers", "top_k_matches": ["automata.symbol.graph.symbol_navigator.SymbolGraphNavigator.get_potential_symbol_callees", "automata.symbol.graph.symbol_navigator.SymbolGraphNavigator.get_potential_symbol_callers", "automata.symbol.graph.symbol_graph.SymbolGraph.get_potential_symbol_callers", "automata.symbol.graph.symbol_graph.SymbolGraph.get_potential_symbol_callees", "automata.symbol.graph.graph_builder.GraphBuilder._process_caller_callee_relationships", "automata.symbol.graph.symbol_caller_callees.CallerCalleeProcessor.process", "automata.symbol.graph.symbol_navigator.SymbolGraphNavigator.get_references_to_symbol", "automata.experimental.search.symbol_search.SymbolSearch.symbol_references", "automata.symbol.graph.symbol_navigator.SymbolGraphNavigator._get_symbol_references_in_scope", "automata.symbol.graph.symbol_graph.SymbolGraph.get_references_to_symbol"], "k": 20}
{"task_id": "ContextCodeRetrieval/490", "query": "What function is used to get the project paths?", "truth_top_match": "automata.cli.install_indexing.get_project_paths", "top_k_matches": ["automata.cli.install_indexing.get_project_paths", "automata.symbol.symbol_utils.load_data_path", "automata.code_parsers.py.dotpath_map.DotPathMap", "automata.core.utils.get_root_py_fpath", "automata.core.run_handlers.initialize_automata", "automata.code_parsers.py.dotpath_map.DotPathMap.__init__", "automata.singletons.py_module_loader.PyModuleLoader.initialize", "automata.core.utils.get_root_fpath", "automata.cli.install_indexing.generate_local_indices", "automata.tests.unit.cli.test_cli_utils.default_args"], "k": 20}
{"task_id": "ContextCodeRetrieval/491", "query": "Which method is used to get open issues for the remote repository?", "truth_top_match": "automata.singletons.github_client.GitHubClient.get_open_issues", "top_k_matches": ["automata.singletons.github_client.GitHubClient.get_open_issues", "automata.singletons.github_client.GitHubClient.get_open_pull_requests", "automata.singletons.github_client.GitHubClient.fetch_issue", "automata.tests.unit.github.test_github_client.test_get_open_issues", "automata.tests.unit.github.test_github_client.test_get_open_pull_requests", "automata.tests.unit.github.test_github_client.test_fetch_issue", "automata.singletons.github_client.GitHubClient.create_issue_comment", "automata.singletons.github_client.GitHubClient.create_issue", "automata.singletons.github_client.GitHubClient", "automata.tests.unit.singletons.test_singletons_github_client.test_clone_repository"], "k": 20}
{"task_id": "ContextCodeRetrieval/492", "query": "How can DependencyFactory create a `SymbolRank` instance?", "truth_top_match": "automata.singletons.dependency_factory.DependencyFactory.create_symbol_rank", "top_k_matches": ["automata.tests.unit.singletons.test_singletons_dependency_factory.test_create_symbol_rank", "automata.singletons.dependency_factory.DependencyFactory.create_symbol_rank", "automata.tests.unit.singletons.test_singletons_dependency_factory.test_create_subgraph_is_instance", "automata.tests.utils.factories.symbol_search_live", "automata.singletons.dependency_factory.DependencyFactory.create_symbol_search", "automata.experimental.search.symbol_rank.SymbolRank", "automata.experimental.search.symbol_search.SymbolSearch.symbol_rank", "automata.singletons.dependency_factory.DependencyFactory.create_symbol_graph", "automata.tests.unit.singletons.test_singletons_dependency_factory.test_create_symbol_search", "automata.singletons.dependency_factory.DependencyFactory"], "k": 20}
{"task_id": "ContextCodeRetrieval/493", "query": "What class represents a function callable by the OpenAI agent?", "truth_top_match": "automata.llm.providers.openai_llm.OpenAIFunction", "top_k_matches": ["automata.llm.providers.openai_llm.OpenAIFunction", "automata.eval.agent.openai_function_eval.OpenAIFunctionEval", "automata.eval.agent.openai_function_eval.OpenAIFunctionCallAction", "automata.llm.llm_base.FunctionCall", "automata.llm.providers.openai_llm.OpenAITool", "automata.llm.providers.openai_llm.OpenAITool.__init__", "automata.agent.openai_agent.OpenAIAutomataAgent.functions", "automata.agent.openai_agent.OpenAIAutomataAgent", "automata.llm.providers.openai_llm.OpenAIChatMessage", "automata.eval.agent.openai_function_eval.OpenAIFunctionCallAction.__repr__"], "k": 20}
{"task_id": "ContextCodeRetrieval/494", "query": "What method in _SymbolParser is used to accept an identifier from the `Symbol`?", "truth_top_match": "automata.symbol.symbol_parser._SymbolParser.accept_identifier", "top_k_matches": ["automata.symbol.symbol_parser._SymbolParser", "automata.symbol.symbol_parser._SymbolParser.accept_identifier", "automata.symbol.symbol_parser._SymbolParser.accept_backtick_escaped_identifier", "automata.symbol.symbol_parser._SymbolParser.accept_space_escaped_identifier", "automata.symbol.symbol_parser.parse_symbol", "automata.symbol.symbol_parser._SymbolParser.parse_descriptor", "automata.symbol.symbol_parser._SymbolParser.accept_escaped_identifier", "automata.symbol.symbol_base.Symbol", "automata.symbol.symbol_parser.new_local_symbol", "automata.symbol.symbol_parser._SymbolParser.accept_character"], "k": 20}
{"task_id": "ContextCodeRetrieval/495", "query": "What private method is used to normalize embeddings in the EmbeddingSimilarityCalculator class?", "truth_top_match": "automata.embedding.embedding_base.EmbeddingSimilarityCalculator._normalize_embeddings", "top_k_matches": ["automata.embedding.embedding_base.EmbeddingSimilarityCalculator", "automata.embedding.embedding_base.EmbeddingSimilarityCalculator.__init__", "automata.singletons.dependency_factory.DependencyFactory.create_embedding_similarity_calculator", "automata.embedding.embedding_base.EmbeddingSimilarityCalculator._calculate_embedding_similarity", "automata.embedding.embedding_base.EmbeddingSimilarityCalculator._normalize_embeddings", "automata.tests.unit.context_oracle.test_context_oracle_tool.embedding_similarity_calculator", "automata.tests.unit.context_oracle.test_document_oracle_tool.embedding_similarity_calculator", "automata.tests.unit.symbol_embedding.test_symbol_embedding.test_get_embedding", "automata.tests.unit.symbol_embedding.test_persistent_symbol_embedding._extracted_from_test_symbol_doc_embedding", "automata.experimental.tools.builders.advanced_context_oracle_builder.AdvancedContextOracleToolkitBuilder.__init__"], "k": 20}
{"task_id": "ContextCodeRetrieval/496", "query": "How does the toolkit process a query?", "truth_top_match": "automata.experimental.tools.builders.symbol_search_builder.SymbolSearchToolkitBuilder.process_query", "top_k_matches": ["automata.experimental.tools.builders.symbol_search_builder.SymbolSearchToolkitBuilder.process_query", "automata.experimental.tools.builders.document_oracle_builder.DocumentOracleToolkitBuilder", "automata.experimental.tools.builders.advanced_context_oracle_builder.AdvancedContextOracleToolkitBuilder", "automata.tests.unit.symbol.test_symbol_search.test_process_query", "automata.tests.unit.symbol.test_symbol_search_tool.test_process_query", "automata.experimental.tools.builders.agentified_search_builder.AgentifiedSearchToolkitBuilder", "automata.experimental.tools.builders.symbol_search_builder.SymbolSearchToolkitBuilder", "automata.experimental.tools.builders.document_oracle_builder.DocumentOracleOpenAIToolkitBuilder", "automata.experimental.tools.builders.document_oracle_builder.DocumentOracleToolkitBuilder.build", "automata.tools.builders.py_reader_builder.PyReaderToolkitBuilder"], "k": 20}
{"task_id": "ContextCodeRetrieval/497", "query": "How does one retrieve the task's logs?", "truth_top_match": "automata.tasks.automata_task.AutomataTask.get_logs", "top_k_matches": ["automata.tasks.automata_task.AutomataTask.get_logs", "automata.tasks.task_base.Task._get_log_dir", "automata.tasks.automata_task.AutomataTask.initialize_logging", "automata.tests.unit.task.test_task.test_task_inital_state", "automata.tasks.automata_task.AutomataTask", "automata.tests.unit.task.test_task.test_setup_environment", "automata.tests.unit.task.test_task_executor.test_execute_automata_task_success", "automata.tasks.task_registry.AutomataTaskRegistry.get_all_tasks", "automata.tests.unit.task.test_task_database.test_get_all_tasks", "automata.tasks.task_base.Task"], "k": 20}
{"task_id": "ContextCodeRetrieval/498", "query": "What method of TaskEnvironment is used to reset the task_environment to its initial state?", "truth_top_match": "automata.tasks.task_base.TaskEnvironment.reset", "top_k_matches": ["automata.tasks.task_environment.AutomataTaskEnvironment.reset", "automata.tasks.task_base.TaskEnvironment.teardown", "automata.tasks.task_base.TaskEnvironment.reset", "automata.tasks.task_base.TaskEnvironment", "automata.tasks.task_environment.AutomataTaskEnvironment.teardown", "automata.core.run_handlers.initialize_automata", "automata.tests.conftest.task_environment", "automata.tasks.task_environment.AutomataTaskEnvironment", "automata.tasks.task_base.TaskEnvironment.setup", "automata.tasks.task_environment.AutomataTaskEnvironment.setup"], "k": 20}
{"task_id": "ContextCodeRetrieval/499", "query": "What does the method _load_all_modules of PyModuleLoader do?", "truth_top_match": "automata.singletons.py_module_loader.PyModuleLoader._load_all_modules", "top_k_matches": ["automata.singletons.py_module_loader.PyModuleLoader._load_all_modules", "automata.singletons.py_module_loader.PyModuleLoader.reset", "automata.singletons.py_module_loader.PyModuleLoader", "automata.experimental.scripts.run_update_tool_eval.process_modules", "automata.tests.unit.task.test_task_executor.module_loader", "automata.tests.unit.module_loader.test_module_loader.test_dotpath_map", "automata.tests.unit.code_writers.test_py_writer.test_upsert_to_module", "automata.tests.unit.module_loader.test_module_loader.test_get_items", "automata.tests.unit.code_readers.test_py_reader.module_loader", "automata.tests.unit.code_readers.test_py_reader_tool.module_loader"], "k": 20}
{"task_id": "ContextCodeRetrieval/500", "query": "How is the embedding for a non-class type symbol's documentation built?", "truth_top_match": "automata.experimental.symbol_embedding.symbol_doc_embedding_builder.SymbolDocEmbeddingBuilder.build_non_class", "top_k_matches": ["automata.experimental.symbol_embedding.symbol_doc_embedding_builder.SymbolDocEmbeddingBuilder.build_non_class", "automata.experimental.symbol_embedding.symbol_doc_embedding_builder.SymbolDocEmbeddingBuilder", "automata.experimental.symbol_embedding.symbol_doc_embedding_builder.SymbolDocEmbeddingBuilder.build", "automata.symbol_embedding.symbol_embedding_base.SymbolDocEmbedding", "automata.tests.conftest.embedding_maker._make_embedding", "automata.experimental.memory_store.symbol_doc_embedding_handler.SymbolDocEmbeddingHandler", "automata.symbol_embedding.symbol_embedding_base.SymbolCodeEmbedding", "automata.tests.conftest.embedding_maker", "automata.symbol_embedding.symbol_embedding_base.SymbolEmbedding", "automata.symbol_embedding.symbol_embedding_builders.SymbolCodeEmbeddingBuilder"], "k": 20}
{"task_id": "ContextCodeRetrieval/501", "query": "What function maps a list of dotpaths to their corresponding Symbol objects?", "truth_top_match": "automata.cli.scripts.run_doc_embedding.map_dotpaths_to_symbols", "top_k_matches": ["automata.cli.scripts.run_doc_embedding.map_dotpaths_to_symbols", "automata.code_parsers.py.dotpath_map.DotPathMap", "automata.tests.unit.cli.test_cli_scripts_run_doc_embedding.FakeSymbol", "automata.experimental.scripts.run_update_tool_eval.get_missing_symbols", "automata.singletons.py_module_loader.PyModuleLoader.__contains__", "automata.experimental.scripts.run_update_tool_eval.filter_and_log_symbols", "automata.cli.scripts.run_doc_embedding.parse_dotpaths", "automata.tests.unit.cli.test_cli_scripts_run_doc_embedding.FakeSymbol.__init__", "automata.experimental.scripts.run_update_tool_eval.get_extra_symbols", "automata.symbol.graph.symbol_navigator.SymbolGraphNavigator.get_sorted_supported_symbols"], "k": 20}
{"task_id": "ContextCodeRetrieval/502", "query": "How to get a dependency from the DependencyFactory?", "truth_top_match": "automata.singletons.dependency_factory.DependencyFactory.get", "top_k_matches": ["automata.tests.unit.singletons.test_singletons_dependency_factory.dependency_factory", "automata.singletons.dependency_factory.DependencyFactory.get", "automata.tests.unit.singletons.test_singletons_dependency_factory.test_create_symbol_search", "automata.tests.unit.singletons.test_singletons_dependency_factory.test_get_with_override", "automata.tests.unit.singletons.test_singletons_dependency_factory.test_reset", "automata.singletons.dependency_factory.DependencyFactory", "automata.tests.unit.singletons.test_singletons_dependency_factory.test_create_subgraph_is_instance", "automata.tests.unit.singletons.test_singletons_dependency_factory.test_set_overrides_raises_exception", "automata.tests.unit.singletons.test_singletons_dependency_factory.test_create_symbol_graph", "automata.tests.conftest.automata_agent_config_builder"], "k": 20}
{"task_id": "ContextCodeRetrieval/503", "query": "What class represents a language model chat message?", "truth_top_match": "automata.llm.llm_base.LLMChatMessage", "top_k_matches": ["automata.llm.llm_base.LLMChatMessage", "automata.llm.providers.openai_llm.OpenAIChatMessage", "automata.llm.providers.openai_llm.OpenAIConversation", "automata.llm.providers.openai_llm.OpenAIChatCompletionProvider", "automata.llm.providers.openai_llm.OpenAIConversation.__init__", "automata.llm.llm_base.LLMConversation", "automata.llm.providers.openai_llm.OpenAIChatMessage.__str__", "automata.llm.llm_base.LLMChatCompletionProvider", "automata.llm.providers.openai_llm.OpenAIChatMessage.from_completion_result", "automata.llm.providers.openai_llm.OpenAIChatCompletionResult"], "k": 20}
{"task_id": "ContextCodeRetrieval/504", "query": "What class is responsible for handling batch embeddings?", "truth_top_match": "automata.embedding.embedding_base.EmbeddingHandler", "top_k_matches": ["automata.embedding.embedding_base.EmbeddingHandler", "automata.symbol_embedding.symbol_embedding_handler.SymbolEmbeddingHandler", "automata.memory_store.symbol_code_embedding_handler.SymbolCodeEmbeddingHandler", "automata.experimental.memory_store.symbol_doc_embedding_handler.SymbolDocEmbeddingHandler", "automata.experimental.memory_store.symbol_doc_embedding_handler.SymbolDocEmbeddingHandler.__init__", "automata.symbol_embedding.symbol_embedding_handler.SymbolEmbeddingHandler.__init__", "automata.llm.providers.openai_llm.OpenAIEmbeddingProvider", "automata.memory_store.symbol_code_embedding_handler.SymbolCodeEmbeddingHandler.flush", "automata.embedding.embedding_base.EmbeddingVectorProvider", "automata.memory_store.symbol_code_embedding_handler.SymbolCodeEmbeddingHandler.__init__"], "k": 20}
{"task_id": "ContextCodeRetrieval/505", "query": "Which class raises an exception when there's an error executing the code?", "truth_top_match": "automata.eval.agent.code_writing_eval.CodeExecutionError", "top_k_matches": ["automata.eval.agent.code_writing_eval.CodeExecutionError", "automata.eval.tool.tool_eval_harness.EvalExecutionError", "automata.code_writers.py.py_code_writer.PyCodeWriter.InvalidArgumentsError", "automata.eval.eval_error.EvalExecutionError", "automata.eval.tool.tool_eval_harness.EvalLoadingError", "automata.tasks.task_error.TaskInstructionsError", "automata.tasks.task_error.TaskGeneralError", "automata.code_writers.py.py_code_writer.PyCodeWriter.StatementNotFoundError", "automata.tasks.task_error.TaskStateError", "automata.agent.error.AgentGeneralError"], "k": 20}
{"task_id": "ContextCodeRetrieval/506", "query": "What method builds embeddings for a batch of source texts?", "truth_top_match": "automata.llm.providers.openai_llm.OpenAIEmbeddingProvider.batch_build_embedding_vector", "top_k_matches": ["automata.llm.providers.openai_llm.OpenAIEmbeddingProvider.batch_build_embedding_vector", "automata.embedding.embedding_base.EmbeddingBuilder.batch_build", "automata.experimental.symbol_embedding.symbol_doc_embedding_builder.SymbolDocEmbeddingBuilder.batch_build", "automata.symbol_embedding.symbol_embedding_builders.SymbolCodeEmbeddingBuilder.batch_build", "automata.embedding.embedding_base.EmbeddingBuilder.build", "automata.llm.providers.openai_llm.OpenAIEmbeddingProvider.build_embedding_vector", "automata.embedding.embedding_base.EmbeddingVectorProvider.batch_build_embedding_vector", "automata.llm.providers.openai_llm.OpenAIEmbeddingProvider", "automata.memory_store.symbol_code_embedding_handler.SymbolCodeEmbeddingHandler._build_and_add_embeddings", "automata.embedding.embedding_base.EmbeddingBuilder"], "k": 20}
{"task_id": "ContextCodeRetrieval/507", "query": "What class represents a graph of symbols and their relationships in a codebase?", "truth_top_match": "automata.symbol.graph.symbol_graph.SymbolGraph", "top_k_matches": ["automata.symbol.graph.symbol_graph.SymbolGraph", "automata.symbol.graph.symbol_graph_types.SymbolGraphType", "automata.symbol.graph.graph_builder.GraphBuilder", "automata.symbol.graph.symbol_navigator.SymbolGraphNavigator", "automata.symbol.symbol_base.Symbol", "automata.symbol.graph.symbol_relationships.RelationshipProcessor.process", "automata.symbol.graph.symbol_relationships.RelationshipProcessor", "automata.symbol_embedding.symbol_embedding_base.SymbolCodeEmbedding", "automata.symbol.graph.symbol_navigator.SymbolGraphNavigator.get_symbol_relationships", "automata.experimental.search.symbol_search.SymbolSearch"], "k": 20}
{"task_id": "ContextCodeRetrieval/508", "query": "What property determines the frequency of failed actions?", "truth_top_match": "automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics.failed_actions_frequency", "top_k_matches": ["automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics.failed_actions_frequency", "automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics.successful_actions_frequency", "automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics.extra_action_frequency", "automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics.action_success_rate", "automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics.total_successful_actions", "automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics.total_extra_actions", "automata.tests.unit.task.test_task.test_status_setter", "automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics.total_actions", "automata.tests.unit.agent_eval.test_agent_evaluation_harness_and_metrics.test_evaluation_harness_and_metrics", "automata.context_providers.symbol_synchronization_context.SymbolProviderSynchronizationContext.__init__"], "k": 20}
{"task_id": "ContextCodeRetrieval/509", "query": "What enumeration lists the environment modes for tasks?", "truth_top_match": "automata.tasks.task_environment.EnvironmentMode", "top_k_matches": ["automata.tasks.task_environment.EnvironmentMode", "automata.tasks.task_base.TaskEnvironment", "automata.tasks.task_environment.AutomataTaskEnvironment", "automata.tasks.task_base.TaskStatus", "automata.tasks.task_environment.AutomataTaskEnvironment.setup", "automata.tests.conftest.task_environment", "automata.tests.regression.test_agent_end_to_end.automata_setup", "automata.tasks.task_base.TaskEnvironment.setup", "automata.tasks.task_base.TaskEnvironment.validate", "automata.tests.unit.task.test_task.test_setup_environment"], "k": 20}
{"task_id": "ContextCodeRetrieval/510", "query": "What method is used in SymbolEmbeddingHandler to get the sorted supported symbols?", "truth_top_match": "automata.symbol_embedding.symbol_embedding_handler.SymbolEmbeddingHandler._get_sorted_supported_symbols", "top_k_matches": ["automata.symbol_embedding.symbol_embedding_handler.SymbolEmbeddingHandler._get_sorted_supported_symbols", "automata.symbol_embedding.symbol_embedding_handler.SymbolEmbeddingHandler", "automata.symbol.symbol_base.ISymbolProvider.get_sorted_supported_symbols", "automata.symbol.graph.symbol_graph.SymbolGraph._get_sorted_supported_symbols", "automata.symbol.symbol_base.ISymbolProvider._get_sorted_supported_symbols", "automata.symbol_embedding.symbol_embedding_handler.SymbolEmbeddingHandler.get_all_ordered_embeddings", "automata.context_providers.symbol_synchronization_context.SymbolProviderRegistry.get_sorted_supported_symbols", "automata.symbol.graph.symbol_navigator.SymbolGraphNavigator.get_sorted_supported_symbols", "automata.experimental.memory_store.symbol_doc_embedding_handler.SymbolDocEmbeddingHandler", "automata.symbol.symbol_base.ISymbolProvider"], "k": 20}
{"task_id": "ContextCodeRetrieval/511", "query": "How to check if a specific key is present in the ChromaVectorDatabase?", "truth_top_match": "automata.core.base.database.vector_database.ChromaVectorDatabase.contains", "top_k_matches": ["automata.core.base.database.vector_database.ChromaVectorDatabase", "automata.tests.unit.chroma.test_chroma_vector.test_vector_initialization", "automata.tests.unit.chroma.test_chroma_vector.test_contains", "automata.tests.unit.chroma.test_chroma_vector.test_clear", "automata.symbol_embedding.vector_databases.ChromaSymbolEmbeddingVectorDatabase", "automata.tests.unit.chroma.test_chroma_vector.test_delete_single_symbol", "automata.tests.unit.chroma.test_chroma_vector.test_update_database", "automata.tests.unit.chroma.test_chroma_vector.test_size", "automata.tests.unit.chroma.test_chroma_vector.test_add_duplicate_symbol", "automata.tests.unit.chroma.test_chroma_vector.test_add_single_symbol_persistent"], "k": 20}
{"task_id": "ContextCodeRetrieval/512", "query": "Which class represents an exception for when an unknown tool type is provided?", "truth_top_match": "automata.tools.tool_error.UnknownToolError", "top_k_matches": ["automata.tools.tool_error.UnknownToolError", "automata.tools.tool_base.Tool", "automata.tools.tool_error.UnknownToolError.__init__", "automata.tools.tool_executor.ToolExecution", "automata.agent.openai_agent.OpenAIAgentToolkitBuilder.can_handle", "automata.tools.agent_tool_factory.AgentToolFactory", "automata.agent.openai_agent.OpenAIAgentToolkitBuilder", "automata.eval.tool.tool_eval.ToolEvalResult", "automata.tests.conftest.TestTool", "automata.tools.agent_tool_factory.AgentToolFactory.create_tools_from_builder"], "k": 20}
{"task_id": "ContextCodeRetrieval/513", "query": "What base class represents enums for paths?", "truth_top_match": "automata.config.config_base.PathEnum", "top_k_matches": ["automata.config.config_base.PathEnum", "automata.config.config_base.EmbeddingDataCategory", "automata.config.config_base.ConfigCategory", "automata.config.config_base.SerializedDataCategory", "automata.config.config_base.InstructionConfigVersion", "automata.config.config_base.LLMProvider", "automata.config.config_base.AgentConfigName", "automata.experimental.code_parsers.py.context_processing.context_retriever.ContextComponent", "automata.symbol.graph.symbol_graph_types.SymbolGraphType", "automata.symbol.symbol_base.SymbolDescriptor.PyKind"], "k": 20}
{"task_id": "ContextCodeRetrieval/514", "query": "Which method sets the model for the Automata OpenAI Agent configuration builder?", "truth_top_match": "automata.config.openai_config.OpenAIAutomataAgentConfigBuilder.with_model", "top_k_matches": ["automata.config.config_base.AgentConfigBuilder.with_model", "automata.config.openai_config.OpenAIAutomataAgentConfigBuilder", "automata.tests.unit.automata_agent.test_automata_agent_builder.test_builder_provided_parameters_override_defaults", "automata.tests.unit.automata_agent.test_automata_agent_builder.test_builder_creates_proper_instance", "automata.tests.unit.automata_agent.test_automata_agent_builder.test_builder_default_config", "automata.config.openai_config.OpenAIAutomataAgentConfig", "automata.tests.unit.automata_agent.test_automata_agent_builder.test_builder_accepts_all_fields", "automata.config.openai_config.OpenAIAutomataAgentConfigBuilder.with_model", "automata.tests.conftest.automata_agent_config_builder", "automata.tests.conftest.automata_agent"], "k": 20}
{"task_id": "ContextCodeRetrieval/515", "query": "What abstract method is used to update a list of entries in VectorDatabaseProvider?", "truth_top_match": "automata.core.base.database.vector_database.VectorDatabaseProvider.batch_update", "top_k_matches": ["automata.core.base.database.vector_database.VectorDatabaseProvider", "automata.core.base.database.vector_database.VectorDatabaseProvider.batch_update", "automata.core.base.database.vector_database.JSONVectorDatabase", "automata.core.base.database.vector_database.ChromaVectorDatabase", "automata.core.base.database.vector_database.ChromaVectorDatabase.batch_update", "automata.tests.unit.chroma.test_chroma_vector.test_update_database", "automata.symbol_embedding.vector_databases.ChromaSymbolEmbeddingVectorDatabase.batch_update", "automata.core.base.database.vector_database.VectorDatabaseProvider.batch_add", "automata.llm.llm_base.LLMConversationDatabaseProvider", "automata.core.base.database.vector_database.VectorDatabaseProvider.update_entry"], "k": 20}
{"task_id": "ContextCodeRetrieval/516", "query": "Which class creates a default formatter for the Automata configuration?", "truth_top_match": "automata.config.formatter.TemplateFormatter", "top_k_matches": ["automata.config.formatter.TemplateFormatter", "automata.config.openai_config.OpenAIAutomataAgentConfig", "automata.tests.unit.automata_agent.test_automata_agent_builder.test_builder_default_config", "automata.tests.conftest.automata_agent", "automata.tests.unit.automata_agent.test_automata_agent.test_build_initial_messages", "automata.config.openai_config.OpenAIAutomataAgentConfigBuilder", "automata.config.formatter.TemplateFormatter.create_default_formatter", "automata.tests.unit.automata_agent.test_automata_agent_builder.test_builder_creates_proper_instance", "automata.tests.unit.automata_agent.test_automata_agent_builder.test_builder_accepts_all_fields", "automata.tests.conftest.automata_agent_config_builder"], "k": 20}
{"task_id": "ContextCodeRetrieval/517", "query": "How does the PyDocWriter generate a module-level summary?", "truth_top_match": "automata.code_writers.py.py_doc_writer.PyDocWriter.generate_module_summary", "top_k_matches": ["automata.code_writers.py.py_doc_writer.PyDocWriter", "automata.code_writers.py.py_doc_writer.PyDocWriter.generate_module_summary", "automata.tests.unit.code_writers.test_py_doc_writer.test_generate_module_summary", "automata.experimental.symbol_embedding.symbol_doc_embedding_builder.SymbolDocEmbeddingBuilder._build_class_document_summary", "automata.tests.unit.code_writers.test_py_writer.test_write_and_retrieve_mock_code", "automata.tests.unit.code_writers.test_py_writer.MockCodeGenerator.generate_code", "automata.code_parsers.py.py_reader.PyReader.get_docstring", "automata.tests.unit.code_writers.test_py_writer.test_reduce_module_remove_function", "automata.tools.builders.py_reader_builder.PyReaderToolkitBuilder._run_indexer_retrieve_docstring", "automata.code_writers.py.py_code_writer.PyCodeWriter"], "k": 20}
{"task_id": "ContextCodeRetrieval/518", "query": "What class is raised when the agent fails to produce a result?", "truth_top_match": "automata.agent.error.AgentResultError", "top_k_matches": ["automata.agent.error.AgentResultError", "automata.agent.error.AgentGeneralError", "automata.agent.error.AgentDatabaseError", "automata.agent.error.AgentStopIterationError", "automata.eval.eval_error.EvalExecutionError", "automata.agent.openai_agent.OpenAIAutomataAgent", "automata.agent.error.AgentMaxIterError", "automata.agent.agent.Agent", "automata.tasks.task_error.TaskStateError", "automata.eval.tool.tool_eval_harness.EvalExecutionError"], "k": 20}
{"task_id": "ContextCodeRetrieval/519", "query": "Which abstract method is used to setup the Agent before running?", "truth_top_match": "automata.agent.agent.Agent._setup", "top_k_matches": ["automata.agent.agent.Agent._setup", "automata.config.openai_config.OpenAIAutomataAgentConfig.setup", "automata.agent.openai_agent.OpenAIAutomataAgent._setup", "automata.agent.agent.Agent", "automata.core.run_handlers.run_setup", "automata.config.config_base.AgentConfig.setup", "automata.config.config_base.AgentConfig", "automata.tests.conftest.setup", "automata.tests.regression.test_agent_end_to_end.automata_setup", "automata.tasks.task_base.TaskEnvironment.setup"], "k": 20}
{"task_id": "ContextCodeRetrieval/520", "query": "How are the search results formatted in AutoifiedSearchToolkitBuilder?", "truth_top_match": "automata.experimental.tools.builders.agentified_search_builder.AgentifiedSearchToolkitBuilder._get_formatted_search_results", "top_k_matches": ["automata.experimental.tools.builders.agentified_search_builder.AgentifiedSearchToolkitBuilder", "automata.experimental.tools.builders.agentified_search_builder.AgentifiedSearchOpenAIToolkitBuilder", "automata.experimental.tools.builders.symbol_search_builder.SymbolSearchOpenAIToolkitBuilder", "automata.experimental.tools.builders.symbol_search_builder.SymbolSearchToolkitBuilder", "automata.tests.unit.agentified_search.test_agentified_search.test_get_top_matches", "automata.experimental.tools.builders.advanced_context_oracle_builder.AdvancedContextOracleToolkitBuilder", "automata.experimental.tools.builders.advanced_context_oracle_builder.AdvancedContextOracleOpenAIToolkitBuilder", "automata.experimental.tools.builders.document_oracle_builder.DocumentOracleToolkitBuilder", "automata.experimental.tools.builders.document_oracle_builder.DocumentOracleOpenAIToolkitBuilder", "automata.tests.unit.agentified_search.test_agentified_search.test_init"], "k": 20}
{"task_id": "ContextCodeRetrieval/521", "query": "What method of the AutomataTaskExecutor class executes a task with retry functionality?", "truth_top_match": "automata.tasks.task_executor.AutomataTaskExecutor.execute", "top_k_matches": ["automata.tasks.task_executor.AutomataTaskExecutor", "automata.tasks.task_executor.AutomataTaskExecutor.execute", "automata.tasks.task_executor.IAutomataTaskExecution.execute", "automata.tasks.task_executor.IAutomataTaskExecution", "automata.tests.unit.task.test_task_executor.test_execute_automata_task_success", "automata.tests.unit.task.test_task_executor.test_execute_automata_task_fail", "automata.tests.unit.task.test_task.test_status_setter", "automata.tasks.task_error.TaskStateError", "automata.tasks.task_environment.AutomataTaskEnvironment", "automata.core.run_handlers.run_with_task"], "k": 20}
{"task_id": "ContextCodeRetrieval/522", "query": "What function converts a kebab-case string to snake_case?", "truth_top_match": "automata.core.utils.convert_kebab_to_snake_case", "top_k_matches": ["automata.core.utils.convert_kebab_to_snake_case", "automata.config.config_base.PathEnum.to_path", "automata.code_writers.py.py_doc_writer.PyDocWriter.camel_to_snake", "automata.tests.unit.code_writers.test_py_doc_writer.test_camel_to_snake", "automata.config.config_base.PathEnum", "automata.tests.unit.code_writers.test_py_doc_writer.test_check_camel_case", "automata.code_writers.py.py_doc_writer.PyDocWriter.check_camel_case", "automata.tests.unit.code_writers.test_py_writer.test_create_function_source_function", "automata.tests.unit.sample_modules.sample3.my_function", "automata.tests.unit.code_writers.test_py_writer_tool.test_bootstrap_module_with_new_function"], "k": 20}
{"task_id": "ContextCodeRetrieval/523", "query": "Which abstract method in the LLMConversationDatabaseProvider class is used to save a message to the database?", "truth_top_match": "automata.llm.llm_base.LLMConversationDatabaseProvider.save_message", "top_k_matches": ["automata.llm.llm_base.LLMConversationDatabaseProvider", "automata.llm.llm_base.LLMConversationDatabaseProvider.save_message", "automata.memory_store.conversation_database_providers.OpenAIAutomataConversationDatabase.save_message", "automata.memory_store.conversation_database_providers.OpenAIAutomataConversationDatabase", "automata.llm.llm_base.LLMConversationDatabaseProvider.update", "automata.tests.unit.automata_agent.test_automata_database.test_save_message", "automata.agent.agent.Agent.set_database_provider", "automata.llm.llm_base.LLMConversation", "automata.llm.llm_base.LLMChatCompletionProvider.add_message", "automata.llm.llm_base.LLMConversation.get_latest_message"], "k": 20}
{"task_id": "ContextCodeRetrieval/524", "query": "What abstract method is used to clear all entries in VectorDatabaseProvider?", "truth_top_match": "automata.core.base.database.vector_database.VectorDatabaseProvider.clear", "top_k_matches": ["automata.core.base.database.vector_database.VectorDatabaseProvider.clear", "automata.core.base.database.vector_database.VectorDatabaseProvider", "automata.core.base.database.vector_database.ChromaVectorDatabase", "automata.core.base.database.vector_database.ChromaVectorDatabase.clear", "automata.core.base.database.vector_database.JSONVectorDatabase", "automata.tests.unit.chroma.test_chroma_vector.test_clear", "automata.context_providers.symbol_synchronization_context.SymbolProviderRegistry.reset", "automata.symbol_embedding.symbol_embedding_handler.SymbolEmbeddingHandler.__init__", "automata.llm.llm_base.LLMChatCompletionProvider.reset", "automata.symbol_embedding.vector_databases.ChromaSymbolEmbeddingVectorDatabase"], "k": 20}
{"task_id": "ContextCodeRetrieval/525", "query": "How does the toolkit perform a symbol rank search?", "truth_top_match": "automata.experimental.tools.builders.symbol_search_builder.SymbolSearchToolkitBuilder._symbol_rank_search_processor", "top_k_matches": ["automata.tests.unit.symbol.test_symbol_search.test_symbol_rank_search", "automata.tests.unit.symbol.test_symbol_search_tool.test_symbol_rank_search", "automata.experimental.code_parsers.py.context_processing.context_handler.PyContextHandler.get_symbol_rank_matches", "automata.experimental.tools.builders.symbol_search_builder.SymbolSearchToolkitBuilder._symbol_rank_search_processor", "automata.experimental.search.symbol_search.SymbolSearch.get_symbol_rank_results", "automata.experimental.search.symbol_search.SymbolSearch", "automata.experimental.tools.builders.symbol_search_builder.SymbolSearchToolkitBuilder", "automata.tests.regression.test_symbol_searcher_regression.test_symbol_rank_search_on_symbol", "automata.experimental.search.symbol_rank.SymbolRank", "automata.eval.tool.search_eval.SymbolSearchEval"], "k": 20}
{"task_id": "ContextCodeRetrieval/526", "query": "What is the purpose of the 'prompt_format' property in the OpenAIFunction class?", "truth_top_match": "automata.llm.providers.openai_llm.OpenAIFunction.prompt_format", "top_k_matches": ["automata.llm.providers.openai_llm.OpenAIFunction.prompt_format", "automata.llm.providers.openai_llm.OpenAIFunction", "automata.agent.openai_agent.OpenAIAutomataAgent.functions", "automata.llm.providers.openai_llm.OpenAITool.__init__", "automata.eval.agent.openai_function_eval.OpenAIFunctionEval.__repr__", "automata.eval.agent.openai_function_eval.OpenAIFunctionCallAction.__repr__", "automata.tests.unit.agent_eval.conftest.mock_openai_response_with_function_completion_message_1", "automata.eval.agent.openai_function_eval.OpenAIFunctionCallAction", "automata.eval.agent.openai_function_eval.OpenAIFunctionCallAction.to_payload", "automata.llm.providers.openai_llm.OpenAITool"], "k": 20}
{"task_id": "ContextCodeRetrieval/527", "query": "What method is used to convert a SymbolSearchAction into a `Payload`?", "truth_top_match": "automata.eval.tool.search_eval.SymbolSearchAction.to_payload", "top_k_matches": ["automata.eval.tool.search_eval.SymbolSearchAction.to_payload", "automata.eval.tool.search_eval.SymbolSearchAction.from_payload", "automata.eval.tool.search_eval.SymbolSearchAction", "automata.tests.unit.tool_eval.test_symbol_search_eval.test_symbol_search_eval_result_from_payload", "automata.tests.unit.tool_eval.test_symbol_search_eval.test_symbol_search_action", "automata.eval.tool.search_eval.SymbolSearchEvalResult.from_payload", "automata.tests.unit.tool_eval.test_symbol_search_eval.test_symbol_search_eval_result", "automata.eval.eval_base.Action.to_payload", "automata.tests.unit.tool_eval.test_symbol_search_eval.test_symbol_search_eval_extract_action", "automata.eval.tool.search_eval.SymbolSearchEvalResult"], "k": 20}
{"task_id": "ContextCodeRetrieval/528", "query": "What abstract base class represents different types of vector database providers?", "truth_top_match": "automata.core.base.database.vector_database.VectorDatabaseProvider", "top_k_matches": ["automata.core.base.database.vector_database.VectorDatabaseProvider", "automata.core.base.database.vector_database.ChromaVectorDatabase", "automata.core.base.database.vector_database.JSONVectorDatabase", "automata.embedding.embedding_base.EmbeddingVectorProvider", "automata.symbol_embedding.vector_databases.ChromaSymbolEmbeddingVectorDatabase", "automata.core.base.database.relational_database.RelationalDatabase", "automata.symbol_embedding.vector_databases.JSONSymbolEmbeddingVectorDatabase", "automata.symbol_embedding.symbol_embedding_handler.SymbolEmbeddingHandler.__init__", "automata.llm.llm_base.LLMConversationDatabaseProvider", "automata.symbol_embedding.symbol_embedding_handler.SymbolEmbeddingHandler"], "k": 20}
{"task_id": "ContextCodeRetrieval/529", "query": "How is a code snippet parsed in CodeWritingEval?", "truth_top_match": "automata.eval.agent.code_writing_eval.CodeWritingEval._parse_code_snippet", "top_k_matches": ["automata.eval.agent.code_writing_eval.CodeWritingEval", "automata.eval.agent.code_writing_eval.CodeWritingEval._parse_code_snippet", "automata.eval.agent.code_writing_eval.CodeWritingAction", "automata.tests.conftest.code_evaluator", "automata.eval.agent.code_writing_eval.CodeWritingAction._extract_snippet", "automata.experimental.tools.builders.py_interpreter.PyInterpreter.__init__", "automata.tests.unit.context_retriever.test_context_retriever.test_source_code_2", "automata.tests.unit.context_retriever.test_context_retriever.test_source_code", "automata.code_parsers.py.py_reader.PyReader", "automata.tests.unit.agent_eval.test_agent_eval_actions_results.test_generate_code_writing_eval_result_match"], "k": 20}
{"task_id": "ContextCodeRetrieval/530", "query": "How can an EvalResult instance be created from a `Payload`?", "truth_top_match": "automata.eval.eval_base.EvalResult.from_payload", "top_k_matches": ["automata.eval.eval_base.EvalResult.from_payload", "automata.eval.agent.agent_eval.AgentEvalResult.from_payload", "automata.eval.tool.search_eval.SymbolSearchEvalResult.from_payload", "automata.eval.agent.agent_eval.AgentEvalResult", "automata.eval.eval_base.EvalResult", "automata.eval.eval_base.EvalResult.to_payload", "automata.eval.tool.search_eval.SymbolSearchEvalResult.to_payload", "automata.eval.tool.search_eval.SymbolSearchEvalResult", "automata.tests.unit.tool_eval.test_symbol_search_eval.test_symbol_search_eval_result_from_payload", "automata.eval.agent.code_writing_eval.CodeWritingAction.from_payload"], "k": 20}
{"task_id": "ContextCodeRetrieval/531", "query": "What concrete class represents a vector database that uses Chroma?", "truth_top_match": "automata.core.base.database.vector_database.ChromaVectorDatabase", "top_k_matches": ["automata.core.base.database.vector_database.ChromaVectorDatabase", "automata.symbol_embedding.vector_databases.ChromaSymbolEmbeddingVectorDatabase", "automata.tests.unit.chroma.test_chroma_vector.test_vector_initialization", "automata.tests.conftest.chroma_vector_db", "automata.core.base.database.vector_database.JSONVectorDatabase", "automata.tests.unit.symbol_embedding.test_symbol_embedding.mock_db", "automata.core.base.database.vector_database.VectorDatabaseProvider", "automata.core.base.database.vector_database.ChromaVectorDatabase.load", "automata.tests.unit.chroma.test_chroma_vector.test_contains", "automata.tests.unit.chroma.test_chroma_vector.test_update_database"], "k": 20}
{"task_id": "ContextCodeRetrieval/532", "query": "Which function in the module checks if a method is private?", "truth_top_match": "automata.experimental.code_parsers.py.context_processing.context_utils.is_private_method", "top_k_matches": ["automata.experimental.code_parsers.py.context_processing.context_utils.is_private_method", "automata.tests.unit.context_retriever.test_context_retriever.testis_private_method", "automata.tests.unit.context_retriever.test_context_retriever.test_dunder_not_private", "automata.tests.unit.context_retriever.test_context_retriever.test_dunder_is_not_private", "automata.tests.unit.code_writers.test_py_writer.test_create_function_source_function", "automata.tests.unit.code_writers.test_py_writer.MockCodeGenerator._check_module_obj", "automata.code_parsers.py.dotpath_map.DotPathMap.contains_dotpath", "automata.tests.unit.code_writers.test_py_writer.test_reduce_module_remove_function", "automata.tests.unit.code_writers.test_py_writer.test_create_class_with_multiple_methods_properties_attributes", "automata.symbol.symbol_base.Symbol.is_protobuf"], "k": 20}
{"task_id": "ContextCodeRetrieval/533", "query": "Which method from `SymbolCodeEmbeddingBuilder` builds the embedding for a symbol's source code?", "truth_top_match": "automata.symbol_embedding.symbol_embedding_builders.SymbolCodeEmbeddingBuilder.build", "top_k_matches": ["automata.symbol_embedding.symbol_embedding_builders.SymbolCodeEmbeddingBuilder", "automata.symbol_embedding.symbol_embedding_builders.SymbolCodeEmbeddingBuilder.build", "automata.experimental.symbol_embedding.symbol_doc_embedding_builder.SymbolDocEmbeddingBuilder.build", "automata.experimental.symbol_embedding.symbol_doc_embedding_builder.SymbolDocEmbeddingBuilder.build_non_class", "automata.symbol_embedding.symbol_embedding_builders.SymbolCodeEmbeddingBuilder.batch_build", "automata.experimental.symbol_embedding.symbol_doc_embedding_builder.SymbolDocEmbeddingBuilder", "automata.experimental.memory_store.symbol_doc_embedding_handler.SymbolDocEmbeddingHandler._create_new_embedding", "automata.memory_store.symbol_code_embedding_handler.SymbolCodeEmbeddingHandler", "automata.embedding.embedding_base.EmbeddingBuilder.build", "automata.embedding.embedding_base.EmbeddingBuilder.fetch_embedding_source_code"], "k": 20}
{"task_id": "ContextCodeRetrieval/534", "query": "What method does the CustomLogger class use to log CLI output messages?", "truth_top_match": "automata.cli.cli_output_logger.CustomLogger.cli_output", "top_k_matches": ["automata.cli.cli_output_logger.CustomLogger", "automata.cli.env_operations.log_cli_output", "automata.cli.cli_output_logger.CustomLogger.cli_output", "automata.cli.cli_utils.get_custom_style", "automata.tests.unit.cli.test_cli_commands.test_cli_run_doc_post_process", "automata.tests.unit.cli.test_cli_commands.mock_logger", "automata.tests.unit.cli.test_cli_utils.mock_logger", "automata.tests.unit.cli.test_cli_commands.test_cli_run_code_embedding", "automata.tasks.automata_task.AutomataTask.initialize_logging", "automata.tests.unit.cli.test_cli_commands.test_cli_run_doc_embedding"], "k": 20}
{"task_id": "ContextCodeRetrieval/535", "query": "What function is used to install Node Version Manager and a specific Node.js version?", "truth_top_match": "automata.cli.install_indexing.install_nvm_and_nodejs", "top_k_matches": ["automata.cli.install_indexing.install_nvm_and_nodejs", "automata.cli.install_indexing.install_indexing", "automata.cli.commands.install_indexing", "automata.core.ast_handlers.ImportRemover", "automata.tests.unit.code_writers.test_py_writer_tool.test_bootstrap_module_with_new_function", "automata.cli.commands.configure", "automata.tests.unit.ast_utils.test_ast_utils.test_get_node_without_imports", "automata.tests.unit.ast_utils.test_ast_utils_bounding_box.test_fetch_bounding_box_with_function_node", "automata.tests.unit.cli.test_cli_commands.test_cli_run_doc_post_process", "automata.tests.unit.code_writers.test_py_writer_tool.test_extend_module_with_new_function"], "k": 20}
{"task_id": "ContextCodeRetrieval/536", "query": "How can we add a new module with its dotpath to the PyModuleLoader map?", "truth_top_match": "automata.singletons.py_module_loader.PyModuleLoader.put_module", "top_k_matches": ["automata.singletons.py_module_loader.PyModuleLoader.put_module", "automata.code_parsers.py.dotpath_map.DotPathMap.put_module", "automata.singletons.py_module_loader.PyModuleLoader.delete_module", "automata.tests.unit.module_loader.test_module_loader.test_dotpath_map", "automata.singletons.py_module_loader.PyModuleLoader", "automata.code_parsers.py.dotpath_map.DotPathMap.contains_dotpath", "automata.singletons.py_module_loader.PyModuleLoader.fetch_ast_module", "automata.singletons.py_module_loader.PyModuleLoader._load_all_modules", "automata.code_parsers.py.dotpath_map.DotPathMap.get_module_fpath_by_dotpath", "automata.code_parsers.py.dotpath_map.DotPathMap"], "k": 20}
{"task_id": "ContextCodeRetrieval/537", "query": "What function obtains the missing symbols?", "truth_top_match": "automata.experimental.scripts.run_update_tool_eval.get_missing_symbols", "top_k_matches": ["automata.experimental.scripts.run_update_tool_eval.process_missing_symbols", "automata.experimental.scripts.run_update_tool_eval.get_missing_symbols", "automata.tests.unit.symbol.test_symbol_utils.test_get_rankable_symbols", "automata.experimental.tools.builders.symbol_search_builder.SymbolSearchToolkitBuilder._retrieve_source_code_by_symbol_processor", "automata.tests.unit.tool_eval.test_symbol_search_eval.test_symbol_search_eval_extract_action", "automata.experimental.scripts.run_update_tool_eval.process_symbol_graph", "automata.tests.conftest.symbols", "automata.symbol.symbol_parser._SymbolParser.peek_next", "automata.tests.unit.symbol.test_symbol_similarity.test_get_nearest_symbols_for_query", "automata.symbol.graph.symbol_navigator.process_symbol_bounds"], "k": 20}
{"task_id": "ContextCodeRetrieval/538", "query": "What does the 'install_indexing' command do?", "truth_top_match": "automata.cli.commands.install_indexing", "top_k_matches": ["automata.cli.commands.install_indexing", "automata.cli.install_indexing.install_indexing", "automata.cli.install_indexing.generate_local_indices", "automata.cli.commands.run_doc_embedding", "automata.cli.scripts.run_doc_post_process.main", "automata.tools.builders.py_reader_builder.PyReaderToolkitBuilder.build", "automata.code_writers.py.py_doc_writer.PyDocWriter.generate_index_files", "automata.tests.unit.cli.test_cli_commands.test_cli_run_doc_embedding", "automata.cli.scripts.run_doc_embedding.main", "automata.cli.install_indexing.install_nvm_and_nodejs"], "k": 20}
{"task_id": "ContextCodeRetrieval/539", "query": "Which function in the module processes and prints information about a specified method?", "truth_top_match": "automata.experimental.code_parsers.py.context_processing.context_utils.process_method", "top_k_matches": ["automata.experimental.code_parsers.py.context_processing.context_utils.process_method", "automata.tests.unit.context_retriever.test_context_retriever.testprocess_method", "automata.code_parsers.py.py_reader.PyReader.get_docstring", "automata.tests.unit.sample_modules.sample3.MyClass.my_method", "automata.tests.unit.code_readers.test_py_reader.test_get_docstring_function", "automata.tests.unit.code_writers.test_py_writer_tool.test_bootstrap_module_with_new_function", "automata.tests.unit.sample_modules.sample3.MyClass", "automata.tests.unit.sample_modules.sample.Person.say_hello", "automata.tests.unit.context_retriever.test_context_retriever.testget_all_methods", "automata.eval.agent.openai_function_eval.OpenAIFunctionCallAction.__repr__"], "k": 20}
{"task_id": "ContextCodeRetrieval/540", "query": "How to clone a repository to a local path using GitHubClient class method?", "truth_top_match": "automata.singletons.github_client.GitHubClient.clone_repository", "top_k_matches": ["automata.singletons.github_client.GitHubClient.clone_repository", "automata.tests.unit.singletons.test_singletons_github_client.test_clone_repository", "automata.singletons.github_client.RepositoryClient.clone_repository", "automata.tests.unit.singletons.test_singletons_github_client.test_checkout_branch", "automata.singletons.github_client.RepositoryClient", "automata.tests.unit.singletons.test_singletons_github_client.test_stage_all_changes", "automata.tests.unit.singletons.test_singletons_github_client.test_commit_and_push_changes", "automata.singletons.github_client.GitHubClient", "automata.tests.unit.singletons.test_singletons_github_client.test_create_branch", "automata.singletons.github_client.GitHubClient.stage_all_changes"], "k": 20}
{"task_id": "ContextCodeRetrieval/541", "query": "What abstract property gets the messages of a conversation?", "truth_top_match": "automata.llm.llm_base.LLMConversation.messages", "top_k_matches": ["automata.llm.llm_base.LLMConversation.messages", "automata.agent.agent.Agent.conversation", "automata.llm.llm_base.LLMConversation", "automata.agent.openai_agent.OpenAIAutomataAgent.conversation", "automata.llm.providers.openai_llm.OpenAIConversation.messages", "automata.agent.openai_agent.OpenAIAutomataAgent.agent_responses", "automata.llm.llm_base.LLMConversation.get_latest_message", "automata.agent.agent.Agent.agent_responses", "automata.llm.llm_base.LLMConversation.__len__", "automata.llm.llm_base.LLMConversation.get_messages_for_next_completion"], "k": 20}
{"task_id": "ContextCodeRetrieval/542", "query": "What function serves as the main event loop for updating tool evaluations?", "truth_top_match": "automata.experimental.scripts.run_update_tool_eval.main", "top_k_matches": ["automata.experimental.scripts.run_update_tool_eval.main", "automata.eval.tool.tool_eval_harness.ToolEvaluationHarness", "automata.cli.commands.run_tool_eval", "automata.eval.tool.tool_eval_harness.ToolEvaluationHarness.__init__", "automata.tests.unit.tool_eval.test_tool_eval_harness_and_metrics.test_tool_evaluation_harness_and_metrics", "automata.eval.tool.tool_eval.ToolEval", "automata.eval.tool.tool_eval_harness.ToolEvaluationHarness.evaluate", "automata.eval.tool.tool_eval_metrics.ToolEvaluationMetrics", "automata.cli.scripts.run_tool_eval.run_eval_harness", "automata.cli.commands.run_agent_eval"], "k": 20}
{"task_id": "ContextCodeRetrieval/543", "query": "What method is used to build the tools for the interpreter in PyInterpreterToolkitBuilder?", "truth_top_match": "automata.experimental.tools.builders.py_interpreter.PyInterpreterToolkitBuilder.build", "top_k_matches": ["automata.experimental.tools.builders.py_interpreter.PyInterpreterToolkitBuilder", "automata.experimental.tools.builders.py_interpreter.PyInterpreterOpenAIToolkitBuilder", "automata.experimental.tools.builders.py_interpreter.PyInterpreterToolkitBuilder.build", "automata.tools.builders.py_reader_builder.PyReaderToolkitBuilder", "automata.tools.builders.py_writer_builder.PyCodeWriterOpenAIToolkitBuilder", "automata.experimental.tools.builders.py_interpreter.PyInterpreterOpenAIToolkitBuilder.build_for_open_ai", "automata.experimental.tools.builders.document_oracle_builder.DocumentOracleToolkitBuilder.build", "automata.tools.builders.py_reader_builder.PyReaderOpenAIToolkitBuilder", "automata.tools.builders.py_writer_builder.PyCodeWriterToolkitBuilder", "automata.experimental.tools.builders.symbol_search_builder.SymbolSearchToolkitBuilder"], "k": 20}
{"task_id": "ContextCodeRetrieval/544", "query": "What class is used to calculate the similarity of embeddings?", "truth_top_match": "automata.embedding.embedding_base.EmbeddingSimilarityCalculator", "top_k_matches": ["automata.embedding.embedding_base.EmbeddingSimilarityCalculator", "automata.singletons.dependency_factory.DependencyFactory.create_embedding_similarity_calculator", "automata.tests.unit.context_oracle.test_context_oracle_tool.embedding_similarity_calculator", "automata.tests.unit.context_oracle.test_document_oracle_tool.embedding_similarity_calculator", "automata.embedding.embedding_base.EmbeddingSimilarityCalculator._calculate_embedding_similarity", "automata.embedding.embedding_base.Embedding", "automata.embedding.embedding_base.EmbeddingNormType", "automata.llm.providers.openai_llm.OpenAIEmbeddingProvider", "automata.symbol_embedding.symbol_embedding_base.SymbolEmbedding", "automata.embedding.embedding_base.EmbeddingVectorProvider"], "k": 20}
{"task_id": "ContextCodeRetrieval/545", "query": "How does the vector database provider get a batch of specific entries?", "truth_top_match": "automata.core.base.database.vector_database.VectorDatabaseProvider.batch_get", "top_k_matches": ["automata.core.base.database.vector_database.JSONVectorDatabase", "automata.symbol_embedding.vector_databases.ChromaSymbolEmbeddingVectorDatabase", "automata.core.base.database.vector_database.ChromaVectorDatabase", "automata.core.base.database.vector_database.VectorDatabaseProvider", "automata.core.base.database.vector_database.VectorDatabaseProvider.batch_add", "automata.core.base.database.vector_database.ChromaVectorDatabase.batch_update", "automata.symbol_embedding.vector_databases.ChromaSymbolEmbeddingVectorDatabase.batch_update", "automata.core.base.database.vector_database.VectorDatabaseProvider.batch_get", "automata.tests.unit.chroma.test_chroma_vector.test_batch_add_and_remove", "automata.tests.unit.chroma.test_chroma_vector.test_update_database"], "k": 20}
{"task_id": "ContextCodeRetrieval/546", "query": "Which method of the Python context handler gets the top N symbols according to their ranks?", "truth_top_match": "automata.experimental.code_parsers.py.context_processing.context_handler.PyContextHandler.get_symbol_rank_matches", "top_k_matches": ["automata.experimental.search.symbol_rank.SymbolRank.get_top_symbols", "automata.experimental.code_parsers.py.context_processing.context_handler.PyContextHandler.get_symbol_rank_matches", "automata.experimental.code_parsers.py.context_processing.context_handler.PyContextHandler", "automata.experimental.tools.builders.symbol_search_builder.SymbolSearchToolkitBuilder._symbol_rank_search_processor", "automata.experimental.search.symbol_rank.SymbolRank", "automata.experimental.code_parsers.py.context_processing.context_handler.PyContextHandlerConfig", "automata.tests.unit.context_retriever.test_context_handler.context_handler", "automata.tests.unit.symbol.test_symbol_utils.test_get_rankable_symbols", "automata.experimental.tools.builders.symbol_search_builder.SymbolSearchToolkitBuilder._symbol_references_processor", "automata.experimental.search.symbol_search.SymbolSearch.symbol_rank"], "k": 20}
{"task_id": "ContextCodeRetrieval/547", "query": "Which function contains the JSON schema for the YAML configuration files?", "truth_top_match": "automata.cli.scripts.run_agent_config_validation.yaml_schema", "top_k_matches": ["automata.cli.scripts.run_agent_config_validation.yaml_schema", "automata.eval.tool.tool_eval_harness.ToolEvalSetLoader", "automata.eval.tool.tool_eval_harness.ToolEvalSetLoader.__init__", "automata.cli.scripts.run_agent_config_validation.test_yaml_validation", "automata.eval.agent.agent_eval_harness.AgentEvalSetLoader.load_json", "automata.cli.scripts.run_agent_config_validation.test_yaml_compatibility", "automata.tests.unit.code_writers.test_py_writer.test_create_function_source_function", "automata.config.config_base.InstructionConfigVersion", "automata.eval.tool.tool_eval_harness.ToolEvalSetLoader.load_json", "automata.symbol_embedding.vector_databases.JSONSymbolEmbeddingVectorDatabase"], "k": 20}
{"task_id": "ContextCodeRetrieval/548", "query": "How are the total number of actions calculated?", "truth_top_match": "automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics.total_actions", "top_k_matches": ["automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics.total_actions", "automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics.total_extra_actions", "automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics.total_successful_actions", "automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics.extra_action_frequency", "automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics.successful_actions_frequency", "automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics.action_success_rate", "automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics.failed_actions_frequency", "automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics.__str__", "automata.eval.tool.tool_eval.ToolEval._filter_actions", "automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics.total_full_matches"], "k": 20}
{"task_id": "ContextCodeRetrieval/549", "query": "Which method performs an agentified similarity based search of symbols based on the query string?", "truth_top_match": "automata.experimental.tools.builders.agentified_search_builder.AgentifiedSearchToolkitBuilder._get_top_matches", "top_k_matches": ["automata.experimental.tools.builders.agentified_search_builder.AgentifiedSearchToolkitBuilder._get_top_matches", "automata.experimental.tools.builders.symbol_search_builder.SymbolSearchToolkitBuilder._symbol_agent_search_processor", "automata.experimental.tools.builders.agentified_search_builder.AgentifiedSearchToolkitBuilder._agent_selected_best_match", "automata.experimental.tools.builders.symbol_search_builder.SymbolSearchToolkitBuilder._symbol_code_similarity_search_processor", "automata.experimental.search.symbol_search.SymbolSearch.get_symbol_code_similarity_results", "automata.experimental.tools.builders.symbol_search_builder.SymbolSearchToolkitBuilder", "automata.experimental.tools.builders.agentified_search_builder.AgentifiedSearchToolkitBuilder", "automata.experimental.tools.builders.agentified_search_builder.AgentifiedSearchToolkitBuilder._get_code_for_best_match", "automata.tests.unit.agentified_search.test_agentified_search.test_get_top_matches", "automata.experimental.search.symbol_search.SymbolSearch.get_symbol_rank_results"], "k": 20}
{"task_id": "ContextCodeRetrieval/550", "query": "What's the purpose of 'build_dependencies_for_tools' method in DependencyFactory?", "truth_top_match": "automata.singletons.dependency_factory.DependencyFactory.build_dependencies_for_tools", "top_k_matches": ["automata.singletons.dependency_factory.DependencyFactory", "automata.tests.regression.test_dependencies.test_build_automata_tools", "automata.singletons.dependency_factory.DependencyFactory.build_dependencies_for_tools", "automata.experimental.tools.builders.advanced_context_oracle_builder.AdvancedContextOracleToolkitBuilder.build", "automata.experimental.tools.builders.document_oracle_builder.DocumentOracleToolkitBuilder.build", "automata.experimental.tools.builders.agentified_search_builder.AgentifiedSearchToolkitBuilder.build", "automata.tools.agent_tool_factory.AgentToolFactory", "automata.experimental.tools.builders.advanced_context_oracle_builder.AdvancedContextOracleOpenAIToolkitBuilder.build_for_open_ai", "automata.tests.unit.symbol.test_symbol_search.test_build", "automata.tests.unit.symbol.test_symbol_search_tool.test_build"], "k": 20}
{"task_id": "ContextCodeRetrieval/551", "query": "Which abstract method in AgentConfig is used to set up the configuration?", "truth_top_match": "automata.config.config_base.AgentConfig.setup", "top_k_matches": ["automata.agent.agent.Agent._setup", "automata.config.config_base.AgentConfig", "automata.config.openai_config.OpenAIAutomataAgentConfig", "automata.config.openai_config.OpenAIAutomataAgentConfig.setup", "automata.config.config_base.AgentConfig.load", "automata.config.config_base.AgentConfigBuilder", "automata.agent.openai_agent.OpenAIAutomataAgent._setup", "automata.config.config_base.AgentConfigBuilder.build", "automata.agent.agent.Agent", "automata.core.run_handlers.run_setup"], "k": 20}
{"task_id": "ContextCodeRetrieval/552", "query": "How does the PyDocWriter convert a camel case string to snake case?", "truth_top_match": "automata.code_writers.py.py_doc_writer.PyDocWriter.camel_to_snake", "top_k_matches": ["automata.tests.unit.code_writers.test_py_doc_writer.test_camel_to_snake", "automata.code_writers.py.py_doc_writer.PyDocWriter", "automata.core.utils.convert_kebab_to_snake_case", "automata.code_writers.py.py_doc_writer.PyDocWriter.camel_to_snake", "automata.tests.unit.code_writers.test_py_doc_writer.test_check_camel_case", "automata.config.config_base.PathEnum.to_path", "automata.code_parsers.py.py_reader.PyReader.get_docstring", "automata.tests.unit.code_readers.test_py_reader.test_get_docstring_from_node", "automata.tests.unit.code_writers.test_py_writer_tool.test_extend_module_with_documented_new_module", "automata.tests.unit.ast_utils.test_ast_utils.test_get_docstring_from_node_with_docstring"], "k": 20}
{"task_id": "ContextCodeRetrieval/553", "query": "What class is designed to handle the context associated to a symbol?", "truth_top_match": "automata.experimental.code_parsers.py.context_processing.context_handler.PyContextHandler", "top_k_matches": ["automata.experimental.code_parsers.py.context_processing.context_handler.PyContextHandler", "automata.context_providers.symbol_synchronization_context.SymbolProviderSynchronizationContext", "automata.symbol.symbol_base.Symbol", "automata.experimental.code_parsers.py.context_processing.context_handler.PyContextHandler.construct_symbol_context", "automata.symbol_embedding.symbol_embedding_handler.SymbolEmbeddingHandler", "automata.experimental.code_parsers.py.context_processing.context_retriever.PyContextRetriever", "automata.tests.unit.context_retriever.test_context_handler.test_construct_symbol_context_interface", "automata.experimental.code_parsers.py.context_processing.context_retriever.PyContextRetriever.process_symbol", "automata.experimental.memory_store.symbol_doc_embedding_handler.SymbolDocEmbeddingHandler", "automata.symbol.symbol_parser._SymbolParser"], "k": 20}
{"task_id": "ContextCodeRetrieval/554", "query": "What method is used to fetch an issue from the remote repository?", "truth_top_match": "automata.singletons.github_client.GitHubClient.fetch_issue", "top_k_matches": ["automata.singletons.github_client.GitHubClient.fetch_issue", "automata.tests.unit.github.test_github_client.test_fetch_issue", "automata.singletons.github_client.GitHubClient.get_open_issues", "automata.tests.unit.github.test_github_client.test_fetch_issue_not_found", "automata.tests.unit.singletons.test_singletons_github_client.test_fetch_issue", "automata.singletons.github_client.GitHubClient.create_issue_comment", "automata.singletons.github_client.GitHubClient", "automata.singletons.github_client.GitHubClient.create_issue", "automata.singletons.github_client.GitHubClient.get_open_pull_requests", "automata.singletons.github_client.GitHubClient.remove_issue_comment"], "k": 20}
{"task_id": "ContextCodeRetrieval/555", "query": "What private method tries to execute code in PyInterpreter?", "truth_top_match": "automata.experimental.tools.builders.py_interpreter.PyInterpreter._execute_code", "top_k_matches": ["automata.experimental.tools.builders.py_interpreter.PyInterpreter", "automata.experimental.tools.builders.py_interpreter.PyInterpreter._execute_code", "automata.experimental.tools.builders.py_interpreter.PyInterpreter.__init__", "automata.experimental.tools.builders.py_interpreter.PyInterpreter._attempt_execution", "automata.experimental.tools.builders.py_interpreter.PyInterpreterToolkitBuilder.__init__", "automata.tests.unit.context_retriever.test_context_retriever.testis_private_method", "automata.experimental.tools.builders.py_interpreter.PyInterpreter.__repr__", "automata.tools.builders.py_reader_builder.PyReaderToolkitBuilder._run_indexer_retrieve_code", "automata.eval.agent.code_writing_eval.CodeWritingEval._parse_code_snippet", "automata.tests.unit.context_retriever.test_context_retriever.test_source_code_2"], "k": 20}
{"task_id": "ContextCodeRetrieval/556", "query": "Which method in the SymbolCodeEmbeddingHandler class queues a Symbol for batch embedding building?", "truth_top_match": "automata.memory_store.symbol_code_embedding_handler.SymbolCodeEmbeddingHandler._queue_for_building", "top_k_matches": ["automata.memory_store.symbol_code_embedding_handler.SymbolCodeEmbeddingHandler._queue_for_building", "automata.memory_store.symbol_code_embedding_handler.SymbolCodeEmbeddingHandler", "automata.symbol_embedding.symbol_embedding_handler.SymbolEmbeddingHandler", "automata.memory_store.symbol_code_embedding_handler.SymbolCodeEmbeddingHandler.process_embedding", "automata.memory_store.symbol_code_embedding_handler.SymbolCodeEmbeddingHandler._build_and_add_embeddings", "automata.experimental.memory_store.symbol_doc_embedding_handler.SymbolDocEmbeddingHandler", "automata.symbol_embedding.symbol_embedding_builders.SymbolCodeEmbeddingBuilder", "automata.experimental.symbol_embedding.symbol_doc_embedding_builder.SymbolDocEmbeddingBuilder", "automata.experimental.memory_store.symbol_doc_embedding_handler.SymbolDocEmbeddingHandler._create_new_embedding", "automata.experimental.memory_store.symbol_doc_embedding_handler.SymbolDocEmbeddingHandler.process_embedding"], "k": 20}
{"task_id": "ContextCodeRetrieval/557", "query": "How is the graph built in the GraphBuilder class?", "truth_top_match": "automata.symbol.graph.graph_builder.GraphBuilder.build_graph", "top_k_matches": ["automata.symbol.graph.graph_builder.GraphBuilder", "automata.symbol.graph.graph_builder.GraphBuilder.__init__", "automata.symbol.graph.symbol_graph.SymbolGraph", "automata.symbol.graph.symbol_graph.SymbolGraph.__init__", "automata.symbol.graph.graph_builder.GraphBuilder.build_graph", "automata.tests.unit.symbol.test_symbol_graph_static.test_build_real_graph", "automata.tests.unit.symbol.test_symbol_graph_static.test_build_real_graph_and_subgraph", "automata.tests.unit.symbol.test_symbol_graph.test_build_real_graph", "automata.tests.unit.symbol.test_symbol_graph.test_build_real_graph_and_subgraph", "automata.symbol.graph.symbol_graph.SymbolGraph._build_default_rankable_subgraph"], "k": 20}
{"task_id": "ContextCodeRetrieval/558", "query": "How does the SymbolEmbeddingHandler get the embeddings for all symbols in the database?", "truth_top_match": "automata.symbol_embedding.symbol_embedding_handler.SymbolEmbeddingHandler.get_all_ordered_embeddings", "top_k_matches": ["automata.symbol_embedding.symbol_embedding_handler.SymbolEmbeddingHandler.get_all_ordered_embeddings", "automata.symbol_embedding.symbol_embedding_handler.SymbolEmbeddingHandler", "automata.memory_store.symbol_code_embedding_handler.SymbolCodeEmbeddingHandler", "automata.experimental.memory_store.symbol_doc_embedding_handler.SymbolDocEmbeddingHandler", "automata.symbol_embedding.symbol_embedding_handler.SymbolEmbeddingHandler.get_embeddings", "automata.cli.scripts.run_code_embedding.process_embeddings", "automata.experimental.memory_store.symbol_doc_embedding_handler.SymbolDocEmbeddingHandler.process_embedding", "automata.tests.unit.symbol_embedding.test_symbol_embedding.test_get_embedding", "automata.singletons.dependency_factory.DependencyFactory.create_symbol_doc_embedding_handler", "automata.embedding.embedding_base.EmbeddingHandler"], "k": 20}
{"task_id": "ContextCodeRetrieval/559", "query": "What method helps clean the markdown code to be executable in PyInterpreter?", "truth_top_match": "automata.experimental.tools.builders.py_interpreter.PyInterpreter._clean_markdown", "top_k_matches": ["automata.experimental.tools.builders.py_interpreter.PyInterpreter._clean_markdown", "automata.experimental.tools.builders.py_interpreter.PyInterpreter", "automata.experimental.tools.builders.py_interpreter.PyInterpreter.__init__", "automata.experimental.tools.builders.py_interpreter.PyInterpreterToolkitBuilder.__init__", "automata.tests.unit.code_writers.test_py_writer.test_write_and_retrieve_mock_code", "automata.experimental.tools.builders.py_interpreter.PyInterpreterOpenAIToolkitBuilder", "automata.tests.unit.agentified_search.test_agentified_search.test_get_code_for_best_match", "automata.experimental.tools.builders.py_interpreter.PyInterpreterToolkitBuilder.build", "automata.tests.unit.code_writers.test_py_writer.test_write_to_disk_and_format", "automata.tests.unit.context_retriever.test_context_retriever.testprocess_method"], "k": 20}
{"task_id": "ContextCodeRetrieval/560", "query": "How are the total number of partial matches calculated?", "truth_top_match": "automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics.total_partial_matches", "top_k_matches": ["automata.eval.tool.tool_eval_metrics.ToolEvaluationMetrics.total_partial_matches", "automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics.total_partial_matches", "automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics.total_full_matches", "automata.eval.tool.tool_eval_metrics.ToolEvaluationMetrics.total_full_matches", "automata.eval.tool.tool_eval_metrics.ToolEvaluationMetrics.partial_match_rate", "automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics.partial_match_rate", "automata.eval.agent.agent_eval.AgentEvalResult.is_partial_match", "automata.eval.tool.tool_eval_metrics.ToolEvaluationMetrics.full_match_rate", "automata.eval.tool.search_eval.SymbolSearchEvalResult.is_partial_match", "automata.eval.eval_base.EvalResult.is_partial_match"], "k": 20}
{"task_id": "ContextCodeRetrieval/561", "query": "What exception is raised when there's an issue with loading evaluations?", "truth_top_match": "automata.eval.eval_error.EvalLoadingError", "top_k_matches": ["automata.eval.eval_error.EvalLoadingError", "automata.eval.tool.tool_eval_harness.EvalLoadingError", "automata.eval.tool.tool_eval_harness.EvalExecutionError", "automata.eval.eval_error.EvalExecutionError", "automata.tests.unit.agent_eval.test_agent_eval_loader.test_eval_loader", "automata.cli.scripts.run_tool_eval.run_eval_harness", "automata.cli.scripts.run_agent_eval.run_eval_harness", "automata.tests.unit.agent_eval.test_agent_eval_actions_results.test_code_execution_error", "automata.eval.tool.tool_eval_harness.ToolEvalSetLoader", "automata.eval.tool.tool_eval_harness.ToolEvalSetLoader.load_json"], "k": 20}
{"task_id": "ContextCodeRetrieval/562", "query": "What property determines the frequency of extra actions?", "truth_top_match": "automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics.extra_action_frequency", "top_k_matches": ["automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics.extra_action_frequency", "automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics.total_extra_actions", "automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics.successful_actions_frequency", "automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics.failed_actions_frequency", "automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics.total_actions", "automata.tools.tool_base.Tool.Config", "automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics.action_success_rate", "automata.eval.agent.openai_function_eval.OpenAIFunctionEval.extract_action", "automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics.total_successful_actions", "automata.eval.tool.tool_eval.ToolEvalResult.__init__"], "k": 20}
{"task_id": "ContextCodeRetrieval/563", "query": "What method is used to add a message to the conversation?", "truth_top_match": "automata.llm.providers.openai_llm.OpenAIConversation.add_message", "top_k_matches": ["automata.llm.providers.openai_llm.OpenAIChatCompletionProvider.add_message", "automata.llm.providers.openai_llm.OpenAIConversation.add_message", "automata.llm.llm_base.LLMChatCompletionProvider.add_message", "automata.llm.llm_base.LLMConversation.LLMEmptyConversationError.__init__", "automata.llm.providers.openai_llm.OpenAIConversation", "automata.tests.unit.automata_agent.test_automata_database.test_save_message", "automata.tests.unit.conversation_database.test_conversation_database.test_put_message_increments_interaction_id", "automata.memory_store.conversation_database_providers.OpenAIAutomataConversationDatabase.save_message", "automata.llm.providers.openai_llm.OpenAIConversation.get_latest_message", "automata.llm.providers.openai_llm.OpenAIChatCompletionProvider"], "k": 20}
{"task_id": "ContextCodeRetrieval/564", "query": "What function finds the imports for a specified module?", "truth_top_match": "automata.core.ast_handlers.find_imports", "top_k_matches": ["automata.core.ast_handlers.find_imports", "automata.core.ast_handlers.ImportRemover", "automata.tests.unit.ast_utils.test_ast_utils.test_get_node_without_imports", "automata.code_parsers.py.py_reader.PyReader.get_source_code", "automata.code_parsers.py.py_reader.PyReader.get_source_code_without_docstrings", "automata.code_parsers.py.py_reader.PyReader.get_docstring", "automata.core.ast_handlers.ImportRemover.visit", "automata.experimental.scripts.run_update_tool_eval.call_completion_provider", "automata.experimental.search.symbol_search.SymbolSearch._find_pattern_in_modules", "automata.singletons.py_module_loader.PyModuleLoader.fetch_ast_module"], "k": 20}
{"task_id": "ContextCodeRetrieval/565", "query": "What method is used to update an existing Python module with the given code?", "truth_top_match": "automata.tools.builders.py_writer_builder.PyCodeWriterToolkitBuilder._update_existing_module", "top_k_matches": ["automata.tools.builders.py_writer_builder.PyCodeWriterToolkitBuilder._update_existing_module", "automata.tools.builders.py_writer_builder.PyCodeWriterToolkitBuilder._create_new_module", "automata.code_writers.py.py_code_writer.PyCodeWriter", "automata.tests.unit.code_writers.test_py_writer.test_upsert_to_module_update_existing_nodes", "automata.code_writers.py.py_code_writer.PyCodeWriter.delete_module", "automata.tests.unit.code_writers.test_py_writer.test_update_existing_function", "automata.tools.builders.py_writer_builder.PyCodeWriterToolkitBuilder", "automata.tests.unit.code_writers.test_py_writer_tool.test_extend_module_with_new_function", "automata.cli.scripts.run_doc_post_process.main", "automata.tests.unit.code_writers.test_py_writer_tool.test_extend_module_with_documented_new_function"], "k": 20}
{"task_id": "ContextCodeRetrieval/566", "query": "What is the base class for Automata exceptions?", "truth_top_match": "automata.core.base.base_error.AutomataError", "top_k_matches": ["automata.core.base.base_error.AutomataError", "automata.tasks.task_error.TaskStateError", "automata.tasks.task_error.TaskGeneralError", "automata.eval.agent.code_writing_eval.CodeExecutionError", "automata.agent.error.AgentGeneralError", "automata.agent.error.AgentResultError", "automata.eval.eval_error.EvalExecutionError", "automata.tasks.task_error.TaskInstructionsError", "automata.eval.agent.code_writing_eval.VariableNotFoundError", "automata.agent.error.AgentStopIterationError"], "k": 20}
{"task_id": "ContextCodeRetrieval/567", "query": "How can DependencyFactory create `SymbolSearch` instance?", "truth_top_match": "automata.singletons.dependency_factory.DependencyFactory.create_symbol_search", "top_k_matches": ["automata.tests.unit.singletons.test_singletons_dependency_factory.test_create_symbol_search", "automata.tests.utils.factories.symbol_search_live", "automata.singletons.dependency_factory.DependencyFactory.create_symbol_search", "automata.tests.conftest.symbol_search", "automata.tests.unit.tool_eval.test_symbol_search_eval.symbol_search_eval", "automata.tests.unit.singletons.test_singletons_dependency_factory.test_create_symbol_rank", "automata.tests.conftest.search_evaluator", "automata.singletons.dependency_factory.DependencyFactory.create_symbol_graph", "automata.singletons.dependency_factory.DependencyFactory", "automata.tests.unit.tool_eval.test_symbol_search_eval.symbol_search_tool_builder"], "k": 20}
{"task_id": "ContextCodeRetrieval/568", "query": "Which methods set the different agent attributes such as stream, verbose, max_iterations, abs_max_tokens, max_token_percentage, temperature, session_id, and system_template?", "truth_top_match": "automata.config.config_base.AgentConfigBuilder.with_stream", "top_k_matches": ["automata.config.openai_config.OpenAIAutomataAgentConfig.setup", "automata.tests.unit.automata_agent.test_automata_agent_builder.test_builder_provided_parameters_override_defaults", "automata.tests.unit.automata_agent.test_automata_agent_builder.test_builder_accepts_all_fields", "automata.tests.unit.automata_agent.test_automata_agent_builder.test_builder_default_config", "automata.llm.providers.openai_llm.OpenAIChatCompletionProvider.__init__", "automata.config.config_base.AgentConfigBuilder.with_abs_max_tokens", "automata.tests.unit.agentified_search.test_agentified_search.test_init", "automata.tests.unit.task.test_task.test_session_id_determinism", "automata.config.config_base.AgentConfigBuilder.with_session_id", "automata.config.openai_config.OpenAIAutomataAgentConfig"], "k": 20}
{"task_id": "ContextCodeRetrieval/569", "query": "Which method in SymbolSearch class retrieves the source code of a module, class, method, or standalone function represented by a symbol?", "truth_top_match": "automata.experimental.search.symbol_search.SymbolSearch.retrieve_source_code_by_symbol", "top_k_matches": ["automata.experimental.search.symbol_search.SymbolSearch.retrieve_source_code_by_symbol", "automata.embedding.embedding_base.EmbeddingBuilder.fetch_embedding_source_code", "automata.experimental.tools.builders.symbol_search_builder.SymbolSearchToolkitBuilder._retrieve_source_code_by_symbol_processor", "automata.tests.regression.test_symbol_searcher_regression.test_source_code_retrieval", "automata.experimental.code_parsers.py.context_processing.context_retriever.SourceCodeContextComponent", "automata.symbol_embedding.symbol_embedding_builders.SymbolCodeEmbeddingBuilder.build", "automata.experimental.symbol_embedding.symbol_doc_embedding_builder.SymbolDocEmbeddingBuilder.build_non_class", "automata.tests.unit.context_retriever.test_context_retriever.test_source_code_2", "automata.tests.unit.symbol.test_symbol_search.test_retrieve_source_code_by_symbol", "automata.tests.unit.symbol.test_symbol_search_tool.test_retrieve_source_code_by_symbol"], "k": 20}
{"task_id": "ContextCodeRetrieval/570", "query": "Which function contains the CLI command responsible for configuring up the local environment?", "truth_top_match": "automata.cli.cli_utils.setup_files", "top_k_matches": ["automata.cli.commands.configure", "automata.tests.unit.cli.test_cli_commands.test_configure_load_env_vars_called", "automata.tests.unit.cli.test_cli_commands.test_configure_setup_files_called", "automata.cli.env_operations.update_key_value", "automata.cli.commands.install_indexing", "automata.cli.commands.cli", "automata.cli.cli_utils.setup_files", "automata.tests.unit.cli.test_cli_commands.test_cli_run_doc_post_process", "automata.tests.unit.cli.test_cli_commands.test_cli_run_code_embedding", "automata.cli.env_operations.update_graph_type"], "k": 20}
{"task_id": "ContextCodeRetrieval/571", "query": "How do you validate a SymbolRankConfig?", "truth_top_match": "automata.experimental.search.symbol_rank.SymbolRankConfig.validate_config", "top_k_matches": ["automata.experimental.search.symbol_rank.SymbolRankConfig", "automata.tests.unit.symbol.test_symbol_rank.test_pagerank_config_validation", "automata.experimental.search.symbol_rank.SymbolRank.__init__", "automata.experimental.search.symbol_search.SymbolSearch.symbol_rank", "automata.tests.unit.symbol.test_symbol_rank.test_get_ranks", "automata.tests.unit.symbol.test_symbol_rank.test_prepare_initial_ranks", "automata.experimental.search.symbol_rank.SymbolRank", "automata.singletons.dependency_factory.DependencyFactory.create_symbol_rank", "automata.tests.unit.symbol.test_symbol_rank.test_get_ranks_small_graph", "automata.experimental.search.symbol_search.SymbolSearch.__init__"], "k": 20}
{"task_id": "ContextCodeRetrieval/572", "query": "Which property of OpenAIAutomataAgent returns the agent responses associated with the agent?", "truth_top_match": "automata.agent.openai_agent.OpenAIAutomataAgent.agent_responses", "top_k_matches": ["automata.agent.openai_agent.OpenAIAutomataAgent.agent_responses", "automata.agent.agent.Agent.agent_responses", "automata.agent.openai_agent.OpenAIAutomataAgent", "automata.agent.openai_agent.OpenAIAutomataAgent.__repr__", "automata.tests.unit.automata_agent.test_automata_agent.test_chat_provider", "automata.agent.openai_agent.OpenAIAutomataAgent.functions", "automata.tests.unit.automata_agent.test_automata_agent.test_agent_initialization", "automata.tests.unit.automata_agent.test_automata_agent.test_build_initial_messages", "automata.agent.openai_agent.OpenAIAutomataAgent.tools", "automata.agent.openai_agent.OpenAIAutomataAgent._get_termination_tool"], "k": 20}
{"task_id": "ContextCodeRetrieval/573", "query": "Which method in the SymbolSearch class calculates the z-score, shifts them to be positive, and raises the values to the specified power?", "truth_top_match": "automata.experimental.search.symbol_search.SymbolSearch.shifted_z_score_powered", "top_k_matches": ["automata.experimental.search.symbol_search.SymbolSearch.shifted_z_score_powered", "automata.experimental.search.symbol_search.SymbolSearch", "automata.experimental.search.symbol_search.SymbolSearch.__init__", "automata.experimental.search.symbol_rank.SymbolRank", "automata.tests.unit.symbol.test_symbol_search.test_symbol_rank_search", "automata.tests.unit.symbol.test_symbol_search_tool.test_symbol_rank_search", "automata.experimental.search.symbol_rank.SymbolRank.get_ordered_ranks", "automata.experimental.search.symbol_rank.SymbolRankConfig", "automata.tests.unit.tool_eval.test_symbol_search_eval.test_symbol_search_eval_extract_action", "automata.experimental.search.symbol_search.SymbolSearch.get_symbol_rank_results"], "k": 20}
{"task_id": "ContextCodeRetrieval/574", "query": "What function creates a copy of the specified node without docstrings?", "truth_top_match": "automata.core.ast_handlers.get_node_without_docstrings", "top_k_matches": ["automata.core.ast_handlers.get_node_without_docstrings", "automata.tests.unit.ast_utils.test_ast_utils.test_get_node_without_docstrings", "automata.core.ast_handlers.get_node_without_imports", "automata.core.ast_handlers.DocstringRemover", "automata.tests.unit.ast_utils.test_ast_utils.test_get_docstring_from_node_without_docstring", "automata.tests.unit.ast_utils.test_ast_utils.test_get_node_without_imports", "automata.code_parsers.py.py_reader.PyReader.get_source_code_without_docstrings", "automata.code_parsers.py.py_reader.PyReader.get_docstring_from_node", "automata.tests.unit.ast_utils.test_ast_utils.test_get_docstring_from_node_with_none_node", "automata.core.ast_handlers.get_docstring_from_node"], "k": 20}
{"task_id": "ContextCodeRetrieval/575", "query": "What is the LoggingConfig class?", "truth_top_match": "automata.core.utils.LoggingConfig", "top_k_matches": ["automata.core.utils.LoggingConfig", "automata.config.config_base.AgentConfig.Config", "automata.core.utils.get_logging_config", "automata.cli.cli_output_logger.CustomLogger", "automata.tools.tool_base.Tool.Config", "automata.tasks.automata_task.AutomataTask.initialize_logging", "automata.cli.cli_output_logger.CustomLogger.__init__", "automata.cli.commands.configure_logging", "automata.core.utils.HandlerDict", "automata.experimental.code_parsers.py.context_processing.context_handler.PyContextHandlerConfig"], "k": 20}
{"task_id": "ContextCodeRetrieval/576", "query": "What function is used to install indexing?", "truth_top_match": "automata.cli.install_indexing.install_indexing", "top_k_matches": ["automata.cli.commands.install_indexing", "automata.cli.install_indexing.install_indexing", "automata.cli.install_indexing.generate_local_indices", "automata.tools.builders.py_reader_builder.PyReaderToolkitBuilder.build", "automata.tests.unit.symbol.test_symbol_graph_static.sync_context", "automata.tests.unit.symbol.test_symbol_graph.sync_context", "automata.cli.install_indexing.install_nvm_and_nodejs", "automata.tests.unit.symbol.test_symbol_subgraph.symbol_graph_mocked_index", "automata.tests.unit.sample_modules.sample3.my_function", "automata.tests.unit.agentified_search.test_agentified_search.test_get_top_matches"], "k": 20}
{"task_id": "ContextCodeRetrieval/577", "query": "What method is used to process the modules in the local path?", "truth_top_match": "automata.experimental.scripts.run_update_tool_eval.process_modules", "top_k_matches": ["automata.experimental.scripts.run_update_tool_eval.process_modules", "automata.code_parsers.py.dotpath_map.DotPathMap.put_module", "automata.code_parsers.py.dotpath_map.DotPathMap.contains_dotpath", "automata.code_parsers.py.dotpath_map.DotPathMap.contains_fpath", "automata.code_parsers.py.dotpath_map.DotPathMap.delete_module", "automata.tests.unit.module_loader.test_module_loader.test_dotpath_map", "automata.tests.unit.module_loader.test_module_loader.test_empty_dotpath", "automata.tests.unit.module_loader.test_module_loader.test_get_items", "automata.tests.unit.module_loader.test_module_loader.test_invalid_dotpath", "automata.tests.unit.module_loader.test_module_loader.test_load_module"], "k": 20}
{"task_id": "ContextCodeRetrieval/578", "query": "What class is used to signal the task is not in the correct state for the operation?", "truth_top_match": "automata.tasks.task_error.TaskStateError", "top_k_matches": ["automata.tasks.task_error.TaskStateError", "automata.tasks.task_error.TaskGeneralError", "automata.tasks.task_error.TaskInstructionsError", "automata.eval.eval_error.EvalExecutionError", "automata.tasks.task_base.TaskStatus", "automata.tests.unit.task.test_task_database.test_update_nonexistent_task", "automata.tasks.task_environment.AutomataTaskEnvironment.reset", "automata.eval.tool.tool_eval_harness.EvalExecutionError", "automata.tasks.task_environment.AutomataTaskEnvironment.teardown", "automata.tasks.task_environment.AutomataTaskEnvironment.validate"], "k": 20}
{"task_id": "ContextCodeRetrieval/579", "query": "How to get role of a language model completion result?", "truth_top_match": "automata.llm.llm_base.LLMCompletionResult.get_role", "top_k_matches": ["automata.llm.llm_base.LLMCompletionResult.get_role", "automata.llm.llm_base.LLMCompletionResult", "automata.llm.providers.openai_llm.OpenAIChatCompletionResult.from_args", "automata.llm.providers.openai_llm.OpenAIChatCompletionResult", "automata.llm.providers.openai_llm.OpenAIChatMessage.from_completion_result", "automata.llm.providers.openai_llm.OpenAIChatCompletionProvider.get_next_assistant_completion", "automata.tests.unit.task.test_task_executor.mock_openai_response_with_completion_message", "automata.tests.unit.automata_agent.test_automata_agent.mock_openai_response_with_completion_message", "automata.tests.unit.agent_eval.conftest.mock_openai_response_with_function_completion_message_final", "automata.experimental.scripts.run_update_tool_eval.call_completion_provider"], "k": 20}
{"task_id": "ContextCodeRetrieval/580", "query": "What method prepares the graph for the SymbolRank algorithm?", "truth_top_match": "automata.experimental.search.symbol_rank.SymbolRank._prepare_graph", "top_k_matches": ["automata.experimental.search.symbol_rank.SymbolRank._prepare_graph", "automata.experimental.search.symbol_rank.SymbolRank", "automata.tests.unit.symbol.test_symbol_rank.test_prepare_initial_ranks", "automata.experimental.scripts.run_update_tool_eval.process_symbol_graph", "automata.experimental.search.symbol_search.SymbolSearch.symbol_rank", "automata.experimental.search.symbol_rank.SymbolRank.get_ordered_ranks", "automata.cli.scripts.run_code_embedding.collect_symbols", "automata.symbol.graph.symbol_navigator.SymbolGraphNavigator._pre_compute_rankable_bounding_boxes", "automata.tests.unit.symbol.test_symbol_rank.test_get_ranks", "automata.tests.unit.symbol.test_symbol_rank.test_get_ranks_small_graph"], "k": 20}
{"task_id": "ContextCodeRetrieval/581", "query": "What method is used to checkout a branch in the repository?", "truth_top_match": "automata.singletons.github_client.RepositoryClient.checkout_branch", "top_k_matches": ["automata.singletons.github_client.GitHubClient.checkout_branch", "automata.tests.unit.singletons.test_singletons_github_client.test_checkout_branch", "automata.singletons.github_client.RepositoryClient.checkout_branch", "automata.tests.unit.github.test_github_client.test_branch_exists", "automata.singletons.github_client.GitHubClient.branch_exists", "automata.tests.unit.singletons.test_singletons_github_client.test_create_branch", "automata.tests.unit.singletons.test_singletons_github_client.test_branch_exists", "automata.singletons.github_client.RepositoryClient", "automata.tests.unit.singletons.test_singletons_github_client.test_clone_repository", "automata.tests.unit.singletons.test_singletons_github_client.test_commit_and_push_changes"], "k": 20}
{"task_id": "ContextCodeRetrieval/582", "query": "Which property of OpenAIAutomataAgent returns the tools associated with the agent?", "truth_top_match": "automata.agent.openai_agent.OpenAIAutomataAgent.tools", "top_k_matches": ["automata.agent.openai_agent.OpenAIAutomataAgent.tools", "automata.agent.agent.Agent.tools", "automata.tests.unit.automata_agent.test_automata_agent.test_tool_execution", "automata.experimental.tools.builders.agentified_search_builder.AgentifiedSearchOpenAIToolkitBuilder", "automata.experimental.tools.builders.advanced_context_oracle_builder.AdvancedContextOracleOpenAIToolkitBuilder", "automata.experimental.tools.builders.agentified_search_builder.AgentifiedSearchOpenAIToolkitBuilder.build_for_open_ai", "automata.experimental.tools.builders.document_oracle_builder.DocumentOracleOpenAIToolkitBuilder", "automata.experimental.tools.builders.advanced_context_oracle_builder.AdvancedContextOracleOpenAIToolkitBuilder.build_for_open_ai", "automata.agent.openai_agent.OpenAIAutomataAgent.functions", "automata.experimental.tools.builders.symbol_search_builder.SymbolSearchOpenAIToolkitBuilder"], "k": 20}
{"task_id": "ContextCodeRetrieval/583", "query": "Which method is used to get multiple entries from the database using keys?", "truth_top_match": "automata.symbol_embedding.vector_databases.ChromaSymbolEmbeddingVectorDatabase.batch_get", "top_k_matches": ["automata.symbol_embedding.vector_databases.ChromaSymbolEmbeddingVectorDatabase.batch_get", "automata.core.base.database.vector_database.VectorDatabaseProvider.batch_get", "automata.symbol_embedding.vector_databases.ChromaSymbolEmbeddingVectorDatabase._check_result_entries", "automata.core.base.database.vector_database.JSONVectorDatabase.batch_get", "automata.symbol_embedding.vector_databases.ChromaSymbolEmbeddingVectorDatabase.get", "automata.tests.unit.database.test_database_sql.test_update_entry", "automata.core.base.database.vector_database.VectorDatabaseProvider.get_ordered_keys", "automata.symbol_embedding.vector_databases.ChromaSymbolEmbeddingVectorDatabase.batch_update", "automata.tests.unit.conversation_database.test_conversation_database.test_get_messages_returns_multiple_messages_in_order", "automata.core.base.database.vector_database.JSONVectorDatabase.get_ordered_keys"], "k": 20}
{"task_id": "ContextCodeRetrieval/584", "query": "What method is used to save the vector database to the JSON file in JSONVectorDatabase?", "truth_top_match": "automata.core.base.database.vector_database.JSONVectorDatabase.save", "top_k_matches": ["automata.core.base.database.vector_database.JSONVectorDatabase.save", "automata.core.base.database.vector_database.JSONVectorDatabase", "automata.tests.unit.database.test_database_vector.test_save", "automata.symbol_embedding.vector_databases.JSONSymbolEmbeddingVectorDatabase", "automata.tests.unit.database.test_database_vector.test_load", "automata.core.base.database.vector_database.JSONVectorDatabase.load", "automata.tests.conftest.json_vector_db", "automata.tests.unit.database.test_database_vector.test_add_symbol", "automata.tests.unit.database.test_database_vector.test_add_symbols", "automata.tests.unit.database.test_database_vector.test_lookup_symbol"], "k": 20}
{"task_id": "ContextCodeRetrieval/585", "query": "Which class builds and registers the tools associated with the Python interpreter for OpenAI?", "truth_top_match": "automata.experimental.tools.builders.py_interpreter.PyInterpreterOpenAIToolkitBuilder", "top_k_matches": ["automata.experimental.tools.builders.py_interpreter.PyInterpreterOpenAIToolkitBuilder.build_for_open_ai", "automata.experimental.tools.builders.py_interpreter.PyInterpreterOpenAIToolkitBuilder", "automata.experimental.tools.builders.advanced_context_oracle_builder.AdvancedContextOracleOpenAIToolkitBuilder.build_for_open_ai", "automata.tools.builders.py_writer_builder.PyCodeWriterOpenAIToolkitBuilder", "automata.experimental.tools.builders.document_oracle_builder.DocumentOracleOpenAIToolkitBuilder.build_for_open_ai", "automata.tools.builders.py_reader_builder.PyReaderOpenAIToolkitBuilder", "automata.experimental.tools.builders.advanced_context_oracle_builder.AdvancedContextOracleOpenAIToolkitBuilder", "automata.tools.builders.py_writer_builder.PyCodeWriterOpenAIToolkitBuilder.build_for_open_ai", "automata.tools.builders.py_reader_builder.PyReaderOpenAIToolkitBuilder.build_for_open_ai", "automata.experimental.tools.builders.agentified_search_builder.AgentifiedSearchOpenAIToolkitBuilder.build_for_open_ai"], "k": 20}
{"task_id": "ContextCodeRetrieval/586", "query": "How does the PyDocWriter obtain a formatted string for the main body of index.rst file?", "truth_top_match": "automata.code_writers.py.py_doc_writer.PyDocWriter.get_payload", "top_k_matches": ["automata.code_writers.py.py_doc_writer.PyDocWriter", "automata.code_writers.py.py_doc_writer.PyDocWriter.get_payload", "automata.tests.unit.ast_utils.test_ast_utils.test_get_docstring_from_node_with_docstring", "automata.code_writers.py.py_doc_writer.PyDocWriter.generate_index_files", "automata.tests.unit.code_writers.test_py_doc_writer.test_generate_module_summary", "automata.tools.builders.py_reader_builder.PyReaderToolkitBuilder._run_indexer_retrieve_docstring", "automata.code_writers.py.py_doc_writer.PyDocWriter.generate_module_summary", "automata.code_parsers.py.py_reader.PyReader.get_docstring", "automata.tests.unit.code_readers.test_py_reader.test_get_docstring_from_node", "automata.code_writers.py.py_doc_writer.PyDocWriter.generate_rst_files"], "k": 20}
{"task_id": "ContextCodeRetrieval/587", "query": "How can DependencyFactory synchronize an `ISymbolProvider` instance?", "truth_top_match": "automata.singletons.dependency_factory.DependencyFactory._synchronize_provider", "top_k_matches": ["automata.singletons.dependency_factory.DependencyFactory._synchronize_provider", "automata.context_providers.symbol_synchronization_context.SymbolProviderSynchronizationContext", "automata.context_providers.symbol_synchronization_context.SymbolProviderRegistry.register_provider", "automata.context_providers.symbol_synchronization_context.SymbolProviderRegistry", "automata.context_providers.symbol_synchronization_context.SymbolProviderSynchronizationContext.register_provider", "automata.context_providers.symbol_synchronization_context.SymbolProviderSynchronizationContext.synchronize", "automata.symbol.symbol_base.ISymbolProvider", "automata.tests.unit.synchronizer.test_synchronizer.test_synchronize", "automata.context_providers.symbol_synchronization_context.SymbolProviderRegistry.synchronize", "automata.singletons.dependency_factory.DependencyFactory.set_overrides"], "k": 20}
{"task_id": "ContextCodeRetrieval/588", "query": "How are the total number of successful actions calculated?", "truth_top_match": "automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics.total_successful_actions", "top_k_matches": ["automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics.total_successful_actions", "automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics.total_actions", "automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics.successful_actions_frequency", "automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics.total_extra_actions", "automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics.action_success_rate", "automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics.failed_actions_frequency", "automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics.total_full_matches", "automata.eval.tool.tool_eval_metrics.ToolEvaluationMetrics.total_full_matches", "automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics.extra_action_frequency", "automata.eval.tool.tool_eval_metrics.ToolEvaluationMetrics.total_evaluations"], "k": 20}
{"task_id": "ContextCodeRetrieval/589", "query": "Which class is used to write python docs?", "truth_top_match": "automata.code_writers.py.py_doc_writer.PyDocWriter", "top_k_matches": ["automata.code_writers.py.py_doc_writer.PyDocWriter", "automata.tests.unit.sample_modules.sample.OuterClass.InnerClass", "automata.tests.unit.sample_modules.sample.OuterClass", "automata.tests.unit.context_retriever.test_context_retriever.test_constructor_and_attributes.MyClass", "automata.tests.unit.code_writers.test_py_writer_tool.test_extend_module_with_documented_new_class", "automata.tests.unit.code_writers.test_py_writer_tool.test_extend_module_with_documented_new_module", "automata.experimental.symbol_embedding.symbol_doc_embedding_builder.SymbolDocEmbeddingBuilder._build_class_document_summary", "automata.experimental.symbol_embedding.symbol_doc_embedding_builder.SymbolDocEmbeddingBuilder._build_class_document", "automata.tests.unit.sample_modules.my_project.core.calculator.Calculator", "automata.tests.unit.code_writers.test_py_doc_writer.test_write_documentation"], "k": 20}
{"task_id": "ContextCodeRetrieval/590", "query": "What abstract method is used to create a new table in RelationalDatabase?", "truth_top_match": "automata.core.base.database.relational_database.RelationalDatabase.create_table", "top_k_matches": ["automata.core.base.database.relational_database.RelationalDatabase", "automata.core.base.database.relational_database.RelationalDatabase.create_table", "automata.core.base.database.relational_database.SQLDatabase", "automata.tests.unit.database.test_database_sql.test_create_table", "automata.core.base.database.relational_database.SQLDatabase.create_table", "automata.tests.unit.automata_agent.test_automata_database.test_init", "automata.llm.llm_base.LLMConversationDatabaseProvider", "automata.memory_store.conversation_database_providers.OpenAIAutomataConversationDatabase.__init__", "automata.core.base.database.relational_database.RelationalDatabase.insert", "automata.tasks.task_database.AutomataAgentTaskDatabase.__init__"], "k": 20}
{"task_id": "ContextCodeRetrieval/591", "query": "What class is raised when the agent exceeds the maximum iteration limit?", "truth_top_match": "automata.agent.error.AgentMaxIterError", "top_k_matches": ["automata.agent.error.AgentMaxIterError", "automata.agent.error.AgentStopIterationError", "automata.agent.error.AgentResultError", "automata.agent.error.AgentGeneralError", "automata.agent.openai_agent.OpenAIAutomataAgent", "automata.agent.agent.Agent", "automata.agent.openai_agent.OpenAIAutomataAgent.run", "automata.agent.error.AgentDatabaseError", "automata.agent.openai_agent.OpenAIAutomataAgent.__next__", "automata.eval.eval_error.EvalExecutionError"], "k": 20}
{"task_id": "ContextCodeRetrieval/592", "query": "How can we create a label on an issue on the remote repository using GitHubClient?", "truth_top_match": "automata.singletons.github_client.GitHubClient.create_label", "top_k_matches": ["automata.singletons.github_client.GitHubClient.create_issue", "automata.singletons.github_client.GitHubClient.create_label", "automata.singletons.github_client.GitHubClient.add_label", "automata.singletons.github_client.GitHubClient.remove_label", "automata.tests.unit.singletons.test_singletons_github_client.test_create_issue", "automata.singletons.github_client.GitHubClient", "automata.singletons.github_client.GitHubClient.create_issue_comment", "automata.tests.unit.singletons.test_singletons_github_client.test_create_branch", "automata.tests.unit.singletons.test_singletons_github_client.test_clone_repository", "automata.singletons.github_client.GitHubClient.create_pull_request"], "k": 20}
{"task_id": "ContextCodeRetrieval/593", "query": "Which abstract class in automata.eval.tool.tool_eval evaluates tools' performance?", "truth_top_match": "automata.eval.tool.tool_eval.ToolEval", "top_k_matches": ["automata.eval.tool.tool_eval.ToolEval", "automata.eval.tool.tool_eval.ToolEvalResult", "automata.tests.unit.automata_agent.test_automata_agent.test_tool_execution", "automata.eval.tool.tool_eval_harness.ToolEvaluationHarness", "automata.eval.tool.search_eval.SymbolSearchEval", "automata.eval.tool.tool_eval_metrics.ToolEvaluationMetrics", "automata.tools.tool_executor.IToolExecution", "automata.agent.openai_agent.OpenAIAgentToolkitBuilder", "automata.eval.eval_base.Eval", "automata.tests.unit.tool_eval.test_tool_eval_harness_and_metrics.test_tool_evaluation_harness_and_metrics"], "k": 20}
{"task_id": "ContextCodeRetrieval/594", "query": "What method is used to check if a chat session ID is valid?", "truth_top_match": "automata.memory_store.conversation_database_providers.OpenAIAutomataConversationDatabase._check_session_id", "top_k_matches": ["automata.memory_store.conversation_database_providers.OpenAIAutomataConversationDatabase._check_session_id", "automata.tests.unit.automata_agent.test_automata_database.test_invalid_session_id", "automata.memory_store.conversation_database_providers.OpenAIAutomataConversationDatabase.get_messages", "automata.memory_store.conversation_database_providers.OpenAIAutomataConversationDatabase._get_last_interaction_id", "automata.tests.unit.automata_agent.test_automata_database.test_get_last_interaction_id", "automata.tests.unit.task.test_task.test_session_id_determinism", "automata.tests.unit.conversation_database.test_conversation_database.test_put_message_increments_interaction_id", "automata.tests.unit.automata_agent.test_automata_agent.test_db_interaction", "automata.tests.unit.task.test_task_executor.test_agent_session_id_matches_task", "automata.tests.unit.conversation_database.test_conversation_database.test_get_get_last_interaction_id_when_no_interactions"], "k": 20}
{"task_id": "ContextCodeRetrieval/595", "query": "Which method of AgentToolkitBuilder is responsible for building the associated tool?", "truth_top_match": "automata.agent.agent.AgentToolkitBuilder.build", "top_k_matches": ["automata.agent.agent.AgentToolkitBuilder", "automata.agent.openai_agent.OpenAIAgentToolkitBuilder", "automata.experimental.tools.builders.agentified_search_builder.AgentifiedSearchOpenAIToolkitBuilder", "automata.tools.agent_tool_factory.AgentToolFactory", "automata.experimental.tools.builders.document_oracle_builder.DocumentOracleOpenAIToolkitBuilder", "automata.tools.agent_tool_factory.AgentToolFactory.create_tools_from_builder", "automata.experimental.tools.builders.agentified_search_builder.AgentifiedSearchToolkitBuilder", "automata.experimental.tools.builders.advanced_context_oracle_builder.AdvancedContextOracleOpenAIToolkitBuilder", "automata.experimental.tools.builders.py_interpreter.PyInterpreterToolkitBuilder", "automata.agent.agent.AgentToolkitBuilder.build"], "k": 20}
{"task_id": "ContextCodeRetrieval/596", "query": "What class evaluates detailed metrics from a sequence of EvalResults?", "truth_top_match": "automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics", "top_k_matches": ["automata.eval.tool.tool_eval_metrics.ToolEvaluationMetrics", "automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics", "automata.eval.agent.agent_eval.AgentEvalResult", "automata.eval.tool.tool_eval.ToolEvalResult", "automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics.__init__", "automata.eval.agent.agent_eval_harness.AgentEvaluationHarness", "automata.eval.tool.tool_eval_harness.ToolEvaluationHarness", "automata.eval.eval_base.EvalResult", "automata.eval.tool.tool_eval.ToolEval", "automata.eval.eval_base.Eval"], "k": 20}
{"task_id": "ContextCodeRetrieval/597", "query": "What abstract base class represents the different types of language model conversations?", "truth_top_match": "automata.llm.llm_base.LLMConversation", "top_k_matches": ["automata.llm.llm_base.LLMConversation", "automata.llm.providers.openai_llm.OpenAIConversation", "automata.llm.llm_base.LLMChatMessage", "automata.agent.agent.Agent.conversation", "automata.llm.llm_base.LLMConversationDatabaseProvider", "automata.llm.llm_base.LLMConversation.__len__", "automata.llm.llm_base.LLMChatCompletionProvider", "automata.memory_store.conversation_database_providers.OpenAIAutomataConversationDatabase", "automata.llm.llm_base.LLMConversation.reset_conversation", "automata.llm.providers.openai_llm.OpenAIChatCompletionProvider"], "k": 20}
{"task_id": "ContextCodeRetrieval/598", "query": "Which method is intended for batch document embeddings but is not yet implemented?", "truth_top_match": "automata.experimental.symbol_embedding.symbol_doc_embedding_builder.SymbolDocEmbeddingBuilder.batch_build", "top_k_matches": ["automata.embedding.embedding_base.EmbeddingVectorProvider.batch_build_embedding_vector", "automata.experimental.symbol_embedding.symbol_doc_embedding_builder.SymbolDocEmbeddingBuilder.batch_build", "automata.embedding.embedding_base.EmbeddingVectorProvider", "automata.experimental.memory_store.symbol_doc_embedding_handler.SymbolDocEmbeddingHandler.__init__", "automata.embedding.embedding_base.EmbeddingHandler", "automata.experimental.symbol_embedding.symbol_doc_embedding_builder.SymbolDocEmbeddingBuilder", "automata.embedding.embedding_base.EmbeddingVectorProvider.build_embedding_vector", "automata.memory_store.symbol_code_embedding_handler.SymbolCodeEmbeddingHandler.flush", "automata.experimental.memory_store.symbol_doc_embedding_handler.SymbolDocEmbeddingHandler", "automata.embedding.embedding_base.EmbeddingBuilder.batch_build"], "k": 20}
{"task_id": "ContextCodeRetrieval/599", "query": "What function processes a single task and returns the evaluation results?", "truth_top_match": "automata.eval.agent.agent_eval_harness.process_task", "top_k_matches": ["automata.eval.agent.agent_eval_harness.process_task", "automata.eval.agent.agent_eval_harness.AgentEvaluationHarness.evaluate", "automata.tests.unit.agent_eval.test_agent_eval_actions_results.test_generate_eval_result_partial_match", "automata.eval.tool.tool_eval_harness.ToolEvaluationHarness.evaluate", "automata.tests.unit.agent_eval.test_agent_eval_database.test_task_evaluation_with_database_integration", "automata.tests.unit.agent_eval.test_eval_database.test_task_evaluation_with_database_integration", "automata.tests.unit.agent_eval.test_agent_eval_actions_results.test_generate_function_eval_result_match", "automata.eval.agent.agent_eval.AgentEval.process_result", "automata.tests.unit.agent_eval.test_agent_eval_actions_results.test_code_execution_error", "automata.tests.regression.test_agent_end_to_end.test_basic_eval_tasks"], "k": 20}
{"task_id": "ContextCodeRetrieval/600", "query": "Which method gets a list of files in the given directory?", "truth_top_match": "automata.code_parsers.directory.DirectoryManager.get_files_in_dir", "top_k_matches": ["automata.code_parsers.directory.DirectoryManager.get_files_in_dir", "automata.code_parsers.directory.Directory.get_file_names", "automata.tests.unit.directory_manager.test_directory_manager.test_get_files_in_dir", "automata.code_parsers.directory.Directory.get_subdirectories", "automata.code_parsers.directory.DirectoryManager.get_subdirectories", "automata.code_parsers.directory.DirectoryManager._load_directory_structure", "automata.tests.unit.directory_manager.test_directory_manager.test_get_subdirectories", "automata.code_parsers.directory.Directory", "automata.code_parsers.directory.DirectoryManager", "automata.code_writers.py.py_doc_writer.PyDocWriter.generate_index_files"], "k": 20}
{"task_id": "ContextCodeRetrieval/601", "query": "Which method provides an escaped name of a symbol?", "truth_top_match": "automata.symbol.symbol_base.SymbolDescriptor.get_escaped_name", "top_k_matches": ["automata.symbol.symbol_base.SymbolDescriptor.get_escaped_name", "automata.tests.unit.symbol.test_symbol_parser._unparse", "automata.symbol.symbol_parser._SymbolParser.accept_escaped_identifier", "automata.symbol.symbol_parser._SymbolParser.accept_backtick_escaped_identifier", "automata.embedding.embedding_base.EmbeddingBuilder.fetch_embedding_source_code", "automata.experimental.symbol_embedding.symbol_doc_embedding_builder.SymbolDocEmbeddingBuilder._build_prompt", "automata.symbol.symbol_parser.get_escaped_name", "automata.symbol.symbol_parser._SymbolParser.accept_space_escaped_identifier", "automata.symbol.symbol_base.SymbolDescriptor.unparse", "automata.symbol.symbol_parser._SymbolParser"], "k": 20}
{"task_id": "ContextCodeRetrieval/602", "query": "What class is used for executing tools?", "truth_top_match": "automata.tools.tool_executor.ToolExecution", "top_k_matches": ["automata.tools.tool_executor.ToolExecutor", "automata.tools.tool_executor.ToolExecution", "automata.tools.tool_executor.IToolExecution", "automata.tools.tool_base.Tool", "automata.tests.conftest.tool_executor", "automata.tools.tool_executor.ToolExecutor.__init__", "automata.tests.conftest.tool_execution", "automata.eval.tool.tool_eval.ToolEval", "automata.tests.conftest.TestTool", "automata.tests.unit.tool.test_tool.test_tool_executor"], "k": 20}
{"task_id": "ContextCodeRetrieval/603", "query": "How are the relationships of a symbol retrieved?", "truth_top_match": "automata.symbol.graph.symbol_navigator.SymbolGraphNavigator.get_symbol_relationships", "top_k_matches": ["automata.symbol.graph.symbol_graph.SymbolGraph.get_symbol_relationships", "automata.symbol.graph.symbol_navigator.SymbolGraphNavigator.get_symbol_relationships", "automata.symbol.graph.symbol_relationships.RelationshipProcessor.process", "automata.experimental.scripts.run_update_tool_eval.process_symbol_graph", "automata.symbol.graph.symbol_navigator.SymbolGraphNavigator.get_references_to_symbol", "automata.experimental.code_parsers.py.context_processing.context_handler.PyContextHandler", "automata.symbol.graph.graph_builder.GraphBuilder._process_caller_callee_relationships", "automata.symbol.graph.symbol_navigator.SymbolGraphNavigator.get_potential_symbol_callees", "automata.tests.unit.context_retriever.test_context_retriever.test_process_symbol_source", "automata.experimental.code_parsers.py.context_processing.context_handler.PyContextHandler.get_symbol_dependencies"], "k": 20}
{"task_id": "ContextCodeRetrieval/604", "query": "How are the dependencies of a symbol retrieved?", "truth_top_match": "automata.symbol.graph.symbol_navigator.SymbolGraphNavigator.get_symbol_dependencies", "top_k_matches": ["automata.symbol.graph.symbol_graph.SymbolGraph.get_symbol_dependencies", "automata.experimental.code_parsers.py.context_processing.context_handler.PyContextHandler.get_symbol_dependencies", "automata.symbol.graph.symbol_navigator.SymbolGraphNavigator.get_symbol_dependencies", "automata.experimental.scripts.run_update_tool_eval.process_symbol_graph", "automata.symbol.graph.symbol_graph.SymbolGraph.get_symbol_relationships", "automata.symbol.graph.symbol_graph.SymbolGraph.get_references_to_symbol", "automata.tests.regression.test_dependencies.test_automata_symbol_providers", "automata.symbol.graph.symbol_navigator.SymbolGraphNavigator.get_references_to_symbol", "automata.symbol.graph.symbol_graph.SymbolGraph.get_potential_symbol_callers", "automata.symbol.graph.symbol_navigator.process_symbol_bounds"], "k": 20}
{"task_id": "ContextCodeRetrieval/605", "query": "What method is used to return the completion message based on a given prompt?", "truth_top_match": "automata.llm.providers.openai_llm.OpenAIChatCompletionProvider.standalone_call", "top_k_matches": ["automata.llm.providers.openai_llm.OpenAIChatCompletionProvider.standalone_call", "automata.tests.unit.task.test_task_executor.mock_openai_response_with_completion_message", "automata.tests.unit.automata_agent.test_automata_agent.mock_openai_response_with_completion_message", "automata.agent.openai_agent.OpenAIAutomataAgent._get_next_user_response", "automata.experimental.symbol_embedding.symbol_doc_embedding_builder.SymbolDocEmbeddingBuilder._build_class_document", "automata.llm.providers.openai_llm.OpenAIFunction.prompt_format", "automata.tests.unit.agent_eval.conftest.mock_openai_response_with_function_completion_message_final", "automata.llm.providers.openai_llm.OpenAIChatCompletionProvider.get_next_assistant_completion", "automata.experimental.symbol_embedding.symbol_doc_embedding_builder.SymbolDocEmbeddingBuilder._build_prompt", "automata.tests.unit.agent_eval.conftest.mock_openai_response_with_code_action_completion_message_x"], "k": 20}
{"task_id": "ContextCodeRetrieval/606", "query": "Which class is responsible for building `Symbol` source code embeddings?", "truth_top_match": "automata.symbol_embedding.symbol_embedding_builders.SymbolCodeEmbeddingBuilder", "top_k_matches": ["automata.symbol_embedding.symbol_embedding_builders.SymbolCodeEmbeddingBuilder", "automata.symbol_embedding.symbol_embedding_builders.SymbolCodeEmbeddingBuilder.build", "automata.experimental.symbol_embedding.symbol_doc_embedding_builder.SymbolDocEmbeddingBuilder", "automata.memory_store.symbol_code_embedding_handler.SymbolCodeEmbeddingHandler", "automata.experimental.symbol_embedding.symbol_doc_embedding_builder.SymbolDocEmbeddingBuilder.build", "automata.experimental.symbol_embedding.symbol_doc_embedding_builder.SymbolDocEmbeddingBuilder.build_non_class", "automata.embedding.embedding_base.EmbeddingBuilder", "automata.experimental.memory_store.symbol_doc_embedding_handler.SymbolDocEmbeddingHandler._create_new_embedding", "automata.symbol_embedding.symbol_embedding_base.SymbolDocEmbedding", "automata.experimental.memory_store.symbol_doc_embedding_handler.SymbolDocEmbeddingHandler"], "k": 20}
{"task_id": "ContextCodeRetrieval/607", "query": "How can one get the file containing a particular symbol?", "truth_top_match": "automata.symbol.graph.symbol_navigator.SymbolGraphNavigator._get_symbol_containing_file", "top_k_matches": ["automata.symbol.graph.symbol_navigator.SymbolGraphNavigator._get_symbol_containing_file", "automata.experimental.tools.builders.symbol_search_builder.SymbolSearchToolkitBuilder._retrieve_source_code_by_symbol_processor", "automata.experimental.search.symbol_search.SymbolSearch.retrieve_source_code_by_symbol", "automata.tests.unit.database.test_database_vector.test_lookup_symbol", "automata.embedding.embedding_base.EmbeddingBuilder.fetch_embedding_source_code", "automata.tests.unit.symbol.test_symbol_search.test_retrieve_source_code_by_symbol", "automata.tests.unit.symbol.test_symbol_search_tool.test_retrieve_source_code_by_symbol", "automata.symbol.graph.symbol_navigator.SymbolGraphNavigator.get_references_to_symbol", "automata.tests.unit.database.test_database_vector.test_load", "automata.tests.unit.context_retriever.test_context_retriever.test_process_symbol_source"], "k": 20}
{"task_id": "ContextCodeRetrieval/608", "query": "Which abstract class in automata.eval.tool.tool_eval represents the result of a tool eval?", "truth_top_match": "automata.eval.tool.tool_eval.ToolEvalResult", "top_k_matches": ["automata.eval.tool.tool_eval.ToolEvalResult", "automata.eval.tool.tool_eval.ToolEval", "automata.eval.tool.search_eval.SymbolSearchEval", "automata.eval.tool.search_eval.SymbolSearchEvalResult", "automata.eval.tool.tool_eval_metrics.ToolEvaluationMetrics", "automata.eval.agent.agent_eval.AgentEval", "automata.eval.tool.tool_eval_harness.ToolEvaluationHarness", "automata.eval.tool.search_eval.SymbolSearchEval.to_tool_result", "automata.eval.tool.tool_eval.ToolEval.to_tool_result", "automata.eval.eval_base.Eval"], "k": 20}
{"task_id": "ContextCodeRetrieval/609", "query": "Which method in SymbolProviderSynchronizationContext synchronizes all symbol providers?", "truth_top_match": "automata.context_providers.symbol_synchronization_context.SymbolProviderSynchronizationContext.synchronize", "top_k_matches": ["automata.context_providers.symbol_synchronization_context.SymbolProviderSynchronizationContext.synchronize", "automata.context_providers.symbol_synchronization_context.SymbolProviderRegistry.synchronize", "automata.context_providers.symbol_synchronization_context.SymbolProviderSynchronizationContext", "automata.tests.unit.synchronizer.test_synchronizer.test_synchronize", "automata.singletons.dependency_factory.DependencyFactory._synchronize_provider", "automata.context_providers.symbol_synchronization_context.SymbolProviderRegistry", "automata.symbol.symbol_base.ISymbolProvider", "automata.context_providers.symbol_synchronization_context.SymbolProviderRegistry.get_sorted_supported_symbols", "automata.context_providers.symbol_synchronization_context.SymbolProviderSynchronizationContext.register_provider", "automata.context_providers.symbol_synchronization_context.SymbolProviderRegistry.register_provider"], "k": 20}
{"task_id": "ContextCodeRetrieval/610", "query": "Which method aids in converting a SymbolPackage back into a URI string?", "truth_top_match": "automata.symbol.symbol_base.SymbolPackage.unparse", "top_k_matches": ["automata.tests.unit.symbol.test_symbol_parser._unparse", "automata.symbol.symbol_base.SymbolPackage", "automata.symbol.symbol_base.SymbolDescriptor.unparse", "automata.symbol.symbol_parser.parse_symbol", "automata.symbol.symbol_base.Symbol", "automata.symbol.symbol_base.Symbol.__repr__", "automata.symbol.symbol_base.Symbol.parent", "automata.symbol.symbol_base.SymbolPackage.unparse", "automata.tests.unit.symbol.test_symbol_parser.test_unparse_symbol", "automata.experimental.search.symbol_search.SymbolSearch.retrieve_source_code_by_symbol"], "k": 20}
{"task_id": "ContextCodeRetrieval/611", "query": "What concrete class provides a SQL database?", "truth_top_match": "automata.core.base.database.relational_database.SQLDatabase", "top_k_matches": ["automata.core.base.database.relational_database.SQLDatabase", "automata.core.base.database.relational_database.RelationalDatabase", "automata.core.base.database.relational_database.SQLDatabase.__init__", "automata.llm.llm_base.LLMConversationDatabaseProvider", "automata.tasks.task_database.AutomataAgentTaskDatabase", "automata.tests.unit.database.test_database_sql.test_connect_close", "automata.memory_store.conversation_database_providers.OpenAIAutomataConversationDatabase", "automata.core.base.database.relational_database.SQLDatabase.NullCursor", "automata.memory_store.conversation_database_providers.OpenAIAutomataConversationDatabase.__init__", "automata.core.base.database.relational_database.SQLDatabase.NullConnection"], "k": 20}
{"task_id": "ContextCodeRetrieval/612", "query": "What method is used to remove nodes from a module?", "truth_top_match": "automata.code_writers.py.py_code_writer.PyCodeWriter.delete_from_module", "top_k_matches": ["automata.core.ast_handlers.ImportRemover", "automata.code_writers.py.py_code_writer.PyCodeWriter.delete_from_module", "automata.core.ast_handlers.DocstringRemover", "automata.code_writers.py.py_code_writer.PyCodeWriter.upsert_to_module", "automata.core.ast_handlers.ImportRemover.visit", "automata.tests.unit.code_writers.test_py_writer.test_delete_from_module", "automata.code_parsers.py.dotpath_map.DotPathMap.delete_module", "automata.tests.unit.code_writers.test_py_writer.test_delete_from_module_non_existent_node", "automata.tests.unit.code_writers.test_py_writer.test_reduce_module_remove_function", "automata.tests.unit.ast_utils.test_ast_utils.test_get_node_without_imports"], "k": 20}
{"task_id": "ContextCodeRetrieval/613", "query": "Which class represents an OpenAI function call in action?", "truth_top_match": "automata.eval.agent.openai_function_eval.OpenAIFunctionCallAction", "top_k_matches": ["automata.eval.agent.openai_function_eval.OpenAIFunctionCallAction", "automata.eval.agent.openai_function_eval.OpenAIFunctionEval", "automata.eval.agent.openai_function_eval.OpenAIFunctionCallAction.__repr__", "automata.llm.providers.openai_llm.OpenAIFunction", "automata.eval.agent.openai_function_eval.OpenAIFunctionCallAction.from_payload", "automata.eval.eval_base.Action", "automata.llm.llm_base.FunctionCall", "automata.eval.agent.openai_function_eval.OpenAIFunctionEval._filter_actions", "automata.eval.agent.openai_function_eval.OpenAIFunctionCallAction.to_payload", "automata.llm.providers.openai_llm.OpenAITool"], "k": 20}
{"task_id": "ContextCodeRetrieval/614", "query": "What class is used to build embeddings?", "truth_top_match": "automata.embedding.embedding_base.EmbeddingBuilder", "top_k_matches": ["automata.llm.providers.openai_llm.OpenAIEmbeddingProvider", "automata.embedding.embedding_base.EmbeddingBuilder", "automata.experimental.symbol_embedding.symbol_doc_embedding_builder.SymbolDocEmbeddingBuilder", "automata.embedding.embedding_base.EmbeddingVectorProvider", "automata.embedding.embedding_base.Embedding", "automata.symbol_embedding.symbol_embedding_base.SymbolEmbedding", "automata.symbol_embedding.symbol_embedding_base.SymbolDocEmbedding", "automata.memory_store.symbol_code_embedding_handler.SymbolCodeEmbeddingHandler.__init__", "automata.symbol_embedding.symbol_embedding_builders.SymbolCodeEmbeddingBuilder", "automata.symbol_embedding.symbol_embedding_base.SymbolCodeEmbedding"], "k": 20}
{"task_id": "ContextCodeRetrieval/615", "query": "What is the utility that adds options related to the configuration of an agent in the command-line interface?", "truth_top_match": "automata.cli.options.agent_options", "top_k_matches": ["automata.cli.options.agent_options", "automata.cli.commands.configure", "automata.cli.commands.run_agent", "automata.config.config_base.AgentConfigName", "automata.tests.unit.cli.test_cli_commands.test_cli_run_agent", "automata.cli.options.eval_options", "automata.agent.agent.AgentToolkitNames", "automata.config.config_base.AgentConfigBuilder.with_verbose", "automata.tests.unit.automata_agent.test_automata_agent_builder.test_builder_accepts_all_fields", "automata.cli.options.common_options"], "k": 20}
{"task_id": "ContextCodeRetrieval/616", "query": "What abstract base class is used for context components?", "truth_top_match": "automata.experimental.code_parsers.py.context_processing.context_retriever.BaseContextComponent", "top_k_matches": ["automata.experimental.code_parsers.py.context_processing.context_retriever.ContextComponent", "automata.experimental.code_parsers.py.context_processing.context_retriever.BaseContextComponent", "automata.experimental.code_parsers.py.context_processing.context_retriever.PyContextRetriever.__init__", "automata.experimental.code_parsers.py.context_processing.context_retriever.PyContextRetriever", "automata.tests.unit.context_retriever.test_context_retriever.test_class_inheritance", "automata.experimental.code_parsers.py.context_processing.context_handler.PyContextHandler", "automata.tests.unit.context_retriever.test_context_retriever.test_constructor_and_attributes", "automata.tests.unit.context_retriever.test_context_retriever.test_class_inheritance_in_source_code", "automata.llm.llm_base.LLMConversation", "automata.tests.unit.context_retriever.test_context_handler.test_construct_symbol_context_interface"], "k": 20}
{"task_id": "ContextCodeRetrieval/617", "query": "What command is used for configuring environment variables for Automata?", "truth_top_match": "automata.cli.commands.configure", "top_k_matches": ["automata.cli.commands.configure", "automata.tests.unit.cli.test_cli_commands.test_configure_load_env_vars_called", "automata.core.run_handlers.initialize_automata", "automata.cli.env_operations.update_key_value", "automata.tests.unit.cli.test_cli_commands.test_configure_setup_files_called", "automata.config.openai_config.OpenAIAutomataAgentConfig", "automata.tasks.task_environment.AutomataTaskEnvironment", "automata.tests.unit.cli.test_cli_env_operations.test_load_env_vars", "automata.tests.unit.automata_agent.test_automata_agent_builder.test_builder_default_config", "automata.core.run_handlers.run_setup"], "k": 20}
{"task_id": "ContextCodeRetrieval/618", "query": "Which method changes the logging configuration for the local project?", "truth_top_match": "automata.cli.commands.configure_logging", "top_k_matches": ["automata.cli.commands.configure_logging", "automata.tasks.automata_task.AutomataTask.initialize_logging", "automata.cli.env_operations.update_key_value", "automata.tests.unit.task.test_task_executor.patch_logging", "automata.cli.commands.configure", "automata.tests.unit.cli.test_cli_commands.test_cli_run_doc_post_process", "automata.cli.install_indexing.generate_local_indices", "automata.cli.env_operations.update_graph_type", "automata.tests.unit.task.test_task.mock_logging_config_dict", "automata.cli.cli_output_logger.CustomLogger"], "k": 20}
{"task_id": "ContextCodeRetrieval/619", "query": "Which method of the GitHubClient is used to check if a branch exists on GitHub?", "truth_top_match": "automata.singletons.github_client.GitHubClient.branch_exists", "top_k_matches": ["automata.tests.unit.github.test_github_client.test_branch_exists", "automata.tests.unit.singletons.test_singletons_github_client.test_branch_exists", "automata.singletons.github_client.GitHubClient.branch_exists", "automata.tests.unit.singletons.test_singletons_github_client.test_checkout_branch", "automata.singletons.github_client.RepositoryClient.branch_exists", "automata.tests.unit.singletons.test_singletons_github_client.test_create_branch", "automata.tests.unit.singletons.test_singletons_github_client.test_create_pull_request", "automata.tests.unit.singletons.test_singletons_github_client.test_commit_and_push_changes", "automata.singletons.github_client.GitHubClient", "automata.tests.unit.singletons.test_singletons_github_client.test_stage_all_changes"], "k": 20}
{"task_id": "ContextCodeRetrieval/620", "query": "Which class represents different categories of configuration options, corresponding to folders in '/automata/configs/'?", "truth_top_match": "automata.config.config_base.ConfigCategory", "top_k_matches": ["automata.config.config_base.ConfigCategory", "automata.config.config_base.EmbeddingDataCategory", "automata.config.config_base.SerializedDataCategory", "automata.config.config_base.AgentConfigName", "automata.config.config_base.InstructionConfigVersion", "automata.tools.tool_base.Tool.Config", "automata.config.config_base.AgentConfig.Config", "automata.config.config_base.AgentConfig", "automata.config.openai_config.OpenAIAutomataAgentConfig", "automata.cli.commands.configure"], "k": 20}
{"task_id": "ContextCodeRetrieval/621", "query": "What standalone function is used to load an Index protobuf object?", "truth_top_match": "automata.symbol.graph.symbol_graph._load_index_protobuf", "top_k_matches": ["automata.symbol.graph.symbol_graph._load_index_protobuf", "automata.tests.unit.symbol.test_symbol_subgraph.symbol_graph_mocked_index", "automata.symbol.graph.graph_builder.GraphBuilder.build_graph", "automata.symbol.graph.graph_builder.GraphBuilder", "automata.tests.unit.symbol.test_symbol_subgraph.MockProtoBuf", "automata.tests.unit.cli.test_cli_scripts_run_code_embedding.test_initialize_resources", "automata.symbol.graph.symbol_graph.SymbolGraph.__init__", "automata.tests.utils.factories.static_indices_graph_static", "automata.tests.unit.symbol.test_symbol_graph_static.test_build_real_graph_and_subgraph", "automata.symbol.symbol_base.Symbol.is_protobuf"], "k": 20}
{"task_id": "ContextCodeRetrieval/622", "query": "Which method in automata.eval.tool.tool_eval_harness.ToolEvaluationHarness returns the evaluation metrics for the given function calls and expected actions?", "truth_top_match": "automata.eval.tool.tool_eval_harness.ToolEvaluationHarness.evaluate", "top_k_matches": ["automata.eval.tool.tool_eval_harness.ToolEvaluationHarness.evaluate", "automata.eval.tool.tool_eval_harness.ToolEvaluationHarness", "automata.tests.unit.tool_eval.test_tool_eval_harness_and_metrics.test_tool_evaluation_harness_and_metrics", "automata.tests.unit.agent_eval.test_agent_evaluation_harness_and_metrics.test_evaluation_harness_and_metrics", "automata.eval.tool.tool_eval.ToolEval", "automata.eval.agent.agent_eval_harness.AgentEvaluationHarness.evaluate", "automata.eval.tool.tool_eval.ToolEval.generate_eval_result", "automata.tests.unit.tool_eval.test_tool_eval_loader.test_tool_eval_loader", "automata.eval.agent.agent_eval_harness.AgentEvaluationHarness", "automata.tests.unit.tool_eval.test_symbol_search_eval.test_generate_eval_result"], "k": 20}
{"task_id": "ContextCodeRetrieval/623", "query": "What class uses the IToolExecution behaviour to execute a tool?", "truth_top_match": "automata.tools.tool_executor.ToolExecutor", "top_k_matches": ["automata.tools.tool_executor.ToolExecutor", "automata.tools.tool_executor.ToolExecution", "automata.tools.tool_executor.IToolExecution", "automata.tools.tool_executor.ToolExecutor.__init__", "automata.tests.conftest.tool_executor", "automata.tests.conftest.tool_execution", "automata.tools.tool_base.Tool", "automata.tests.unit.automata_agent.test_automata_agent.test_tool_execution", "automata.tests.unit.tool.test_tool.test_tool_execution", "automata.eval.tool.tool_eval.ToolEval"], "k": 20}
{"task_id": "ContextCodeRetrieval/624", "query": "What command is used to run the document post-processor?", "truth_top_match": "automata.cli.commands.run_doc_post_process", "top_k_matches": ["automata.cli.commands.run_doc_post_process", "automata.tests.unit.cli.test_cli_commands.test_cli_run_doc_post_process", "automata.cli.commands.run_doc_embedding", "automata.tests.unit.cli.test_cli_scripts_run_doc_post_process.test_main_without_kwargs", "automata.tests.unit.cli.test_cli_scripts_run_doc_post_process.test_main_with_kwargs", "automata.tests.unit.cli.test_cli_commands.test_cli_run_doc_embedding", "automata.tests.unit.sample_modules.sample.Person.run", "automata.tests.unit.code_writers.test_py_doc_writer.test_write_documentation", "automata.cli.commands.run_code_embedding", "automata.cli.scripts.run_doc_post_process.main"], "k": 20}
{"task_id": "ContextCodeRetrieval/625", "query": "What class is responsible for handling the embedding of symbols?", "truth_top_match": "automata.experimental.memory_store.symbol_doc_embedding_handler.SymbolDocEmbeddingHandler", "top_k_matches": ["automata.symbol_embedding.symbol_embedding_handler.SymbolEmbeddingHandler", "automata.experimental.memory_store.symbol_doc_embedding_handler.SymbolDocEmbeddingHandler", "automata.memory_store.symbol_code_embedding_handler.SymbolCodeEmbeddingHandler", "automata.embedding.embedding_base.EmbeddingHandler", "automata.symbol_embedding.symbol_embedding_base.SymbolEmbedding", "automata.symbol_embedding.symbol_embedding_base.SymbolCodeEmbedding", "automata.experimental.symbol_embedding.symbol_doc_embedding_builder.SymbolDocEmbeddingBuilder", "automata.embedding.embedding_base.EmbeddingBuilder", "automata.symbol_embedding.symbol_embedding_base.SymbolDocEmbedding", "automata.experimental.memory_store.symbol_doc_embedding_handler.SymbolDocEmbeddingHandler.process_embedding"], "k": 20}
{"task_id": "ContextCodeRetrieval/626", "query": "What function initializes the py_module_loader with a specific project name and root file path?", "truth_top_match": "automata.cli.cli_utils.initialize_py_module_loader", "top_k_matches": ["automata.cli.cli_utils.initialize_py_module_loader", "automata.singletons.py_module_loader.PyModuleLoader.initialize", "automata.tests.unit.module_loader.test_module_loader.setup_module_loader", "automata.core.run_handlers.initialize_automata", "automata.tests.unit.task.test_task_executor.module_loader", "automata.tests.unit.context_retriever.test_context_handler.local_module_loader", "automata.tests.unit.context_retriever.test_context_retriever.local_module_loader", "automata.tests.unit.symbol.test_symbol_utils.local_module_loader", "automata.tests.unit.module_loader.test_module_loader.test_multiple_initializations", "automata.tests.unit.code_writers.test_py_writer.module_loader"], "k": 20}
{"task_id": "ContextCodeRetrieval/627", "query": "Which class registers and tracks instances of ISymbolProvider?", "truth_top_match": "automata.context_providers.symbol_synchronization_context.SymbolProviderRegistry", "top_k_matches": ["automata.context_providers.symbol_synchronization_context.SymbolProviderRegistry", "automata.context_providers.symbol_synchronization_context.SymbolProviderRegistry.register_provider", "automata.context_providers.symbol_synchronization_context.SymbolProviderSynchronizationContext.register_provider", "automata.context_providers.symbol_synchronization_context.SymbolProviderSynchronizationContext", "automata.singletons.dependency_factory.DependencyFactory._synchronize_provider", "automata.symbol.symbol_base.ISymbolProvider", "automata.symbol.graph.symbol_graph.SymbolGraph", "automata.context_providers.symbol_synchronization_context.SymbolProviderSynchronizationContext.synchronize", "automata.context_providers.symbol_synchronization_context.SymbolProviderRegistry.reset", "automata.symbol_embedding.symbol_embedding_handler.SymbolEmbeddingHandler"], "k": 20}
{"task_id": "ContextCodeRetrieval/628", "query": "What function gets the docstring from the specified node?", "truth_top_match": "automata.core.ast_handlers.get_docstring_from_node", "top_k_matches": ["automata.core.ast_handlers.get_docstring_from_node", "automata.code_parsers.py.py_reader.PyReader.get_docstring_from_node", "automata.tests.unit.ast_utils.test_ast_utils.test_get_docstring_from_node_with_docstring", "automata.tests.unit.ast_utils.test_ast_utils.test_get_docstring_from_node_without_docstring", "automata.code_parsers.py.py_reader.PyReader.get_docstring", "automata.tests.unit.ast_utils.test_ast_utils.test_get_docstring_from_node_with_none_node", "automata.core.ast_handlers.DocstringRemover", "automata.tests.unit.ast_utils.test_ast_utils.test_get_node_without_docstrings", "automata.tests.unit.code_readers.test_py_reader.test_get_docstring_from_node", "automata.tools.builders.py_reader_builder.PyReaderToolkitBuilder._run_indexer_retrieve_docstring"], "k": 20}
{"task_id": "ContextCodeRetrieval/629", "query": "How can DependencyFactory create `PyReader` instance?", "truth_top_match": "automata.singletons.dependency_factory.DependencyFactory.create_py_reader", "top_k_matches": ["automata.singletons.dependency_factory.DependencyFactory.create_py_reader", "automata.tests.unit.code_readers.test_py_reader.getter", "automata.singletons.dependency_factory.DependencyFactory.create_py_writer", "automata.code_writers.py.py_code_writer.PyCodeWriter.__init__", "automata.tests.unit.code_writers.test_py_writer.py_writer", "automata.tools.builders.py_reader_builder.PyReaderToolkitBuilder.__init__", "automata.tests.unit.singletons.test_singletons_dependency_factory.dependency_factory", "automata.tests.unit.code_readers.test_py_reader_tool.test_init", "automata.tests.unit.code_readers.test_py_reader_tool.python_retriever_tool_builder", "automata.singletons.dependency_factory.DependencyFactory.create_py_context_retriever"], "k": 20}
{"task_id": "ContextCodeRetrieval/630", "query": "What class represents the bounding box of a symbol?", "truth_top_match": "automata.core.ast_handlers.BoundingBox", "top_k_matches": ["automata.core.ast_handlers.BoundingBox", "automata.symbol.graph.symbol_navigator.process_symbol_bounds", "automata.symbol.symbol_base.Symbol", "automata.core.ast_handlers.LineItem", "automata.tests.unit.ast_utils.test_ast_utils_bounding_box.test_fetch_bounding_box_with_class_node", "automata.symbol.graph.symbol_graph_types.SymbolGraphType", "automata.symbol.graph.symbol_navigator.SymbolGraphNavigator", "automata.symbol_embedding.symbol_embedding_base.SymbolEmbedding", "automata.symbol.graph.symbol_navigator.SymbolGraphNavigator._pre_compute_rankable_bounding_boxes", "automata.symbol_embedding.symbol_embedding_handler.SymbolEmbeddingHandler"], "k": 20}
{"task_id": "ContextCodeRetrieval/631", "query": "Which class in automata.eval.tool.tool_eval_harness loads a list of function calls and their expected actions from a JSON file?", "truth_top_match": "automata.eval.tool.tool_eval_harness.ToolEvalSetLoader", "top_k_matches": ["automata.eval.tool.tool_eval_harness.ToolEvalSetLoader", "automata.eval.tool.tool_eval_harness.ToolEvaluationHarness", "automata.eval.tool.tool_eval_harness.ToolEvalSetLoader.__init__", "automata.tests.unit.tool_eval.test_tool_eval_loader.test_tool_eval_loader", "automata.eval.agent.agent_eval_harness.AgentEvalSetLoader", "automata.cli.scripts.run_tool_eval.run_eval_harness", "automata.cli.scripts.run_agent_eval.run_eval_harness", "automata.eval.tool.tool_eval_harness.ToolEvaluationHarness.evaluate", "automata.tests.unit.tool_eval.test_tool_eval_harness_and_metrics.test_tool_evaluation_harness_and_metrics", "automata.eval.tool.tool_eval.ToolEval"], "k": 20}
{"task_id": "ContextCodeRetrieval/632", "query": "What function gets the path to the root of the Automata python code directory?", "truth_top_match": "automata.core.utils.get_root_py_fpath", "top_k_matches": ["automata.core.utils.get_root_fpath", "automata.core.utils.get_root_py_fpath", "automata.core.utils.get_config_fpath", "automata.core.utils.get_embedding_data_fpath", "automata.core.run_handlers.initialize_automata", "automata.cli.install_indexing.get_project_paths", "automata.singletons.py_module_loader.PyModuleLoader.initialize", "automata.symbol.symbol_utils.load_data_path", "automata.tests.unit.module_loader.test_module_loader.root_path", "automata.code_parsers.py.py_reader.PyReader.get_source_code"], "k": 20}
{"task_id": "ContextCodeRetrieval/633", "query": "What function is used to retrieve the arguments for a specified method in AST?", "truth_top_match": "automata.experimental.code_parsers.py.context_processing.context_utils._get_method_arguments", "top_k_matches": ["automata.experimental.code_parsers.py.context_processing.context_utils._get_method_arguments", "automata.experimental.code_parsers.py.context_processing.context_utils.get_all_methods", "automata.tests.unit.code_writers.test_py_writer.test_create_function_with_arguments", "automata.tests.unit.context_retriever.test_context_retriever.testis_private_method", "automata.tests.unit.context_retriever.test_context_retriever.testget_all_methods", "automata.tests.unit.code_readers.test_py_reader.test_get_docstring_from_node", "automata.tests.unit.context_retriever.test_context_retriever.test_get_method_return_annotation", "automata.tests.unit.ast_utils.test_ast_utils_bounding_box.test_fetch_bounding_box_with_method_node", "automata.tests.unit.context_retriever.test_context_retriever.testprocess_method", "automata.tests.unit.context_retriever.test_context_retriever.test_dunder_is_not_private"], "k": 20}
{"task_id": "ContextCodeRetrieval/634", "query": "How is a simple hashable key generated from a Symbol in JSONSymbolEmbeddingVectorDatabase?", "truth_top_match": "automata.symbol_embedding.vector_databases.JSONSymbolEmbeddingVectorDatabase.entry_to_key", "top_k_matches": ["automata.symbol_embedding.vector_databases.JSONSymbolEmbeddingVectorDatabase", "automata.tests.unit.database.test_database_vector.test_lookup_symbol", "automata.tests.unit.database.test_database_vector.test_load", "automata.tests.unit.database.test_database_vector.test_add_symbol", "automata.tests.unit.database.test_database_vector.test_add_symbols", "automata.tests.unit.database.test_database_vector.test_delete_symbol", "automata.tests.unit.database.test_database_vector.test_lookup_symbol_fail", "automata.symbol_embedding.symbol_embedding_base.SymbolCodeEmbedding", "automata.tests.unit.database.test_database_vector.test_save", "automata.symbol_embedding.vector_databases.IEmbeddingLookupProvider.embedding_to_key"], "k": 20}
{"task_id": "ContextCodeRetrieval/635", "query": "Which method checks if a directory is the root directory?", "truth_top_match": "automata.code_parsers.directory.Directory.is_root_dir", "top_k_matches": ["automata.code_parsers.directory.Directory.is_root_dir", "automata.code_parsers.directory.Directory.is_leaf_dir", "automata.code_parsers.directory.DirectoryManager._load_directory_structure", "automata.tests.unit.directory_manager.test_directory_manager.test_load_directory_structure", "automata.core.utils.get_root_py_fpath", "automata.tests.unit.module_loader.test_module_loader.test_directory_without_init", "automata.core.utils.get_root_fpath", "automata.singletons.py_module_loader.PyModuleLoader._assert_initialized", "automata.code_parsers.directory.DirectoryManager", "automata.tests.unit.code_writers.test_py_doc_writer.test_init"], "k": 20}
{"task_id": "ContextCodeRetrieval/636", "query": "What method is used to reset the conversation?", "truth_top_match": "automata.llm.providers.openai_llm.OpenAIChatCompletionProvider.reset", "top_k_matches": ["automata.llm.providers.openai_llm.OpenAIChatCompletionProvider.reset", "automata.llm.llm_base.LLMConversation.reset_conversation", "automata.llm.providers.openai_llm.OpenAIConversation.reset_conversation", "automata.llm.llm_base.LLMChatCompletionProvider.reset", "automata.tasks.task_base.TaskEnvironment.reset", "automata.llm.llm_base.LLMConversation.__len__", "automata.llm.llm_base.LLMConversation.LLMEmptyConversationError.__init__", "automata.llm.providers.openai_llm.OpenAIConversation.__init__", "automata.tests.unit.conversation_database.test_conversation_database.test_put_message_increments_interaction_id", "automata.tests.conftest.conversation_db"], "k": 20}
{"task_id": "ContextCodeRetrieval/637", "query": "What static method in SymbolProviderRegistry is used to reset the registry?", "truth_top_match": "automata.context_providers.symbol_synchronization_context.SymbolProviderRegistry.reset", "top_k_matches": ["automata.context_providers.symbol_synchronization_context.SymbolProviderRegistry.reset", "automata.context_providers.symbol_synchronization_context.SymbolProviderRegistry", "automata.singletons.dependency_factory.DependencyFactory.reset", "automata.context_providers.symbol_synchronization_context.SymbolProviderSynchronizationContext.synchronize", "automata.context_providers.symbol_synchronization_context.SymbolProviderRegistry.synchronize", "automata.tests.unit.synchronizer.test_synchronizer.test_synchronize", "automata.context_providers.symbol_synchronization_context.SymbolProviderSynchronizationContext", "automata.context_providers.symbol_synchronization_context.SymbolProviderRegistry.register_provider", "automata.singletons.py_module_loader.PyModuleLoader.reset", "automata.singletons.toolkit_registry.OpenAIAutomataAgentToolkitRegistry.initialize"], "k": 20}
{"task_id": "ContextCodeRetrieval/638", "query": "What class is used to represent a headline context component?", "truth_top_match": "automata.experimental.code_parsers.py.context_processing.context_retriever.HeadlineContextComponent", "top_k_matches": ["automata.experimental.code_parsers.py.context_processing.context_retriever.ContextComponent", "automata.experimental.code_parsers.py.context_processing.context_retriever.HeadlineContextComponent", "automata.tests.unit.context_retriever.test_context_retriever.test_process_headline", "automata.experimental.code_parsers.py.context_processing.context_retriever.PyContextRetriever.__init__", "automata.experimental.code_parsers.py.context_processing.context_retriever.BaseContextComponent", "automata.experimental.code_parsers.py.context_processing.context_retriever.PyContextRetriever", "automata.tests.unit.context_retriever.test_context_retriever.test_class_inheritance", "automata.tests.unit.context_retriever.test_context_retriever.test_constructor_and_attributes", "automata.experimental.code_parsers.py.context_processing.context_handler.PyContextHandler", "automata.tests.unit.context_retriever.test_context_retriever.test_class_inheritance_in_source_code"], "k": 20}
{"task_id": "ContextCodeRetrieval/639", "query": "How to convert an OpenAIFunction to a dictionary?", "truth_top_match": "automata.llm.providers.openai_llm.OpenAIFunction.to_dict", "top_k_matches": ["automata.llm.providers.openai_llm.OpenAIFunction", "automata.eval.agent.openai_function_eval.OpenAIFunctionCallAction.to_payload", "automata.eval.agent.openai_function_eval.OpenAIFunctionCallAction", "automata.tests.conftest.function_evaluator", "automata.eval.agent.openai_function_eval.OpenAIFunctionCallAction.from_payload", "automata.eval.agent.openai_function_eval.OpenAIFunctionCallAction.__repr__", "automata.llm.llm_base.FunctionCall.to_dict", "automata.agent.openai_agent.OpenAIAutomataAgent.functions", "automata.eval.agent.openai_function_eval.OpenAIFunctionEval.__repr__", "automata.llm.llm_base.FunctionCall"], "k": 20}
{"task_id": "ContextCodeRetrieval/640", "query": "Which method in the PyReader class is responsible for getting code for a specified module, class, or function/method?", "truth_top_match": "automata.code_parsers.py.py_reader.PyReader.get_source_code", "top_k_matches": ["automata.code_parsers.py.py_reader.PyReader", "automata.code_parsers.py.py_reader.PyReader.get_source_code", "automata.tools.builders.py_reader_builder.PyReaderToolkitBuilder._run_indexer_retrieve_code", "automata.code_parsers.py.py_reader.PyReader.get_source_code_without_docstrings", "automata.code_parsers.py.py_reader.PyReader.get_docstring", "automata.tools.builders.py_reader_builder.PyReaderToolkitBuilder", "automata.tests.unit.code_readers.test_py_reader.test_get_code_module", "automata.tests.unit.code_writers.test_py_writer.test_write_and_retrieve_mock_code", "automata.tests.unit.code_writers.test_py_writer.py_writer", "automata.code_writers.py.py_code_writer.PyCodeWriter"], "k": 20}
{"task_id": "ContextCodeRetrieval/641", "query": "Which method is used to create an AgentConfigBuilder instance using an existing configuration object?", "truth_top_match": "automata.config.config_base.AgentConfigBuilder.from_config", "top_k_matches": ["automata.config.config_base.AgentConfigBuilder.from_config", "automata.config.config_base.AgentConfigBuilder.from_name", "automata.config.openai_config.OpenAIAutomataAgentConfigBuilder", "automata.config.config_base.AgentConfigBuilder", "automata.tests.unit.automata_agent.test_automata_agent_builder.test_builder_creates_proper_instance", "automata.config.config_base.AgentConfigBuilder.build", "automata.tests.conftest.automata_agent_config_builder", "automata.tests.unit.automata_agent.test_automata_agent_builder.test_builder_provided_parameters_override_defaults", "automata.config.openai_config.OpenAIAutomataAgentConfigBuilder.create_from_args", "automata.tests.unit.automata_agent.test_automata_agent_builder.test_builder_default_config"], "k": 20}
{"task_id": "ContextCodeRetrieval/642", "query": "Which class is used to represent an interface context component?", "truth_top_match": "automata.experimental.code_parsers.py.context_processing.context_retriever.InterfaceContextComponent", "top_k_matches": ["automata.experimental.code_parsers.py.context_processing.context_retriever.ContextComponent", "automata.tests.unit.context_retriever.test_context_retriever.test_process_symbol_interface", "automata.tests.unit.context_retriever.test_context_handler.test_construct_symbol_context_no_interface", "automata.tests.unit.context_retriever.test_context_retriever.test_class_inheritance", "automata.experimental.code_parsers.py.context_processing.context_retriever.PyContextRetriever.__init__", "automata.tests.unit.context_retriever.test_context_handler.test_construct_symbol_context_interface", "automata.experimental.code_parsers.py.context_processing.context_retriever.BaseContextComponent", "automata.tests.unit.context_retriever.test_context_retriever.test_interface", "automata.tests.unit.context_retriever.test_context_retriever.test_constructor_and_attributes", "automata.tests.unit.context_retriever.test_context_retriever.test_interface_recursion_error"], "k": 20}
{"task_id": "ContextCodeRetrieval/643", "query": "How to get content of a language model completion result?", "truth_top_match": "automata.llm.llm_base.LLMCompletionResult.get_content", "top_k_matches": ["automata.llm.llm_base.LLMCompletionResult.get_content", "automata.llm.llm_base.LLMCompletionResult", "automata.llm.providers.openai_llm.OpenAIChatCompletionResult", "automata.llm.providers.openai_llm.OpenAIChatMessage.from_completion_result", "automata.experimental.scripts.run_update_tool_eval.call_completion_provider", "automata.llm.providers.openai_llm.OpenAIChatCompletionProvider.get_next_assistant_completion", "automata.llm.providers.openai_llm.OpenAIChatCompletionResult.from_args", "automata.tests.unit.task.test_task_executor.mock_openai_response_with_completion_message", "automata.tests.unit.automata_agent.test_automata_agent.mock_openai_response_with_completion_message", "automata.agent.openai_agent.OpenAIAutomataAgent.get_result"], "k": 20}
{"task_id": "ContextCodeRetrieval/644", "query": "Which method gets a list of subdirectories in the given directory?", "truth_top_match": "automata.code_parsers.directory.DirectoryManager.get_subdirectories", "top_k_matches": ["automata.code_parsers.directory.Directory.get_subdirectories", "automata.code_parsers.directory.DirectoryManager.get_subdirectories", "automata.tests.unit.directory_manager.test_directory_manager.test_get_subdirectories", "automata.code_parsers.directory.DirectoryManager.get_files_in_dir", "automata.code_parsers.directory.Directory.get_file_names", "automata.tests.unit.directory_manager.test_directory_manager.test_get_files_in_dir", "automata.code_parsers.directory.DirectoryManager._load_directory_structure", "automata.code_parsers.directory.Directory.is_leaf_dir", "automata.code_parsers.directory.Directory", "automata.tests.unit.directory_manager.test_directory_manager.test_load_directory_structure"], "k": 20}
{"task_id": "ContextCodeRetrieval/645", "query": "What static method creates a new OpenAIAutomataAgentConfig?", "truth_top_match": "automata.config.openai_config.OpenAIAutomataAgentConfigBuilder.create_config", "top_k_matches": ["automata.config.openai_config.OpenAIAutomataAgentConfigBuilder.create_config", "automata.config.openai_config.OpenAIAutomataAgentConfigBuilder", "automata.tests.unit.automata_agent.test_automata_agent_builder.test_builder_creates_proper_instance", "automata.config.openai_config.OpenAIAutomataAgentConfig.load", "automata.config.openai_config.OpenAIAutomataAgentConfigBuilder.create_from_args", "automata.tests.conftest.automata_agent_config_builder", "automata.tasks.task_executor.IAutomataTaskExecution._build_agent", "automata.config.openai_config.OpenAIAutomataAgentConfig", "automata.tests.conftest.automata_agent", "automata.agent.openai_agent.OpenAIAutomataAgent"], "k": 20}
{"task_id": "ContextCodeRetrieval/646", "query": "What function initializes providers and prepares for symbol embedding?", "truth_top_match": "automata.cli.scripts.run_doc_embedding.initialize_providers", "top_k_matches": ["automata.cli.scripts.run_doc_embedding.initialize_providers", "automata.embedding.embedding_base.EmbeddingSimilarityCalculator.__init__", "automata.tests.unit.cli.test_cli_scripts_run_doc_embedding.test_initialize_providers", "automata.tests.unit.cli.test_cli_scripts_run_doc_embedding.test_main", "automata.embedding.embedding_base.EmbeddingBuilder.__init__", "automata.tests.regression.test_dependencies.test_automata_symbol_providers", "automata.symbol_embedding.symbol_embedding_handler.SymbolEmbeddingHandler", "automata.experimental.tools.builders.document_oracle_builder.DocumentOracleToolkitBuilder.__init__", "automata.experimental.symbol_embedding.symbol_doc_embedding_builder.SymbolDocEmbeddingBuilder", "automata.experimental.memory_store.symbol_doc_embedding_handler.SymbolDocEmbeddingHandler"], "k": 20}
{"task_id": "ContextCodeRetrieval/647", "query": "What method is used to create a new embedding for a symbol?", "truth_top_match": "automata.experimental.memory_store.symbol_doc_embedding_handler.SymbolDocEmbeddingHandler._create_new_embedding", "top_k_matches": ["automata.tests.unit.symbol_embedding.test_persistent_symbol_embedding.create_embedding", "automata.experimental.memory_store.symbol_doc_embedding_handler.SymbolDocEmbeddingHandler._create_new_embedding", "automata.experimental.memory_store.symbol_doc_embedding_handler.SymbolDocEmbeddingHandler.process_embedding", "automata.experimental.memory_store.symbol_doc_embedding_handler.SymbolDocEmbeddingHandler", "automata.tests.conftest.embedding_maker._make_embedding", "automata.symbol_embedding.symbol_embedding_handler.SymbolEmbeddingHandler.process_embedding", "automata.memory_store.symbol_code_embedding_handler.SymbolCodeEmbeddingHandler.process_embedding", "automata.symbol_embedding.symbol_embedding_builders.SymbolCodeEmbeddingBuilder.build", "automata.symbol_embedding.symbol_embedding_builders.SymbolCodeEmbeddingBuilder", "automata.experimental.symbol_embedding.symbol_doc_embedding_builder.SymbolDocEmbeddingBuilder"], "k": 20}
{"task_id": "ContextCodeRetrieval/648", "query": "How is determined if the result of the AgentEvalResult is a partial match using properties?", "truth_top_match": "automata.eval.agent.agent_eval.AgentEvalResult.is_partial_match", "top_k_matches": ["automata.eval.eval_base.EvalResult.is_partial_match", "automata.eval.agent.agent_eval.AgentEvalResult.is_partial_match", "automata.eval.agent.agent_eval.AgentEvalResult", "automata.eval.tool.search_eval.SymbolSearchEvalResult.is_partial_match", "automata.eval.eval_base.EvalResult.is_full_match", "automata.eval.tool.tool_eval_metrics.ToolEvaluationMetrics.total_partial_matches", "automata.eval.tool.tool_eval_metrics.ToolEvaluationMetrics.partial_match_rate", "automata.eval.agent.agent_eval.AgentEvalResult.is_full_match", "automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics.total_partial_matches", "automata.eval.tool.search_eval.SymbolSearchEvalResult.is_full_match"], "k": 20}
{"task_id": "ContextCodeRetrieval/649", "query": "What command is used to run the code embedding pipeline?", "truth_top_match": "automata.cli.commands.run_code_embedding", "top_k_matches": ["automata.cli.commands.run_code_embedding", "automata.cli.commands.run_doc_embedding", "automata.cli.scripts.run_code_embedding.main", "automata.tests.unit.cli.test_cli_commands.test_cli_run_code_embedding", "automata.tests.unit.cli.test_cli_commands.test_cli_run_doc_embedding", "automata.tests.unit.cli.test_cli_scripts_run_code_embedding.test_process_embeddings", "automata.cli.scripts.run_doc_embedding.main", "automata.cli.scripts.run_doc_post_process.main", "automata.tests.unit.cli.test_cli_scripts_run_code_embedding.test_main_1", "automata.tests.unit.cli.test_cli_scripts_run_code_embedding.test_process_embeddings_exception"], "k": 20}
{"task_id": "ContextCodeRetrieval/650", "query": "Which method of the OpenAI agent is responsible for getting the result of the agent?", "truth_top_match": "automata.agent.openai_agent.OpenAIAutomataAgent.get_result", "top_k_matches": ["automata.agent.openai_agent.OpenAIAutomataAgent._get_termination_tool", "automata.agent.openai_agent.OpenAIAutomataAgent.get_result", "automata.agent.openai_agent.OpenAIAutomataAgent", "automata.config.openai_config.OpenAIAutomataAgentConfig.get_llm_provider", "automata.tests.unit.automata_agent.test_automata_agent.test_iter_step_without_api_call", "automata.agent.openai_agent.OpenAIAutomataAgent._get_next_user_response", "automata.experimental.tools.builders.agentified_search_builder.AgentifiedSearchToolkitBuilder._agent_selected_best_match", "automata.llm.providers.openai_llm.OpenAIChatCompletionResult", "automata.tests.unit.automata_agent.test_automata_agent.test_chat_provider", "automata.tests.unit.automata_agent.test_automata_agent.mock_openai_response_with_completion_message"], "k": 20}
{"task_id": "ContextCodeRetrieval/651", "query": "What class contains the logic for a Symbol?", "truth_top_match": "automata.symbol.symbol_base.Symbol", "top_k_matches": ["automata.symbol.symbol_base.Symbol", "automata.symbol.symbol_parser._SymbolParser", "automata.symbol.graph.symbol_graph_types.SymbolGraphType", "automata.symbol_embedding.symbol_embedding_handler.SymbolEmbeddingHandler", "automata.tests.unit.cli.test_cli_scripts_run_doc_embedding.FakeSymbol", "automata.symbol.symbol_base.ISymbolProvider", "automata.symbol_embedding.symbol_embedding_base.SymbolEmbedding.symbol", "automata.symbol.symbol_base.SymbolReference", "automata.experimental.code_parsers.py.context_processing.context_handler.PyContextHandler", "automata.symbol.graph.symbol_graph.SymbolGraph"], "k": 20}
{"task_id": "ContextCodeRetrieval/652", "query": "How is an interface context component generated?", "truth_top_match": "automata.experimental.code_parsers.py.context_processing.context_retriever.InterfaceContextComponent.generate", "top_k_matches": ["automata.experimental.code_parsers.py.context_processing.context_retriever.ContextComponent", "automata.tests.unit.context_retriever.test_context_retriever.test_interface", "automata.tests.unit.context_retriever.test_context_retriever.test_process_symbol_interface", "automata.tests.unit.context_retriever.test_context_handler.test_construct_symbol_context_no_interface", "automata.tests.unit.context_retriever.test_context_handler.test_construct_symbol_context_interface", "automata.tests.unit.context_retriever.test_context_retriever.test_interface_recursion_error", "automata.experimental.code_parsers.py.context_processing.context_retriever.PyContextRetriever.__init__", "automata.tests.unit.context_retriever.test_context_retriever.test_class_inheritance", "automata.tests.unit.context_retriever.test_context_retriever.test_class_inheritance_in_source_code", "automata.tests.unit.context_retriever.test_context_retriever.test_interface_include_docstrings"], "k": 20}
{"task_id": "ContextCodeRetrieval/653", "query": "What private method is used to attempt execution of given code in PyInterpreter?", "truth_top_match": "automata.experimental.tools.builders.py_interpreter.PyInterpreter._attempt_execution", "top_k_matches": ["automata.experimental.tools.builders.py_interpreter.PyInterpreter", "automata.experimental.tools.builders.py_interpreter.PyInterpreter._execute_code", "automata.experimental.tools.builders.py_interpreter.PyInterpreter._attempt_execution", "automata.experimental.tools.builders.py_interpreter.PyInterpreter.__init__", "automata.experimental.tools.builders.py_interpreter.PyInterpreterToolkitBuilder.__init__", "automata.tests.unit.context_retriever.test_context_retriever.testis_private_method", "automata.experimental.tools.builders.py_interpreter.PyInterpreter.__repr__", "automata.tools.builders.py_reader_builder.PyReaderToolkitBuilder._run_indexer_retrieve_code", "automata.eval.agent.code_writing_eval.CodeWritingEval._parse_code_snippet", "automata.tests.unit.context_retriever.test_context_retriever.test_source_code_2"], "k": 20}
{"task_id": "ContextCodeRetrieval/654", "query": "What function is used to load JSON data from a file?", "truth_top_match": "automata.experimental.scripts.run_update_tool_eval.load_json_data", "top_k_matches": ["automata.eval.tool.tool_eval_harness.ToolEvalSetLoader", "automata.eval.tool.tool_eval_harness.ToolEvalSetLoader.load_json", "automata.eval.agent.agent_eval_harness.AgentEvalSetLoader.load_json", "automata.core.base.database.vector_database.JSONVectorDatabase.load", "automata.experimental.scripts.run_update_tool_eval.load_json_data", "automata.eval.agent.agent_eval_harness.AgentEvalSetLoader", "automata.eval.tool.tool_eval_harness.ToolEvalSetLoader.__init__", "automata.experimental.scripts.run_update_tool_eval.load_and_process_data", "automata.experimental.scripts.run_update_tool_eval.save_json_data", "automata.core.base.database.vector_database.JSONVectorDatabase"], "k": 20}
{"task_id": "ContextCodeRetrieval/655", "query": "What function is available to fetch all classes in a given AST?", "truth_top_match": "automata.experimental.code_parsers.py.context_processing.context_utils.get_all_classes", "top_k_matches": ["automata.experimental.code_parsers.py.context_processing.context_utils.get_all_classes", "automata.experimental.code_parsers.py.context_processing.context_utils.get_all_methods", "automata.tests.unit.context_retriever.test_context_retriever.testget_all_classes", "automata.experimental.code_parsers.py.context_processing.context_utils.get_all_attributes", "automata.code_parsers.py.py_reader.PyReader", "automata.tests.unit.context_retriever.test_context_retriever.testget_all_methods", "automata.tests.unit.ast_utils.test_ast_utils_bounding_box.test_fetch_bounding_box_with_class_node", "automata.tests.unit.ast_utils.test_ast_utils_bounding_box.test_fetch_bounding_box_with_class_node_in_file", "automata.tests.unit.context_retriever.test_context_retriever.test_nested_class_detection", "automata.tests.unit.module_loader.test_module_loader.test_load_module"], "k": 20}
{"task_id": "ContextCodeRetrieval/656", "query": "What function sets the OpenAI API key from the environment variable OPENAI_API_KEY?", "truth_top_match": "automata.core.utils.set_openai_api_key", "top_k_matches": ["automata.core.utils.set_openai_api_key", "automata.cli.commands.configure", "automata.llm.providers.openai_llm.OpenAIEmbeddingProvider.__init__", "automata.cli.env_operations.update_key_value", "automata.tests.unit.cli.test_cli_env_operations.test_load_env_vars", "automata.llm.providers.openai_llm.OpenAIChatCompletionProvider.__init__", "automata.tests.unit.cli.test_cli_env_operations.default_keys", "automata.tests.unit.cli.test_cli_env_operations.test_update_key_value", "automata.tests.unit.cli.test_cli_commands.test_configure_load_env_vars_called", "automata.config.config_base.AgentConfig.Config"], "k": 20}
{"task_id": "ContextCodeRetrieval/657", "query": "Which method filters a list of actions to only contain actions that are relevant to the eval?", "truth_top_match": "automata.eval.agent.agent_eval_composite.AgentEvalComposite._filter_actions", "top_k_matches": ["automata.eval.agent.agent_eval_composite.AgentEvalComposite._filter_actions", "automata.eval.tool.tool_eval.ToolEval._filter_actions", "automata.eval.eval_base.Eval._filter_actions", "automata.eval.agent.openai_function_eval.OpenAIFunctionEval._filter_actions", "automata.eval.eval_base.Eval", "automata.eval.tool.tool_eval.ToolEval", "automata.eval.agent.code_writing_eval.CodeWritingEval._filter_actions", "automata.eval.tool.search_eval.SymbolSearchEval", "automata.eval.agent.code_writing_eval.CodeWritingEval", "automata.eval.agent.openai_function_eval.OpenAIFunctionEval"], "k": 20}
{"task_id": "ContextCodeRetrieval/658", "query": "What abstract method is used to delete data from a table in RelationalDatabase?", "truth_top_match": "automata.core.base.database.relational_database.RelationalDatabase.delete", "top_k_matches": ["automata.core.base.database.relational_database.RelationalDatabase.delete", "automata.core.base.database.relational_database.RelationalDatabase", "automata.tests.unit.database.test_database_sql.test_delete", "automata.core.base.database.relational_database.SQLDatabase", "automata.core.base.database.relational_database.SQLDatabase.delete", "automata.llm.llm_base.LLMConversationDatabaseProvider", "automata.core.base.database.vector_database.VectorDatabaseProvider.save", "automata.core.base.database.relational_database.RelationalDatabase.close", "automata.core.base.database.vector_database.VectorDatabaseProvider.clear", "automata.tests.unit.task.test_task_database.test_get_tasks_by_query"], "k": 20}
{"task_id": "ContextCodeRetrieval/659", "query": "Which class is an abstract base class for building for agents?", "truth_top_match": "automata.agent.agent.Agent", "top_k_matches": ["automata.agent.openai_agent.OpenAIAgentToolkitBuilder", "automata.agent.agent.Agent", "automata.agent.agent.AgentToolkitBuilder", "automata.config.config_base.AgentConfig", "automata.agent.openai_agent.OpenAIAutomataAgent", "automata.llm.llm_base.LLMConversation", "automata.agent.error.AgentGeneralError", "automata.experimental.tools.builders.agentified_search_builder.AgentifiedSearchOpenAIToolkitBuilder", "automata.agent.agent.Agent._setup", "automata.agent.agent.AgentToolkitNames"], "k": 20}
{"task_id": "ContextCodeRetrieval/660", "query": "Which method in the _SymbolParser class parses a single descriptor in the list associated with the Symbol?", "truth_top_match": "automata.symbol.symbol_parser._SymbolParser.parse_descriptor", "top_k_matches": ["automata.symbol.symbol_parser._SymbolParser.parse_descriptor", "automata.symbol.symbol_parser._SymbolParser.parse_descriptors", "automata.symbol.symbol_parser._SymbolParser", "automata.symbol.symbol_base.SymbolDescriptor", "automata.tests.unit.symbol.test_symbol_base.test_parsed_symbol", "automata.tests.unit.symbol.test_symbol_base.test_parse_symbol_descriptor", "automata.symbol.symbol_parser.parse_symbol", "automata.symbol.symbol_base.Symbol", "automata.tests.unit.symbol.test_symbol_base.test_symbol_str", "automata.symbol.symbol_base.Symbol.parent"], "k": 20}
{"task_id": "ContextCodeRetrieval/661", "query": "What method in ToolEvalSetLoader formats values throughout a dictionary?", "truth_top_match": "automata.eval.tool.tool_eval_harness.ToolEvalSetLoader.format_values", "top_k_matches": ["automata.eval.tool.tool_eval_harness.ToolEvalSetLoader", "automata.tests.unit.tool_eval.test_tool_eval_loader.test_tool_eval_loader", "automata.eval.tool.tool_eval_harness.ToolEvaluationHarness.__init__", "automata.tests.unit.tool_eval.test_tool_eval_harness_and_metrics.test_tool_evaluation_harness_and_metrics", "automata.eval.tool.tool_eval_metrics.ToolEvaluationMetrics", "automata.tests.unit.tool_eval.test_tool_eval_loader.loader", "automata.eval.agent.agent_eval_harness.AgentEvalSetLoader.load_json", "automata.eval.tool.tool_eval_harness.ToolEvaluationHarness", "automata.eval.agent.agent_eval_harness.AgentEvalSetLoader", "automata.eval.tool.tool_eval.ToolEvalResult"], "k": 20}
{"task_id": "ContextCodeRetrieval/662", "query": "What method is used to filter and log symbols?", "truth_top_match": "automata.experimental.scripts.run_update_tool_eval.filter_and_log_symbols", "top_k_matches": ["automata.experimental.scripts.run_update_tool_eval.filter_and_log_symbols", "automata.symbol.symbol_base.ISymbolProvider", "automata.symbol.symbol_base.ISymbolProvider.filter_symbols", "automata.cli.scripts.run_code_embedding.process_embeddings", "automata.symbol_embedding.symbol_embedding_handler.SymbolEmbeddingHandler.filter_symbols", "automata.context_providers.symbol_synchronization_context.SymbolProviderRegistry.synchronize", "automata.symbol_embedding.symbol_embedding_handler.SymbolEmbeddingHandler", "automata.experimental.scripts.run_update_tool_eval.process_missing_symbols", "automata.symbol.graph.symbol_graph.SymbolGraph.filter_symbols", "automata.symbol.graph.symbol_caller_callees.CallerCalleeProcessor.process"], "k": 20}
{"task_id": "ContextCodeRetrieval/663", "query": "Which method is used to notify the observer when the task status changes?", "truth_top_match": "automata.tasks.task_base.Task.notify_observer", "top_k_matches": ["automata.tasks.task_base.Task.notify_observer", "automata.tests.unit.task.test_task.test_callback", "automata.core.base.patterns.observer.Observer.update", "automata.llm.llm_base.LLMConversation.notify_observers", "automata.tests.unit.task.test_task.test_status_setter", "automata.tasks.task_registry.AutomataTaskRegistry.update_task", "automata.llm.llm_base.LLMConversationDatabaseProvider.update", "automata.core.base.patterns.observer.Observer", "automata.tasks.task_base.TaskStatus", "automata.tasks.task_base.Task.status"], "k": 20}
{"task_id": "ContextCodeRetrieval/664", "query": "How to get the documentation of the best match to the input query?", "truth_top_match": "automata.experimental.tools.builders.agentified_search_builder.AgentifiedSearchToolkitBuilder._get_docs_for_best_match", "top_k_matches": ["automata.experimental.tools.builders.agentified_search_builder.AgentifiedSearchToolkitBuilder._get_docs_for_best_match", "automata.experimental.tools.builders.document_oracle_builder.DocumentOracleToolkitBuilder._get_best_match", "automata.experimental.tools.builders.agentified_search_builder.AgentifiedSearchToolkitBuilder._get_code_for_best_match", "automata.experimental.tools.builders.agentified_search_builder.AgentifiedSearchToolkitBuilder._get_top_matches", "automata.experimental.tools.builders.document_oracle_builder.DocumentOracleToolkitBuilder", "automata.experimental.tools.builders.symbol_search_builder.SymbolSearchToolkitBuilder._exact_search_processor", "automata.tests.unit.agentified_search.test_agentified_search.test_get_top_matches", "automata.tests.unit.agentified_search.test_agentified_search.test_get_docs_for_best_match", "automata.experimental.tools.builders.symbol_search_builder.SymbolSearchToolkitBuilder._retrieve_source_code_by_symbol_processor", "automata.experimental.tools.builders.agentified_search_builder.AgentifiedSearchToolkitBuilder._agent_selected_best_match"], "k": 20}
{"task_id": "ContextCodeRetrieval/665", "query": "What method is used to remove a comment from an issue on the remote repository?", "truth_top_match": "automata.singletons.github_client.GitHubClient.remove_issue_comment", "top_k_matches": ["automata.singletons.github_client.GitHubClient.remove_issue_comment", "automata.singletons.github_client.GitHubClient.create_issue_comment", "automata.singletons.github_client.GitHubClient.remove_label", "automata.singletons.github_client.GitHubClient.create_label", "automata.tests.unit.github.test_github_client.test_remove_issue_comment", "automata.singletons.github_client.GitHubClient.fetch_issue", "automata.singletons.github_client.GitHubClient.add_label", "automata.tests.unit.github.test_github_client.test_create_issue_comment", "automata.tests.unit.singletons.test_singletons_github_client.test_clone_repository", "automata.tests.unit.singletons.test_singletons_github_client.test_stage_all_changes"], "k": 20}
{"task_id": "ContextCodeRetrieval/666", "query": "What method is used to create a subgraph of the original SymbolGraph?", "truth_top_match": "automata.symbol.graph.symbol_graph.SymbolGraph._build_default_rankable_subgraph", "top_k_matches": ["automata.symbol.graph.symbol_graph.SymbolGraph", "automata.singletons.dependency_factory.DependencyFactory.create_subgraph", "automata.symbol.graph.symbol_graph.SymbolGraph._build_default_rankable_subgraph", "automata.singletons.dependency_factory.DependencyFactory.create_symbol_graph", "automata.symbol.graph.symbol_graph.SymbolGraph.from_graph", "automata.symbol.graph.symbol_graph.SymbolGraph.__init__", "automata.symbol.graph.graph_builder.GraphBuilder", "automata.symbol.graph.symbol_graph.SymbolGraph._build_rankable_subgraph", "automata.experimental.search.symbol_search.SymbolSearch", "automata.experimental.scripts.run_update_tool_eval.process_symbol_graph"], "k": 20}
{"task_id": "ContextCodeRetrieval/667", "query": "Which method in SymbolSearch class finds all references to a module, class, method, or standalone function represented by a symbol?", "truth_top_match": "automata.experimental.search.symbol_search.SymbolSearch.symbol_references", "top_k_matches": ["automata.experimental.search.symbol_search.SymbolSearch.symbol_references", "automata.symbol.graph.symbol_navigator.SymbolGraphNavigator._get_symbol_references_in_scope", "automata.symbol.graph.symbol_navigator.SymbolGraphNavigator._get_references_to_module", "automata.symbol.graph.symbol_graph.SymbolGraph.get_references_to_symbol", "automata.symbol.graph.symbol_navigator.SymbolGraphNavigator.get_references_to_symbol", "automata.tests.unit.symbol.test_symbol_search.test_symbol_references", "automata.tests.unit.symbol.test_symbol_search_tool.test_symbol_references", "automata.experimental.search.symbol_search.SymbolSearch", "automata.symbol.graph.symbol_navigator.SymbolGraphNavigator.get_potential_symbol_callees", "automata.tests.regression.test_symbol_searcher_regression.test_source_code_retrieval"], "k": 20}
{"task_id": "ContextCodeRetrieval/668", "query": "What method is used to process missing symbols?", "truth_top_match": "automata.experimental.scripts.run_update_tool_eval.process_missing_symbols", "top_k_matches": ["automata.experimental.scripts.run_update_tool_eval.process_missing_symbols", "automata.experimental.scripts.run_update_tool_eval.get_missing_symbols", "automata.experimental.memory_store.symbol_doc_embedding_handler.SymbolDocEmbeddingHandler.process_embedding", "automata.symbol_embedding.symbol_embedding_handler.SymbolEmbeddingHandler.process_embedding", "automata.embedding.embedding_base.EmbeddingHandler.process_embedding", "automata.memory_store.symbol_code_embedding_handler.SymbolCodeEmbeddingHandler.process_embedding", "automata.symbol.graph.symbol_caller_callees.CallerCalleeProcessor.process", "automata.experimental.scripts.run_update_tool_eval.process_symbol_graph", "automata.symbol.graph.symbol_references.ReferenceProcessor.process", "automata.experimental.scripts.run_update_tool_eval.process_modules"], "k": 20}
{"task_id": "ContextCodeRetrieval/669", "query": "What exception is raised when there's an issue during task execution?", "truth_top_match": "automata.eval.eval_error.EvalExecutionError", "top_k_matches": ["automata.eval.eval_error.EvalExecutionError", "automata.tasks.task_error.TaskGeneralError", "automata.tasks.task_error.TaskInstructionsError", "automata.tasks.task_error.TaskStateError", "automata.eval.tool.tool_eval_harness.EvalExecutionError", "automata.eval.agent.code_writing_eval.CodeExecutionError", "automata.tests.unit.task.test_task_executor.test_execute_automata_task_fail", "automata.code_writers.py.py_code_writer.PyCodeWriter.InvalidArgumentsError", "automata.tasks.task_executor.AutomataTaskExecutor", "automata.tasks.task_base.ITaskExecution.execute"], "k": 20}
{"task_id": "ContextCodeRetrieval/670", "query": "Which private method in the OpenAI agent is responsible for building the initial messages for the agent's conversation?", "truth_top_match": "automata.agent.openai_agent.OpenAIAutomataAgent._build_initial_messages", "top_k_matches": ["automata.llm.providers.openai_llm.OpenAIConversation.__init__", "automata.agent.openai_agent.OpenAIAutomataAgent._build_initial_messages", "automata.llm.providers.openai_llm.OpenAIChatCompletionProvider", "automata.tests.unit.automata_agent.test_automata_agent.test_build_initial_messages", "automata.llm.providers.openai_llm.OpenAIConversation", "automata.agent.openai_agent.OpenAIAutomataAgent._get_next_user_response", "automata.agent.openai_agent.OpenAIAutomataAgent.agent_responses", "automata.llm.providers.openai_llm.OpenAIChatCompletionProvider._stream_message", "automata.agent.openai_agent.OpenAIAutomataAgent", "automata.tests.unit.automata_agent.test_automata_agent.test_agent_saves_messages_to_database"], "k": 20}
{"task_id": "ContextCodeRetrieval/671", "query": "Which method in the DotPathMap class deletes a module with the given dotpath in the local store?", "truth_top_match": "automata.code_parsers.py.dotpath_map.DotPathMap.delete_module", "top_k_matches": ["automata.code_parsers.py.dotpath_map.DotPathMap.delete_module", "automata.code_parsers.py.dotpath_map.DotPathMap.contains_dotpath", "automata.singletons.py_module_loader.PyModuleLoader.delete_module", "automata.code_parsers.py.dotpath_map.DotPathMap.put_module", "automata.code_parsers.py.dotpath_map.DotPathMap.contains_fpath", "automata.code_parsers.py.dotpath_map.DotPathMap", "automata.code_parsers.py.dotpath_map.DotPathMap.get_module_fpath_by_dotpath", "automata.singletons.py_module_loader.PyModuleLoader.put_module", "automata.singletons.py_module_loader.PyModuleLoader.fetch_ast_module", "automata.code_writers.py.py_code_writer.PyCodeWriter.delete_module"], "k": 20}
{"task_id": "ContextCodeRetrieval/672", "query": "What observer method is used to update the database when the conversation changes?", "truth_top_match": "automata.llm.llm_base.LLMConversationDatabaseProvider.update", "top_k_matches": ["automata.llm.llm_base.LLMConversationDatabaseProvider.update", "automata.llm.llm_base.LLMConversationDatabaseProvider", "automata.llm.llm_base.LLMConversation.notify_observers", "automata.memory_store.conversation_database_providers.OpenAIAutomataConversationDatabase", "automata.tests.unit.automata_agent.test_automata_agent.test_db_interaction", "automata.tests.unit.conversation_database.test_conversation_database.test_put_message_increments_interaction_id", "automata.core.base.patterns.observer.Observer.update", "automata.agent.openai_agent.OpenAIAutomataAgent.set_database_provider", "automata.llm.llm_base.LLMConversation.register_observer", "automata.tests.unit.conversation_database.test_conversation_database.test_multiple_put_message_increments_interaction_id"], "k": 20}
{"task_id": "ContextCodeRetrieval/673", "query": "What abstract method is used to get an ordered list entries in VectorDatabaseProvider?", "truth_top_match": "automata.core.base.database.vector_database.VectorDatabaseProvider.get_all_ordered_embeddings", "top_k_matches": ["automata.core.base.database.vector_database.VectorDatabaseProvider", "automata.core.base.database.vector_database.VectorDatabaseProvider.get_all_ordered_embeddings", "automata.embedding.embedding_base.EmbeddingHandler.get_all_ordered_embeddings", "automata.core.base.database.vector_database.ChromaVectorDatabase", "automata.symbol_embedding.vector_databases.ChromaSymbolEmbeddingVectorDatabase", "automata.core.base.database.vector_database.JSONVectorDatabase", "automata.core.base.database.vector_database.ChromaVectorDatabase.get_all_ordered_embeddings", "automata.symbol_embedding.vector_databases.ChromaSymbolEmbeddingVectorDatabase.get_all_ordered_embeddings", "automata.symbol_embedding.vector_databases.JSONSymbolEmbeddingVectorDatabase", "automata.core.base.database.vector_database.VectorDatabaseProvider.get_ordered_keys"], "k": 20}
{"task_id": "ContextCodeRetrieval/674", "query": "What method is used to add edges for references between `Symbol` nodes in the `MultiDiGraph`?", "truth_top_match": "automata.symbol.graph.symbol_references.ReferenceProcessor.process", "top_k_matches": ["automata.symbol.graph.symbol_references.ReferenceProcessor", "automata.symbol.graph.symbol_caller_callees.CallerCalleeProcessor.process", "automata.symbol.graph.symbol_references.ReferenceProcessor.process", "automata.symbol.graph.symbol_relationships.RelationshipProcessor.process", "automata.symbol.graph.symbol_caller_callees.CallerCalleeProcessor", "automata.symbol.graph.symbol_relationships.RelationshipProcessor", "automata.symbol.graph.symbol_navigator.SymbolGraphNavigator.get_references_to_symbol", "automata.symbol.graph.graph_builder.GraphBuilder._process_relationships", "automata.symbol.graph.graph_builder.GraphBuilder._add_symbol_vertices", "automata.symbol.graph.graph_builder.GraphBuilder._process_references"], "k": 20}
{"task_id": "ContextCodeRetrieval/675", "query": "Which method of DocstringRemover is responsible for visiting a node in the AST?", "truth_top_match": "automata.core.ast_handlers.DocstringRemover.visit", "top_k_matches": ["automata.core.ast_handlers.DocstringRemover", "automata.core.ast_handlers.get_node_without_docstrings", "automata.core.ast_handlers.ImportRemover", "automata.core.ast_handlers.DocstringRemover.visit", "automata.core.ast_handlers.ImportRemover.visit", "automata.core.ast_handlers.get_docstring_from_node", "automata.code_parsers.py.py_reader.PyReader.get_docstring_from_node", "automata.code_parsers.py.py_reader.PyReader", "automata.code_parsers.py.py_reader.PyReader.get_docstring", "automata.core.ast_handlers.get_node_without_imports"], "k": 20}
{"task_id": "ContextCodeRetrieval/676", "query": "What class creates a composite evaluator from a list of evaluator classes?", "truth_top_match": "automata.eval.agent.agent_eval_composite.AgentEvalComposite", "top_k_matches": ["automata.eval.agent.agent_eval_composite.AgentEvalComposite", "automata.tests.conftest.composite_evaluator", "automata.eval.agent.agent_eval_composite.AgentEvalComposite.__init__", "automata.eval.agent.agent_eval_harness.AgentEvaluationHarness", "automata.eval.agent.agent_eval_composite.check_eval_uniqueness", "automata.eval.tool.tool_eval_harness.ToolEvaluationHarness", "automata.eval.eval_base.Eval", "automata.eval.tool.tool_eval_harness.EvalExecutionError", "automata.tests.unit.agent_eval.test_agent_eval_actions_results.test_code_execution_error", "automata.eval.tool.tool_eval_metrics.ToolEvaluationMetrics"], "k": 20}
{"task_id": "ContextCodeRetrieval/677", "query": "How does the toolkit return the source code for a given symbol?", "truth_top_match": "automata.experimental.tools.builders.symbol_search_builder.SymbolSearchToolkitBuilder._retrieve_source_code_by_symbol_processor", "top_k_matches": ["automata.experimental.search.symbol_search.SymbolSearch.retrieve_source_code_by_symbol", "automata.tests.unit.symbol.test_symbol_search.test_retrieve_source_code_by_symbol", "automata.tests.unit.symbol.test_symbol_search_tool.test_retrieve_source_code_by_symbol", "automata.embedding.embedding_base.EmbeddingBuilder.fetch_embedding_source_code", "automata.experimental.tools.builders.symbol_search_builder.SymbolSearchToolkitBuilder._retrieve_source_code_by_symbol_processor", "automata.experimental.code_parsers.py.context_processing.context_retriever.SourceCodeContextComponent", "automata.symbol_embedding.symbol_embedding_builders.SymbolCodeEmbeddingBuilder.build", "automata.experimental.symbol_embedding.symbol_doc_embedding_builder.SymbolDocEmbeddingBuilder.build", "automata.experimental.symbol_embedding.symbol_doc_embedding_builder.SymbolDocEmbeddingBuilder.build_non_class", "automata.tests.regression.test_symbol_searcher_regression.test_source_code_retrieval"], "k": 20}
{"task_id": "ContextCodeRetrieval/678", "query": "How do we get relationships of a symbol in SymbolGraph?", "truth_top_match": "automata.symbol.graph.symbol_graph.SymbolGraph.get_symbol_relationships", "top_k_matches": ["automata.symbol.graph.symbol_navigator.SymbolGraphNavigator.get_symbol_relationships", "automata.symbol.graph.symbol_graph.SymbolGraph.get_symbol_relationships", "automata.symbol.graph.symbol_relationships.RelationshipProcessor.process", "automata.symbol.graph.symbol_graph.SymbolGraph", "automata.symbol.graph.symbol_relationships.RelationshipProcessor", "automata.experimental.scripts.run_update_tool_eval.process_symbol_graph", "automata.symbol.graph.symbol_navigator.SymbolGraphNavigator.get_references_to_symbol", "automata.experimental.code_parsers.py.context_processing.context_handler.PyContextHandler.get_symbol_dependencies", "automata.symbol.graph.graph_builder.GraphBuilder._process_caller_callee_relationships", "automata.symbol.graph.symbol_navigator.SymbolGraphNavigator.get_potential_symbol_callees"], "k": 20}
{"task_id": "ContextCodeRetrieval/679", "query": "What function is used as an entry point for doc post processing?", "truth_top_match": "automata.cli.scripts.run_doc_post_process.main", "top_k_matches": ["automata.cli.commands.run_doc_post_process", "automata.tests.unit.cli.test_cli_commands.test_cli_run_doc_post_process", "automata.tests.unit.cli.test_cli_scripts_run_doc_post_process.test_main_with_kwargs", "automata.tests.unit.cli.test_cli_scripts_run_doc_post_process.test_main_without_kwargs", "automata.cli.commands.run_doc_embedding", "automata.tests.unit.sample_modules.sample3.my_function", "automata.tests.unit.cli.test_cli_commands.test_cli_run_doc_embedding", "automata.cli.scripts.run_doc_post_process.main", "automata.tests.unit.cli.test_cli_scripts_run_doc_embedding.test_main", "automata.core.ast_handlers.DocstringRemover"], "k": 20}
{"task_id": "ContextCodeRetrieval/680", "query": "How can DependencyFactory create `PyContextHandler` instance?", "truth_top_match": "automata.singletons.dependency_factory.DependencyFactory.create_py_context_handler", "top_k_matches": ["automata.singletons.dependency_factory.DependencyFactory.create_py_context_handler", "automata.tests.unit.context_retriever.test_context_handler.context_handler", "automata.singletons.dependency_factory.DependencyFactory.create_py_context_retriever", "automata.tests.unit.singletons.test_singletons_dependency_factory.dependency_factory", "automata.tests.unit.context_retriever.test_context_retriever.context_retriever", "automata.experimental.code_parsers.py.context_processing.context_handler.PyContextHandlerConfig", "automata.experimental.code_parsers.py.context_processing.context_handler.PyContextHandler", "automata.singletons.dependency_factory.DependencyFactory", "automata.singletons.dependency_factory.DependencyFactory.create_py_reader", "automata.singletons.dependency_factory.DependencyFactory.create_symbol_doc_embedding_handler"], "k": 20}
{"task_id": "ContextCodeRetrieval/681", "query": "What property is used to retrieve the total number of evaluations?", "truth_top_match": "automata.eval.tool.tool_eval_metrics.ToolEvaluationMetrics.total_evaluations", "top_k_matches": ["automata.eval.tool.tool_eval_metrics.ToolEvaluationMetrics.total_evaluations", "automata.eval.tool.tool_eval_metrics.ToolEvaluationMetrics.partial_match_rate", "automata.eval.tool.tool_eval_metrics.ToolEvaluationMetrics.full_match_rate", "automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics.total_actions", "automata.tests.unit.agent_eval.test_agent_evaluation_harness_and_metrics.test_evaluation_harness_and_metrics", "automata.eval.tool.tool_eval_metrics.ToolEvaluationMetrics", "automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics.total_extra_actions", "automata.tests.unit.tool_eval.test_tool_eval_harness_and_metrics.test_tool_evaluation_harness_and_metrics", "automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics.total_successful_actions", "automata.eval.tool.tool_eval_metrics.ToolEvaluationMetrics.__str__"], "k": 20}
{"task_id": "ContextCodeRetrieval/682", "query": "What private method is used to process relationships between `Symbol` nodes?", "truth_top_match": "automata.symbol.graph.graph_builder.GraphBuilder._process_relationships", "top_k_matches": ["automata.symbol.graph.symbol_relationships.RelationshipProcessor.process", "automata.symbol.graph.graph_builder.GraphBuilder._process_caller_callee_relationships", "automata.symbol.graph.symbol_graph.SymbolGraph.get_symbol_relationships", "automata.symbol.graph.graph_builder.GraphBuilder._process_relationships", "automata.symbol.graph.symbol_navigator.SymbolGraphNavigator.get_symbol_relationships", "automata.symbol.graph.symbol_caller_callees.CallerCalleeProcessor.process", "automata.symbol.graph.graph_builder.GraphBuilder._process_references", "automata.symbol.graph.symbol_relationships.RelationshipProcessor", "automata.symbol.graph.symbol_references.ReferenceProcessor.process", "automata.symbol.graph.symbol_graph.SymbolGraph"], "k": 20}
{"task_id": "ContextCodeRetrieval/683", "query": "What class provides a concrete implementation of the abstract TaskEnvironment for Automata providers?", "truth_top_match": "automata.tasks.task_environment.AutomataTaskEnvironment", "top_k_matches": ["automata.tasks.task_environment.AutomataTaskEnvironment", "automata.tasks.task_base.TaskEnvironment", "automata.tasks.task_executor.IAutomataTaskExecution", "automata.tasks.task_error.TaskStateError", "automata.tasks.task_error.TaskGeneralError", "automata.tasks.task_executor.AutomataTaskExecutor", "automata.eval.eval_error.EvalExecutionError", "automata.tests.conftest.task_environment", "automata.tasks.task_error.TaskInstructionsError", "automata.tasks.task_registry.AutomataTaskRegistry"], "k": 20}
{"task_id": "ContextCodeRetrieval/684", "query": "How is the summary for a class document built?", "truth_top_match": "automata.experimental.symbol_embedding.symbol_doc_embedding_builder.SymbolDocEmbeddingBuilder._build_class_document_summary", "top_k_matches": ["automata.experimental.symbol_embedding.symbol_doc_embedding_builder.SymbolDocEmbeddingBuilder._build_class_document_summary", "automata.experimental.symbol_embedding.symbol_doc_embedding_builder.SymbolDocEmbeddingBuilder._build_class_document", "automata.experimental.symbol_embedding.symbol_doc_embedding_builder.SymbolDocEmbeddingBuilder", "automata.tests.unit.sample_modules.sample.OuterClass", "automata.code_writers.py.py_doc_writer.PyDocWriter", "automata.tests.unit.context_retriever.test_context_retriever.test_constructor_and_attributes.MyClass", "automata.tests.unit.sample_modules.sample.OuterClass.InnerClass", "automata.experimental.symbol_embedding.symbol_doc_embedding_builder.SymbolDocEmbeddingBuilder.build_non_class", "automata.experimental.tools.builders.document_oracle_builder.DocumentOracleToolkitBuilder", "automata.experimental.symbol_embedding.symbol_doc_embedding_builder.SymbolDocEmbeddingBuilder.build"], "k": 20}
{"task_id": "ContextCodeRetrieval/685", "query": "Which class provides a context manager for synchronizing symbol providers?", "truth_top_match": "automata.context_providers.symbol_synchronization_context.SymbolProviderSynchronizationContext", "top_k_matches": ["automata.context_providers.symbol_synchronization_context.SymbolProviderSynchronizationContext", "automata.context_providers.symbol_synchronization_context.SymbolProviderSynchronizationContext.synchronize", "automata.symbol.symbol_base.ISymbolProvider", "automata.context_providers.symbol_synchronization_context.SymbolProviderRegistry", "automata.tests.unit.synchronizer.test_synchronizer.test_synchronize", "automata.context_providers.symbol_synchronization_context.SymbolProviderRegistry.synchronize", "automata.singletons.dependency_factory.DependencyFactory._synchronize_provider", "automata.context_providers.symbol_synchronization_context.SymbolProviderSynchronizationContext.__exit__", "automata.tests.unit.symbol.test_symbol_graph_static.sync_context", "automata.tests.unit.symbol.test_symbol_graph.sync_context"], "k": 20}
{"task_id": "ContextCodeRetrieval/686", "query": "What class is raised when the agent iteration process terminates?", "truth_top_match": "automata.agent.error.AgentStopIterationError", "top_k_matches": ["automata.agent.error.AgentStopIterationError", "automata.agent.error.AgentMaxIterError", "automata.agent.openai_agent.OpenAIAutomataAgent", "automata.agent.error.AgentResultError", "automata.agent.openai_agent.OpenAIAutomataAgent.terminate", "automata.agent.agent.Agent", "automata.agent.error.AgentGeneralError", "automata.agent.openai_agent.OpenAIAutomataAgent.__next__", "automata.agent.openai_agent.OpenAIAutomataAgent.run", "automata.agent.openai_agent.OpenAIAutomataAgent.agent_responses"], "k": 20}
{"task_id": "ContextCodeRetrieval/687", "query": "What class represents a custom logger for CLI output?", "truth_top_match": "automata.cli.cli_output_logger.CustomLogger", "top_k_matches": ["automata.cli.cli_output_logger.CustomLogger", "automata.cli.env_operations.log_cli_output", "automata.cli.cli_output_logger.CustomLogger.cli_output", "automata.tests.unit.cli.test_cli_commands.mock_logger", "automata.cli.cli_utils.get_custom_style", "automata.tests.unit.cli.test_cli_utils.mock_logger", "automata.cli.cli_output_logger.CustomLogger.__init__", "automata.core.utils.RootDict", "automata.core.utils.HandlerDict", "automata.core.utils.LoggingConfig"], "k": 20}
{"task_id": "ContextCodeRetrieval/688", "query": "Which method is used to indicate the abstract batch construction of embedding vectors for documents?", "truth_top_match": "automata.embedding.embedding_base.EmbeddingVectorProvider.batch_build_embedding_vector", "top_k_matches": ["automata.embedding.embedding_base.EmbeddingVectorProvider.batch_build_embedding_vector", "automata.embedding.embedding_base.EmbeddingVectorProvider", "automata.symbol_embedding.symbol_embedding_handler.SymbolEmbeddingHandler.__init__", "automata.embedding.embedding_base.EmbeddingVectorProvider.build_embedding_vector", "automata.embedding.embedding_base.EmbeddingBuilder.batch_build", "automata.embedding.embedding_base.EmbeddingBuilder", "automata.embedding.embedding_base.Embedding", "automata.embedding.embedding_base.EmbeddingHandler", "automata.experimental.symbol_embedding.symbol_doc_embedding_builder.SymbolDocEmbeddingBuilder", "automata.tests.conftest.embedding_maker._make_embedding"], "k": 20}
{"task_id": "ContextCodeRetrieval/689", "query": "How can DependencyFactory create a `SymbolCodeEmbeddingHandler` instance?", "truth_top_match": "automata.singletons.dependency_factory.DependencyFactory.create_symbol_code_embedding_handler", "top_k_matches": ["automata.singletons.dependency_factory.DependencyFactory.create_symbol_code_embedding_handler", "automata.singletons.dependency_factory.DependencyFactory.create_symbol_doc_embedding_handler", "automata.tests.unit.singletons.test_singletons_dependency_factory.test_create_symbol_code_embedding_handler", "automata.tests.unit.context_oracle.test_context_oracle_tool.symbol_code_embedding_handler", "automata.tests.unit.context_oracle.test_document_oracle_tool.symbol_code_embedding_handler", "automata.experimental.memory_store.symbol_doc_embedding_handler.SymbolDocEmbeddingHandler", "automata.experimental.memory_store.symbol_doc_embedding_handler.SymbolDocEmbeddingHandler._create_new_embedding", "automata.symbol_embedding.symbol_embedding_handler.SymbolEmbeddingHandler", "automata.memory_store.symbol_code_embedding_handler.SymbolCodeEmbeddingHandler", "automata.tests.unit.singletons.test_singletons_dependency_factory.test_create_symbol_doc_embedding_handler"], "k": 20}
{"task_id": "ContextCodeRetrieval/690", "query": "What method is used to get an embedding for a given source text?", "truth_top_match": "automata.llm.providers.openai_llm.OpenAIEmbeddingProvider.build_embedding_vector", "top_k_matches": ["automata.llm.providers.openai_llm.OpenAIEmbeddingProvider.build_embedding_vector", "automata.embedding.embedding_base.EmbeddingBuilder.build", "automata.llm.providers.openai_llm.OpenAIEmbeddingProvider", "automata.symbol_embedding.symbol_embedding_builders.SymbolCodeEmbeddingBuilder.build", "automata.embedding.embedding_base.EmbeddingBuilder", "automata.tests.conftest.embedding_maker._make_embedding", "automata.embedding.embedding_base.EmbeddingBuilder.batch_build", "automata.embedding.embedding_base.EmbeddingBuilder.fetch_embedding_source_code", "automata.llm.providers.openai_llm.OpenAIEmbeddingProvider.batch_build_embedding_vector", "automata.experimental.symbol_embedding.symbol_doc_embedding_builder.SymbolDocEmbeddingBuilder.build"], "k": 20}
{"task_id": "ContextCodeRetrieval/691", "query": "Which method in the OpenAIAgentToolkitBuilder class is responsible for building an OpenAITool to be used by the associated agent?", "truth_top_match": "automata.agent.openai_agent.OpenAIAgentToolkitBuilder.build_for_open_ai", "top_k_matches": ["automata.agent.openai_agent.OpenAIAgentToolkitBuilder", "automata.experimental.tools.builders.agentified_search_builder.AgentifiedSearchOpenAIToolkitBuilder", "automata.experimental.tools.builders.document_oracle_builder.DocumentOracleOpenAIToolkitBuilder", "automata.experimental.tools.builders.advanced_context_oracle_builder.AdvancedContextOracleOpenAIToolkitBuilder", "automata.experimental.tools.builders.symbol_search_builder.SymbolSearchOpenAIToolkitBuilder", "automata.agent.agent.AgentToolkitBuilder", "automata.tools.agent_tool_factory.AgentToolFactory.create_tools_from_builder", "automata.experimental.tools.builders.py_interpreter.PyInterpreterOpenAIToolkitBuilder", "automata.tools.builders.py_reader_builder.PyReaderOpenAIToolkitBuilder", "automata.tools.agent_tool_factory.AgentToolFactory"], "k": 20}
{"task_id": "ContextCodeRetrieval/692", "query": "Which method of the GitHubClient is used for checking out a branch in a repository?", "truth_top_match": "automata.singletons.github_client.GitHubClient.checkout_branch", "top_k_matches": ["automata.tests.unit.singletons.test_singletons_github_client.test_checkout_branch", "automata.singletons.github_client.GitHubClient.checkout_branch", "automata.tests.unit.github.test_github_client.test_branch_exists", "automata.tests.unit.singletons.test_singletons_github_client.test_create_branch", "automata.singletons.github_client.GitHubClient", "automata.tests.unit.singletons.test_singletons_github_client.test_commit_and_push_changes", "automata.tests.unit.singletons.test_singletons_github_client.test_branch_exists", "automata.singletons.github_client.RepositoryClient.checkout_branch", "automata.tests.unit.singletons.test_singletons_github_client.test_clone_repository", "automata.tests.unit.singletons.test_singletons_github_client.test_create_pull_request"], "k": 20}
{"task_id": "ContextCodeRetrieval/693", "query": "What method is used to convert a SymbolSearchEvalResult into a `Payload`?", "truth_top_match": "automata.eval.tool.search_eval.SymbolSearchEvalResult.to_payload", "top_k_matches": ["automata.eval.tool.search_eval.SymbolSearchAction.to_payload", "automata.eval.tool.search_eval.SymbolSearchEvalResult.from_payload", "automata.eval.tool.search_eval.SymbolSearchAction.from_payload", "automata.eval.tool.search_eval.SymbolSearchEvalResult", "automata.eval.eval_base.EvalResult.from_payload", "automata.eval.tool.search_eval.SymbolSearchAction", "automata.tests.unit.tool_eval.test_symbol_search_eval.test_symbol_search_eval_result_from_payload", "automata.eval.eval_base.EvalResult.to_payload", "automata.eval.agent.agent_eval.AgentEvalResult.from_payload", "automata.eval.tool.search_eval.SymbolSearchEvalResult.to_payload"], "k": 20}
{"task_id": "ContextCodeRetrieval/694", "query": "What abstract method is used to load data in the VectorDatabaseProvider?", "truth_top_match": "automata.core.base.database.vector_database.VectorDatabaseProvider.load", "top_k_matches": ["automata.core.base.database.vector_database.VectorDatabaseProvider", "automata.core.base.database.vector_database.ChromaVectorDatabase", "automata.core.base.database.vector_database.JSONVectorDatabase", "automata.core.base.database.vector_database.VectorDatabaseProvider.load", "automata.core.base.database.vector_database.JSONVectorDatabase.load", "automata.embedding.embedding_base.EmbeddingVectorProvider", "automata.symbol_embedding.vector_databases.ChromaSymbolEmbeddingVectorDatabase", "automata.llm.llm_base.LLMConversationDatabaseProvider", "automata.symbol_embedding.symbol_embedding_handler.SymbolEmbeddingHandler.__init__", "automata.symbol_embedding.vector_databases.JSONSymbolEmbeddingVectorDatabase"], "k": 20}
{"task_id": "ContextCodeRetrieval/695", "query": "What method is used to write the modified module to a file at the specified output path?", "truth_top_match": "automata.code_writers.py.py_code_writer.PyCodeWriter.write_module_to_disk", "top_k_matches": ["automata.code_writers.py.py_code_writer.PyCodeWriter.write_module_to_disk", "automata.code_writers.py.py_code_writer.PyCodeWriter.delete_module", "automata.code_writers.py.py_code_writer.PyCodeWriter.create_new_module", "automata.code_writers.py.py_code_writer.PyCodeWriter._write_to_disk_and_format", "automata.tools.builders.py_writer_builder.PyCodeWriterToolkitBuilder._update_existing_module", "automata.tests.unit.code_writers.test_py_writer.test_write_module_to_disk", "automata.code_parsers.py.dotpath_map.DotPathMap.put_module", "automata.tools.builders.py_writer_builder.PyCodeWriterToolkitBuilder._create_new_module", "automata.tests.unit.code_writers.test_py_writer.test_create_write_update_delete_module", "automata.tests.unit.code_writers.test_py_writer.test_write_to_disk_and_format"], "k": 20}
{"task_id": "ContextCodeRetrieval/696", "query": "How a new AdvancedContextOracleToolkitBuilder or AdvancedContextOracleOpenAIToolkitBuilder is registered?", "truth_top_match": "automata.singletons.toolkit_registry.OpenAIAutomataAgentToolkitRegistry.register_tool_manager", "top_k_matches": ["automata.experimental.tools.builders.advanced_context_oracle_builder.AdvancedContextOracleOpenAIToolkitBuilder", "automata.experimental.tools.builders.document_oracle_builder.DocumentOracleOpenAIToolkitBuilder", "automata.experimental.tools.builders.advanced_context_oracle_builder.AdvancedContextOracleToolkitBuilder", "automata.singletons.toolkit_registry.OpenAIAutomataAgentToolkitRegistry", "automata.experimental.tools.builders.agentified_search_builder.AgentifiedSearchOpenAIToolkitBuilder", "automata.experimental.tools.builders.symbol_search_builder.SymbolSearchOpenAIToolkitBuilder", "automata.tools.builders.py_reader_builder.PyReaderOpenAIToolkitBuilder", "automata.experimental.tools.builders.py_interpreter.PyInterpreterOpenAIToolkitBuilder", "automata.singletons.toolkit_registry.OpenAIAutomataAgentToolkitRegistry.register_tool_manager", "automata.tools.builders.py_writer_builder.PyCodeWriterOpenAIToolkitBuilder"], "k": 20}
{"task_id": "ContextCodeRetrieval/697", "query": "Which function contains the CLI command responsible for running tool evaluations?", "truth_top_match": "automata.cli.commands.run_tool_eval", "top_k_matches": ["automata.cli.commands.run_tool_eval", "automata.eval.tool.tool_eval_harness.ToolEvaluationHarness", "automata.cli.commands.run_agent_eval", "automata.eval.tool.tool_eval_harness.ToolEvaluationHarness.evaluate", "automata.eval.tool.tool_eval.ToolEval", "automata.tests.unit.tool_eval.test_tool_eval_harness_and_metrics.test_tool_evaluation_harness_and_metrics", "automata.cli.scripts.run_tool_eval.run_eval_harness", "automata.eval.tool.tool_eval_harness.ToolEvaluationHarness.__init__", "automata.tests.unit.tool.test_tool.test_tool_execution", "automata.eval.tool.search_eval.SymbolSearchEval"], "k": 20}
{"task_id": "ContextCodeRetrieval/698", "query": "What method is used to create a completion result from the given arguments?", "truth_top_match": "automata.llm.providers.openai_llm.OpenAIChatCompletionResult.from_args", "top_k_matches": ["automata.llm.providers.openai_llm.OpenAIChatCompletionResult.from_args", "automata.llm.providers.openai_llm.OpenAIChatMessage.from_completion_result", "automata.llm.providers.openai_llm.OpenAIChatCompletionResult", "automata.llm.llm_base.LLMCompletionResult", "automata.experimental.scripts.run_update_tool_eval.call_completion_provider", "automata.llm.providers.openai_llm.OpenAIChatCompletionResult.get_function_call", "automata.tests.unit.agent_eval.test_agent_eval_actions_results.test_code_execution_error", "automata.tests.unit.agent_eval.test_agent_eval_actions_results.test_composite_eval_result_match", "automata.tests.unit.automata_agent.test_automata_agent.test_run_with_completion_message", "automata.tests.unit.agent_eval.test_agent_eval_database.test_task_evaluation_with_database_integration"], "k": 20}
{"task_id": "ContextCodeRetrieval/699", "query": "How does the PyDocWriter check if a string is in camel case?", "truth_top_match": "automata.code_writers.py.py_doc_writer.PyDocWriter.check_camel_case", "top_k_matches": ["automata.tests.unit.code_writers.test_py_doc_writer.test_check_camel_case", "automata.tests.unit.code_writers.test_py_doc_writer.test_camel_to_snake", "automata.code_writers.py.py_doc_writer.PyDocWriter.check_camel_case", "automata.code_writers.py.py_doc_writer.PyDocWriter", "automata.tests.unit.context_retriever.test_context_retriever.test_interface_exclude_docstrings", "automata.tests.unit.context_retriever.test_context_retriever.test_interface_include_docstrings", "automata.tests.unit.code_writers.test_py_writer_tool.test_extend_module_with_documented_new_module", "automata.tests.unit.code_writers.test_py_doc_writer.test_init", "automata.tests.unit.code_writers.test_py_writer.test_write_and_retrieve_mock_code", "automata.code_parsers.py.py_reader.PyReader.get_docstring"], "k": 20}
{"task_id": "ContextCodeRetrieval/700", "query": "What abstract method is used to notify an observer when the subject changes?", "truth_top_match": "automata.core.base.patterns.observer.Observer.update", "top_k_matches": ["automata.core.base.patterns.observer.Observer.update", "automata.core.base.patterns.observer.Observer", "automata.tasks.task_base.Task.notify_observer", "automata.llm.llm_base.LLMConversationDatabaseProvider.update", "automata.llm.llm_base.LLMConversationDatabaseProvider", "automata.llm.llm_base.LLMConversation.notify_observers", "automata.tests.unit.task.test_task.test_callback", "automata.llm.llm_base.LLMConversation.__init__", "automata.llm.llm_base.LLMConversation", "automata.llm.llm_base.LLMConversation.register_observer"], "k": 20}
{"task_id": "ContextCodeRetrieval/701", "query": "What method gets all references to a module in the symbol graph?", "truth_top_match": "automata.symbol.graph.symbol_navigator.SymbolGraphNavigator._get_references_to_module", "top_k_matches": ["automata.symbol.graph.symbol_navigator.SymbolGraphNavigator._get_references_to_module", "automata.experimental.search.symbol_search.SymbolSearch.symbol_references", "automata.symbol.graph.symbol_navigator.SymbolGraphNavigator._get_symbol_references_in_scope", "automata.symbol.graph.symbol_graph.SymbolGraph.get_references_to_symbol", "automata.symbol.graph.symbol_navigator.SymbolGraphNavigator.get_references_to_symbol", "automata.symbol.graph.symbol_navigator.SymbolGraphNavigator.get_potential_symbol_callees", "automata.symbol.graph.symbol_navigator.SymbolGraphNavigator.get_potential_symbol_callers", "automata.symbol.graph.symbol_navigator.SymbolGraphNavigator", "automata.symbol.graph.symbol_caller_callees.CallerCalleeProcessor.process", "automata.experimental.scripts.run_update_tool_eval.process_symbol_graph"], "k": 20}
{"task_id": "ContextCodeRetrieval/702", "query": "What function runs an agent with the given parameters?", "truth_top_match": "automata.core.run_handlers.run_with_agent", "top_k_matches": ["automata.cli.scripts.run_agent.main", "automata.core.run_handlers.run_with_agent", "automata.cli.commands.run_agent", "automata.core.run_handlers.run_with_eval", "automata.core.run_handlers.run_with_task", "automata.tests.unit.cli.test_cli_commands.test_cli_run_agent", "automata.cli.scripts.run_agent_eval.main", "automata.cli.scripts.run_tool_eval.main", "automata.tests.unit.sample_modules.sample2.PythonAgentToolkit.python_agent_python_task", "automata.cli.commands.run_agent_eval"], "k": 20}
{"task_id": "ContextCodeRetrieval/703", "query": "What class represents different versions of instruction configurations?", "truth_top_match": "automata.config.config_base.InstructionConfigVersion", "top_k_matches": ["automata.config.config_base.InstructionConfigVersion", "automata.config.config_base.AgentConfig.Config", "automata.tools.tool_base.Tool.Config", "automata.config.openai_config.OpenAIAutomataAgentConfigBuilder.with_instruction_version", "automata.tests.unit.automata_agent.test_automata_agent_builder.test_config_loading_different_versions", "automata.config.config_base.ConfigCategory", "automata.tasks.task_error.TaskInstructionsError", "automata.experimental.code_parsers.py.context_processing.context_retriever.ContextComponent", "automata.experimental.code_parsers.py.context_processing.context_handler.PyContextHandlerConfig", "automata.tests.unit.automata_agent.test_automata_agent.test_invalid_config"], "k": 20}
{"task_id": "ContextCodeRetrieval/704", "query": "What is the main entrypoint of the script?", "truth_top_match": "automata.cli.scripts.run_tool_eval.main", "top_k_matches": ["automata.cli.scripts.run_agent_eval.main", "automata.cli.scripts.run_tool_eval.main", "automata.cli.scripts.run_code_embedding.main", "automata.tests.unit.cli.test_cli_scripts_run_doc_post_process.test_main_with_kwargs", "automata.cli.scripts.run_agent.main", "automata.tests.unit.cli.test_cli_scripts_run_doc_post_process.test_main_without_kwargs", "automata.tests.unit.cli.test_cli_scripts_run_doc_embedding.test_main", "automata.cli.commands.run_agent_eval", "automata.cli.commands.run_agent", "automata.cli.commands.run_doc_embedding"], "k": 20}
{"task_id": "ContextCodeRetrieval/705", "query": "How is the code set and then local tests are run in PyInterpreter?", "truth_top_match": "automata.experimental.tools.builders.py_interpreter.PyInterpreter.set_code_and_run_tests", "top_k_matches": ["automata.experimental.tools.builders.py_interpreter.PyInterpreter", "automata.experimental.tools.builders.py_interpreter.PyInterpreter.__init__", "automata.experimental.tools.builders.py_interpreter.PyInterpreter.__repr__", "automata.experimental.tools.builders.py_interpreter.PyInterpreterToolkitBuilder", "automata.experimental.tools.builders.py_interpreter.PyInterpreterToolkitBuilder.__init__", "automata.experimental.tools.builders.py_interpreter.PyInterpreterToolkitBuilder.build", "automata.tests.unit.code_writers.test_py_writer.test_write_and_retrieve_mock_code", "automata.tests.unit.cli.test_cli_commands.test_cli_run_code_embedding", "automata.tests.unit.context_retriever.test_context_retriever.test_source_code", "automata.tests.unit.context_retriever.test_context_retriever.test_source_code_2"], "k": 20}
{"task_id": "ContextCodeRetrieval/706", "query": "What class represents a completion result from the OpenAI API?", "truth_top_match": "automata.llm.providers.openai_llm.OpenAIChatCompletionResult", "top_k_matches": ["automata.llm.providers.openai_llm.OpenAIChatCompletionResult", "automata.llm.providers.openai_llm.OpenAIChatMessage.from_completion_result", "automata.llm.providers.openai_llm.OpenAIChatMessage", "automata.tests.unit.task.test_task_executor.mock_openai_response_with_completion_message", "automata.tests.unit.automata_agent.test_automata_agent.mock_openai_response_with_completion_message", "automata.llm.providers.openai_llm.OpenAIChatCompletionResult.from_args", "automata.llm.providers.openai_llm.OpenAIChatCompletionProvider", "automata.agent.openai_agent.OpenAIAutomataAgent._get_termination_tool", "automata.llm.llm_base.LLMCompletionResult", "automata.tests.unit.agent_eval.conftest.mock_openai_response_with_function_completion_message_final"], "k": 20}
{"task_id": "ContextCodeRetrieval/707", "query": "What method builds a specific search tool?", "truth_top_match": "automata.experimental.tools.builders.symbol_search_builder.SymbolSearchToolkitBuilder.build_tool", "top_k_matches": ["automata.experimental.tools.builders.symbol_search_builder.SymbolSearchToolkitBuilder.build_tool", "automata.experimental.tools.builders.symbol_search_builder.SymbolSearchToolkitBuilder.build", "automata.experimental.tools.builders.agentified_search_builder.AgentifiedSearchToolkitBuilder", "automata.experimental.tools.builders.symbol_search_builder.SymbolSearchToolkitBuilder", "automata.experimental.tools.builders.agentified_search_builder.AgentifiedSearchToolkitBuilder.build", "automata.tests.unit.agentified_search.test_agentified_search.test_build", "automata.tests.unit.symbol.test_symbol_search.test_build", "automata.tests.unit.symbol.test_symbol_search_tool.test_build", "automata.experimental.tools.builders.symbol_search_builder.SymbolSearchOpenAIToolkitBuilder", "automata.experimental.tools.builders.symbol_search_builder.SearchTool"], "k": 20}
{"task_id": "ContextCodeRetrieval/708", "query": "How can all tasks be retrieved from the registry?", "truth_top_match": "automata.tasks.task_registry.AutomataTaskRegistry.get_all_tasks", "top_k_matches": ["automata.tasks.task_registry.AutomataTaskRegistry.get_all_tasks", "automata.tasks.task_registry.AutomataTaskRegistry", "automata.tests.unit.task.test_task_database.test_get_all_tasks", "automata.tests.unit.task.test_task.test_register_task", "automata.tests.conftest.task_registry", "automata.tests.unit.task.test_task_database.test_fetch_task_by_id", "automata.tests.unit.task.test_task_database.task_registry", "automata.tests.unit.task.test_task_database.test_register_and_update_task", "automata.tests.unit.task.test_task_executor.test_execute_automata_task_success", "automata.tests.unit.task.test_task_database.test_register_existing_task"], "k": 20}
{"task_id": "ContextCodeRetrieval/709", "query": "What concrete class is designed for symbol document embeddings?", "truth_top_match": "automata.symbol_embedding.symbol_embedding_base.SymbolDocEmbedding", "top_k_matches": ["automata.symbol_embedding.symbol_embedding_base.SymbolCodeEmbedding", "automata.symbol_embedding.symbol_embedding_base.SymbolDocEmbedding", "automata.experimental.symbol_embedding.symbol_doc_embedding_builder.SymbolDocEmbeddingBuilder", "automata.symbol_embedding.symbol_embedding_base.SymbolEmbedding", "automata.embedding.embedding_base.EmbeddingVectorProvider", "automata.experimental.memory_store.symbol_doc_embedding_handler.SymbolDocEmbeddingHandler", "automata.tests.conftest.embedding_maker._make_embedding", "automata.symbol_embedding.symbol_embedding_handler.SymbolEmbeddingHandler", "automata.experimental.symbol_embedding.symbol_doc_embedding_builder.SymbolDocEmbeddingBuilder.build_non_class", "automata.embedding.embedding_base.EmbeddingBuilder"], "k": 20}
{"task_id": "ContextCodeRetrieval/710", "query": "How do we get references to a symbol in SymbolGraph?", "truth_top_match": "automata.symbol.graph.symbol_graph.SymbolGraph.get_references_to_symbol", "top_k_matches": ["automata.symbol.graph.symbol_graph.SymbolGraph.get_references_to_symbol", "automata.symbol.graph.symbol_navigator.SymbolGraphNavigator.get_references_to_symbol", "automata.experimental.search.symbol_search.SymbolSearch.symbol_references", "automata.symbol.graph.symbol_navigator.SymbolGraphNavigator.get_potential_symbol_callees", "automata.symbol.graph.symbol_navigator.SymbolGraphNavigator._get_symbol_references_in_scope", "automata.symbol.graph.symbol_navigator.SymbolGraphNavigator.get_potential_symbol_callers", "automata.symbol.graph.symbol_references.ReferenceProcessor", "automata.symbol.graph.symbol_graph.SymbolGraph", "automata.symbol.graph.symbol_navigator.SymbolGraphNavigator", "automata.symbol.graph.symbol_navigator.SymbolGraphNavigator._get_references_to_module"], "k": 20}
{"task_id": "ContextCodeRetrieval/711", "query": "What function creates a copy of the specified node without import statements?", "truth_top_match": "automata.core.ast_handlers.get_node_without_imports", "top_k_matches": ["automata.core.ast_handlers.get_node_without_imports", "automata.tests.unit.ast_utils.test_ast_utils.test_get_node_without_imports", "automata.core.ast_handlers.get_node_without_docstrings", "automata.core.ast_handlers.ImportRemover", "automata.code_parsers.py.py_reader.PyReader.get_source_code_without_docstrings", "automata.core.ast_handlers.ImportRemover.visit", "automata.tests.unit.ast_utils.test_ast_utils.test_get_node_without_imports_with_various_nodes", "automata.core.ast_handlers.DocstringRemover", "automata.tests.unit.ast_utils.test_ast_utils.test_get_node_without_docstrings", "automata.code_parsers.py.py_reader.PyReader.get_source_code"], "k": 20}
{"task_id": "ContextCodeRetrieval/712", "query": "Which method in DocumentOracleToolkitBuilder retrieves the best matching class documentation for a query?", "truth_top_match": "automata.experimental.tools.builders.document_oracle_builder.DocumentOracleToolkitBuilder._get_best_match", "top_k_matches": ["automata.experimental.tools.builders.document_oracle_builder.DocumentOracleToolkitBuilder", "automata.experimental.tools.builders.document_oracle_builder.DocumentOracleToolkitBuilder.build", "automata.experimental.tools.builders.document_oracle_builder.DocumentOracleOpenAIToolkitBuilder", "automata.experimental.tools.builders.document_oracle_builder.DocumentOracleToolkitBuilder._get_best_match", "automata.experimental.tools.builders.advanced_context_oracle_builder.AdvancedContextOracleToolkitBuilder", "automata.experimental.tools.builders.agentified_search_builder.AgentifiedSearchToolkitBuilder._get_docs_for_best_match", "automata.tests.unit.context_oracle.test_document_oracle_tool.test_build", "automata.experimental.tools.builders.advanced_context_oracle_builder.AdvancedContextOracleOpenAIToolkitBuilder", "automata.experimental.tools.builders.agentified_search_builder.AgentifiedSearchToolkitBuilder", "automata.tests.unit.context_oracle.test_document_oracle_tool.document_oracle_tool_builder"], "k": 20}
{"task_id": "ContextCodeRetrieval/713", "query": "Which method is used to update an entry in the database?", "truth_top_match": "automata.symbol_embedding.vector_databases.ChromaSymbolEmbeddingVectorDatabase.update_entry", "top_k_matches": ["automata.symbol_embedding.vector_databases.ChromaSymbolEmbeddingVectorDatabase.update_entry", "automata.tests.unit.database.test_database_sql.test_update_entry", "automata.core.base.database.vector_database.JSONVectorDatabase.update_entry", "automata.core.base.database.vector_database.VectorDatabaseProvider.update_entry", "automata.core.base.database.vector_database.ChromaVectorDatabase.update_entry", "automata.core.base.database.relational_database.SQLDatabase.update_entry", "automata.symbol_embedding.vector_databases.ChromaSymbolEmbeddingVectorDatabase.batch_update", "automata.core.base.database.relational_database.RelationalDatabase.update_entry", "automata.tests.unit.task.test_task_database.test_update_task", "automata.tests.unit.task.test_task_database.test_update_task_2"], "k": 20}
{"task_id": "ContextCodeRetrieval/714", "query": "Which class is responsible for fetching python code?", "truth_top_match": "automata.code_parsers.py.py_reader.PyReader", "top_k_matches": ["automata.code_parsers.py.py_reader.PyReader", "automata.tools.builders.py_reader_builder.PyReaderToolkitBuilder._run_indexer_retrieve_code", "automata.code_parsers.py.py_reader.PyReader.get_source_code", "automata.eval.agent.code_writing_eval.CodeWritingAction", "automata.tests.unit.code_readers.test_py_reader_tool.python_retriever_tool_builder", "automata.tests.unit.context_retriever.test_context_retriever.test_source_code", "automata.tests.unit.context_retriever.test_context_retriever.test_class_attributes_in_source_code", "automata.tests.unit.context_retriever.test_context_retriever.test_source_code_2", "automata.tests.unit.context_retriever.test_context_retriever.test_class_inheritance_in_source_code", "automata.tools.builders.py_reader_builder.PyReaderToolkitBuilder"], "k": 20}
{"task_id": "ContextCodeRetrieval/715", "query": "What abstract property is used to get the agent responses associated with the Agent?", "truth_top_match": "automata.agent.agent.Agent.agent_responses", "top_k_matches": ["automata.agent.agent.Agent.agent_responses", "automata.agent.openai_agent.OpenAIAutomataAgent.agent_responses", "automata.agent.agent.Agent.conversation", "automata.agent.openai_agent.OpenAIAutomataAgent.conversation", "automata.agent.agent.Agent", "automata.agent.agent.Agent.tools", "automata.agent.openai_agent.OpenAIAutomataAgent", "automata.agent.openai_agent.OpenAIAutomataAgent.functions", "automata.llm.llm_base.LLMConversation.messages", "automata.config.config_base.AgentConfig.get_llm_provider"], "k": 20}
{"task_id": "ContextCodeRetrieval/716", "query": "What property is used to get the underlying Exception message?", "truth_top_match": "automata.core.base.base_error.AutomataError.user_message", "top_k_matches": ["automata.core.base.base_error.AutomataError.user_message", "automata.core.base.base_error.AutomataError.__str__", "automata.llm.llm_base.LLMConversation.messages", "automata.llm.providers.openai_llm.OpenAIConversation.messages", "automata.agent.openai_agent.OpenAIAutomataAgent.conversation", "automata.core.base.base_error.AutomataError", "automata.core.base.base_error.AutomataError.__repr__", "automata.agent.agent.Agent.conversation", "automata.llm.providers.openai_llm.OpenAIIncorrectMessageTypeError", "automata.llm.llm_base.LLMConversation.LLMEmptyConversationError"], "k": 20}
{"task_id": "ContextCodeRetrieval/717", "query": "Which method in the _SymbolParser class parses the list of descriptors associated with the Symbol?", "truth_top_match": "automata.symbol.symbol_parser._SymbolParser.parse_descriptors", "top_k_matches": ["automata.symbol.symbol_parser._SymbolParser.parse_descriptors", "automata.symbol.symbol_parser._SymbolParser.parse_descriptor", "automata.symbol.symbol_parser._SymbolParser", "automata.symbol.symbol_base.Symbol.parent", "automata.symbol.symbol_base.SymbolDescriptor", "automata.tests.unit.symbol.test_symbol_base.test_parse_symbol_descriptor", "automata.tests.unit.symbol.test_symbol_base.test_parsed_symbol", "automata.symbol.symbol_base.Symbol", "automata.symbol.symbol_base.Symbol.py_kind", "automata.symbol.symbol_base.Symbol.is_local"], "k": 20}
{"task_id": "ContextCodeRetrieval/718", "query": "Which class builds tools for agent facilitated search?", "truth_top_match": "automata.experimental.tools.builders.agentified_search_builder.AgentifiedSearchToolkitBuilder", "top_k_matches": ["automata.experimental.tools.builders.agentified_search_builder.AgentifiedSearchToolkitBuilder", "automata.experimental.tools.builders.agentified_search_builder.AgentifiedSearchOpenAIToolkitBuilder", "automata.experimental.tools.builders.symbol_search_builder.SymbolSearchToolkitBuilder", "automata.experimental.tools.builders.symbol_search_builder.SearchTool", "automata.experimental.tools.builders.agentified_search_builder.AgentifiedSearchOpenAIToolkitBuilder.build_for_open_ai", "automata.experimental.tools.builders.symbol_search_builder.SymbolSearchOpenAIToolkitBuilder", "automata.tests.unit.agentified_search.test_agentified_search.test_build", "automata.experimental.tools.builders.agentified_search_builder.AgentifiedSearchToolkitBuilder.build", "automata.agent.openai_agent.OpenAIAgentToolkitBuilder", "automata.agent.agent.AgentToolkitBuilder"], "k": 20}
{"task_id": "ContextCodeRetrieval/719", "query": "What function asks the user for a specific choice?", "truth_top_match": "automata.cli.cli_utils.ask_choice", "top_k_matches": ["automata.cli.cli_utils.ask_choice", "automata.tests.unit.cli.test_cli_utils.test_ask_choice", "automata.cli.env_operations.ask_choice", "automata.cli.env_operations.select_graph_type", "automata.tests.unit.cli.test_cli_commands.mock_ask_choice", "automata.tests.unit.sample_modules.sample3.my_function", "automata.tests.unit.sample_modules.sample.sample_function", "automata.tests.unit.agent_eval.conftest.mock_openai_response_with_function_completion_message_1", "automata.agent.openai_agent.OpenAIAutomataAgent._get_next_user_response", "automata.tests.unit.agent_eval.conftest.mock_openai_response_with_function_completion_message_2"], "k": 20}
{"task_id": "ContextCodeRetrieval/720", "query": "How do we get callees of a symbol in SymbolGraph?", "truth_top_match": "automata.symbol.graph.symbol_graph.SymbolGraph.get_potential_symbol_callees", "top_k_matches": ["automata.symbol.graph.symbol_navigator.SymbolGraphNavigator.get_potential_symbol_callees", "automata.symbol.graph.symbol_navigator.SymbolGraphNavigator.get_potential_symbol_callers", "automata.symbol.graph.symbol_graph.SymbolGraph.get_potential_symbol_callees", "automata.symbol.graph.symbol_caller_callees.CallerCalleeProcessor.process", "automata.symbol.graph.symbol_graph.SymbolGraph.get_potential_symbol_callers", "automata.experimental.scripts.run_update_tool_eval.process_symbol_graph", "automata.cli.scripts.run_code_embedding.collect_symbols", "automata.symbol.graph.graph_builder.GraphBuilder._process_caller_callee_relationships", "automata.symbol.graph.symbol_graph.SymbolGraph.get_references_to_symbol", "automata.symbol.graph.symbol_navigator.SymbolGraphNavigator.get_references_to_symbol"], "k": 20}
{"task_id": "ContextCodeRetrieval/721", "query": "Which method is used to filter a list of actions that are relevant to the eval?", "truth_top_match": "automata.eval.eval_base.Eval._filter_actions", "top_k_matches": ["automata.eval.agent.agent_eval_composite.AgentEvalComposite._filter_actions", "automata.eval.tool.tool_eval.ToolEval._filter_actions", "automata.eval.eval_base.Eval._filter_actions", "automata.eval.eval_base.Eval", "automata.eval.agent.openai_function_eval.OpenAIFunctionEval._filter_actions", "automata.eval.tool.tool_eval.ToolEval", "automata.eval.agent.code_writing_eval.CodeWritingEval._filter_actions", "automata.eval.agent.agent_eval_composite.AgentEvalComposite.extract_action", "automata.eval.agent.openai_function_eval.OpenAIFunctionEval", "automata.tests.unit.tool_eval.test_symbol_search_eval.test_symbol_search_eval_extract_action"], "k": 20}
{"task_id": "ContextCodeRetrieval/722", "query": "What method is used to perform an agent-facilitated similarity-based search of symbols?", "truth_top_match": "automata.experimental.tools.builders.symbol_search_builder.SymbolSearchToolkitBuilder._symbol_agent_search_processor", "top_k_matches": ["automata.experimental.tools.builders.symbol_search_builder.SymbolSearchToolkitBuilder._symbol_agent_search_processor", "automata.experimental.tools.builders.symbol_search_builder.SymbolSearchToolkitBuilder", "automata.experimental.tools.builders.agentified_search_builder.AgentifiedSearchToolkitBuilder._agent_selected_best_match", "automata.experimental.tools.builders.agentified_search_builder.AgentifiedSearchToolkitBuilder._get_top_matches", "automata.experimental.tools.builders.agentified_search_builder.AgentifiedSearchToolkitBuilder", "automata.experimental.tools.builders.symbol_search_builder.SearchTool", "automata.tests.unit.agentified_search.test_agentified_search.test_get_top_matches", "automata.experimental.tools.builders.symbol_search_builder.SymbolSearchToolkitBuilder._symbol_code_similarity_search_processor", "automata.tests.conftest.agentified_search_tool_builder", "automata.experimental.search.symbol_search.SymbolSearch.get_symbol_code_similarity_results"], "k": 20}
{"task_id": "ContextCodeRetrieval/723", "query": "What interface provides an embedding lookup?", "truth_top_match": "automata.symbol_embedding.vector_databases.IEmbeddingLookupProvider", "top_k_matches": ["automata.symbol_embedding.vector_databases.IEmbeddingLookupProvider", "automata.tests.unit.database.test_database_vector.test_lookup_symbol", "automata.symbol_embedding.vector_databases.JSONSymbolEmbeddingVectorDatabase", "automata.embedding.embedding_base.Embedding", "automata.embedding.embedding_base.EmbeddingBuilder.__init__", "automata.llm.providers.openai_llm.OpenAIEmbeddingProvider", "automata.embedding.embedding_base.EmbeddingVectorProvider", "automata.symbol_embedding.vector_databases.ChromaSymbolEmbeddingVectorDatabase", "automata.symbol_embedding.symbol_embedding_handler.SymbolEmbeddingHandler", "automata.embedding.embedding_base.EmbeddingNormType"], "k": 20}
{"task_id": "ContextCodeRetrieval/724", "query": "Which function is used to process GitHub issues for the Automata agent?", "truth_top_match": "automata.cli.scripts.run_agent.process_issues", "top_k_matches": ["automata.tests.conftest.task_environment", "automata.tests.unit.automata_agent.test_automata_agent.test_chat_provider", "automata.cli.scripts.run_agent.process_issues", "automata.tests.unit.cli.test_cli_commands.test_cli_run_agent", "automata.cli.commands.run_agent", "automata.tests.conftest.task_w_agent_matched_session", "automata.tests.unit.automata_agent.test_automata_agent.test_build_initial_messages", "automata.tests.unit.singletons.test_singletons_github_client.test_stage_all_changes", "automata.cli.scripts.run_agent.main", "automata.tasks.task_environment.AutomataTaskEnvironment"], "k": 20}
{"task_id": "ContextCodeRetrieval/725", "query": "What method processes the embedding for a symbol?", "truth_top_match": "automata.experimental.memory_store.symbol_doc_embedding_handler.SymbolDocEmbeddingHandler.process_embedding", "top_k_matches": ["automata.experimental.memory_store.symbol_doc_embedding_handler.SymbolDocEmbeddingHandler.process_embedding", "automata.symbol_embedding.symbol_embedding_handler.SymbolEmbeddingHandler.process_embedding", "automata.memory_store.symbol_code_embedding_handler.SymbolCodeEmbeddingHandler.process_embedding", "automata.embedding.embedding_base.EmbeddingHandler.process_embedding", "automata.experimental.memory_store.symbol_doc_embedding_handler.SymbolDocEmbeddingHandler", "automata.symbol_embedding.symbol_embedding_handler.SymbolEmbeddingHandler", "automata.memory_store.symbol_code_embedding_handler.SymbolCodeEmbeddingHandler", "automata.cli.scripts.run_code_embedding.process_embeddings", "automata.tests.conftest.embedding_maker._make_embedding", "automata.embedding.embedding_base.EmbeddingBuilder.fetch_embedding_source_code"], "k": 20}
{"task_id": "ContextCodeRetrieval/726", "query": "What method of the Symbol class helps fetch the parent of a Symbol?", "truth_top_match": "automata.symbol.symbol_base.Symbol.parent", "top_k_matches": ["automata.symbol.symbol_base.Symbol.parent", "automata.symbol.symbol_base.Symbol", "automata.symbol.graph.symbol_navigator.SymbolGraphNavigator._get_symbol_containing_file", "automata.symbol_embedding.symbol_embedding_base.SymbolEmbedding.symbol", "automata.symbol.graph.symbol_navigator.SymbolGraphNavigator._get_symbol_references_in_scope", "automata.experimental.code_parsers.py.context_processing.context_handler.PyContextHandler", "automata.embedding.embedding_base.EmbeddingBuilder.fetch_embedding_source_code", "automata.symbol.graph.symbol_navigator.process_symbol_bounds", "automata.symbol.symbol_utils.convert_to_ast_object", "automata.tests.unit.cli.test_cli_scripts_run_doc_embedding.FakeSymbol"], "k": 20}
{"task_id": "ContextCodeRetrieval/727", "query": "Which abstract method sets the database provider for the Agent?", "truth_top_match": "automata.agent.agent.Agent.set_database_provider", "top_k_matches": ["automata.agent.agent.Agent.set_database_provider", "automata.agent.openai_agent.OpenAIAutomataAgent.set_database_provider", "automata.agent.error.AgentDatabaseError", "automata.config.config_base.AgentConfig.get_llm_provider", "automata.llm.llm_base.LLMConversationDatabaseProvider", "automata.agent.agent.Agent._setup", "automata.agent.agent.Agent", "automata.tasks.task_registry.AutomataTaskRegistry.__init__", "automata.config.openai_config.OpenAIAutomataAgentConfig.get_llm_provider", "automata.tests.unit.automata_agent.test_automata_database.test_init"], "k": 20}
{"task_id": "ContextCodeRetrieval/728", "query": "What method is used to update multiple entries in the database?", "truth_top_match": "automata.symbol_embedding.vector_databases.ChromaSymbolEmbeddingVectorDatabase.batch_update", "top_k_matches": ["automata.symbol_embedding.vector_databases.ChromaSymbolEmbeddingVectorDatabase.batch_update", "automata.core.base.database.vector_database.JSONVectorDatabase.batch_update", "automata.core.base.database.vector_database.VectorDatabaseProvider.batch_update", "automata.tests.unit.database.test_database_sql.test_update_entry", "automata.core.base.database.vector_database.ChromaVectorDatabase.batch_update", "automata.symbol_embedding.vector_databases.ChromaSymbolEmbeddingVectorDatabase.update_entry", "automata.symbol_embedding.vector_databases.ChromaSymbolEmbeddingVectorDatabase.batch_add", "automata.core.base.database.relational_database.SQLDatabase.update_entry", "automata.core.base.database.vector_database.VectorDatabaseProvider.batch_add", "automata.core.base.database.vector_database.JSONVectorDatabase.update_entry"], "k": 20}
{"task_id": "ContextCodeRetrieval/729", "query": "Which class method in AgentConfig loads yaml config files?", "truth_top_match": "automata.config.config_base.AgentConfig._load_automata_yaml_config", "top_k_matches": ["automata.config.config_base.AgentConfig", "automata.config.config_base.AgentConfig._load_automata_yaml_config", "automata.config.openai_config.OpenAIAutomataAgentConfig.load", "automata.config.config_base.AgentConfigName", "automata.config.config_base.AgentConfig.load", "automata.tests.unit.automata_agent.test_automata_agent_builder.test_config_loading_different_versions", "automata.config.openai_config.OpenAIAutomataAgentConfig", "automata.config.config_base.InstructionConfigVersion", "automata.config.config_base.AgentConfig.Config", "automata.config.config_base.AgentConfigBuilder.from_config"], "k": 20}
{"task_id": "ContextCodeRetrieval/730", "query": "Which private method is responsible for terminating the OpenAI agent?", "truth_top_match": "automata.agent.openai_agent.OpenAIAutomataAgent._get_termination_tool", "top_k_matches": ["automata.agent.openai_agent.OpenAIAutomataAgent._get_termination_tool", "automata.agent.openai_agent.OpenAIAutomataAgent", "automata.agent.openai_agent.OpenAIAutomataAgent.terminate", "automata.agent.error.AgentStopIterationError", "automata.config.openai_config.OpenAIAutomataAgentConfig.get_llm_provider", "automata.tests.unit.automata_agent.test_automata_agent.test_chat_provider", "automata.tests.unit.agent_eval.conftest.mock_openai_response_with_function_completion_message_final", "automata.agent.openai_agent.OpenAIAutomataAgent._get_iteration_status", "automata.agent.openai_agent.OpenAIAutomataAgent.__init__", "automata.tests.unit.automata_agent.test_automata_agent.test_run_with_no_completion"], "k": 20}
{"task_id": "ContextCodeRetrieval/731", "query": "What class provides functionality to interact with the PythonWriter API that modifies python code?", "truth_top_match": "automata.tools.builders.py_writer_builder.PyCodeWriterToolkitBuilder", "top_k_matches": ["automata.tools.builders.py_writer_builder.PyCodeWriterToolkitBuilder", "automata.code_writers.py.py_code_writer.PyCodeWriter", "automata.tests.unit.code_writers.test_py_writer.py_writer", "automata.tests.unit.code_writers.test_py_writer_tool.test_init", "automata.tools.builders.py_writer_builder.PyCodeWriterToolkitBuilder.__init__", "automata.code_writers.py.py_doc_writer.PyDocWriter", "automata.tools.builders.py_writer_builder.PyCodeWriterOpenAIToolkitBuilder", "automata.eval.agent.code_writing_eval.CodeWritingAction", "automata.tests.unit.code_writers.test_py_writer.test_write_and_retrieve_mock_code", "automata.tests.unit.code_writers.test_py_writer.test_create_write_update_delete_module"], "k": 20}
{"task_id": "ContextCodeRetrieval/732", "query": "Which method in the SymbolCodeEmbeddingHandler class builds and adds embeddings for queued symbols?", "truth_top_match": "automata.memory_store.symbol_code_embedding_handler.SymbolCodeEmbeddingHandler._build_and_add_embeddings", "top_k_matches": ["automata.memory_store.symbol_code_embedding_handler.SymbolCodeEmbeddingHandler", "automata.memory_store.symbol_code_embedding_handler.SymbolCodeEmbeddingHandler._build_and_add_embeddings", "automata.symbol_embedding.symbol_embedding_handler.SymbolEmbeddingHandler", "automata.experimental.memory_store.symbol_doc_embedding_handler.SymbolDocEmbeddingHandler", "automata.memory_store.symbol_code_embedding_handler.SymbolCodeEmbeddingHandler.process_embedding", "automata.experimental.memory_store.symbol_doc_embedding_handler.SymbolDocEmbeddingHandler._create_new_embedding", "automata.symbol_embedding.symbol_embedding_builders.SymbolCodeEmbeddingBuilder", "automata.memory_store.symbol_code_embedding_handler.SymbolCodeEmbeddingHandler._queue_for_building", "automata.experimental.symbol_embedding.symbol_doc_embedding_builder.SymbolDocEmbeddingBuilder", "automata.experimental.memory_store.symbol_doc_embedding_handler.SymbolDocEmbeddingHandler.process_embedding"], "k": 20}
{"task_id": "ContextCodeRetrieval/733", "query": "How can a user input select the type of graph in the service?", "truth_top_match": "automata.cli.env_operations.select_graph_type", "top_k_matches": ["automata.cli.env_operations.select_graph_type", "automata.symbol.graph.symbol_graph_types.SymbolGraphType", "automata.cli.env_operations.update_graph_type", "automata.symbol.graph.symbol_graph_base.GraphProcessor.process", "automata.symbol.graph.symbol_graph.SymbolGraph", "automata.symbol.graph.graph_builder.GraphBuilder.build_graph", "automata.tests.utils.factories.static_indices_graph_dynamic", "automata.tests.conftest.embedding_type", "automata.tests.utils.factories.static_indices_graph_static", "automata.symbol.graph.symbol_graph_base.GraphProcessor"], "k": 20}
{"task_id": "ContextCodeRetrieval/734", "query": "Which method creates a hashable key from a Symbol?", "truth_top_match": "automata.symbol_embedding.vector_databases.IEmbeddingLookupProvider.embedding_to_key", "top_k_matches": ["automata.symbol_embedding.symbol_embedding_base.SymbolEmbedding.symbol", "automata.symbol_embedding.vector_databases.ChromaSymbolEmbeddingVectorDatabase.entry_to_key", "automata.symbol_embedding.vector_databases.IEmbeddingLookupProvider.embedding_to_key", "automata.symbol.symbol_base.SymbolReference.__hash__", "automata.symbol_embedding.vector_databases.JSONSymbolEmbeddingVectorDatabase.entry_to_key", "automata.symbol_embedding.vector_databases.IEmbeddingLookupProvider", "automata.tests.unit.symbol.test_symbol_base.test_symbol_hash", "automata.symbol.symbol_base.SymbolReference", "automata.symbol.symbol_base.Symbol", "automata.eval.tool.search_eval.SymbolSearchAction.__hash__"], "k": 20}
{"task_id": "ContextCodeRetrieval/735", "query": "How is the total extra actions calculated?", "truth_top_match": "automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics.total_extra_actions", "top_k_matches": ["automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics.total_extra_actions", "automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics.extra_action_frequency", "automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics.total_actions", "automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics.total_successful_actions", "automata.eval.agent.openai_function_eval.OpenAIFunctionEval.extract_action", "automata.eval.agent.code_writing_eval.CodeWritingEval.extract_action", "automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics.action_success_rate", "automata.tests.unit.tool_eval.test_symbol_search_eval.test_symbol_search_eval_extract_action", "automata.eval.tool.tool_eval.ToolEval._filter_actions", "automata.eval.agent.agent_eval.AgentEvalResult.to_payload"], "k": 20}
{"task_id": "ContextCodeRetrieval/736", "query": "How to prepare the dangling node weights for the SymbolRank algorithm?", "truth_top_match": "automata.experimental.search.symbol_rank.SymbolRank._prepare_dangling_weights", "top_k_matches": ["automata.experimental.search.symbol_rank.SymbolRank._prepare_dangling_weights", "automata.experimental.search.symbol_rank.SymbolRank.get_ordered_ranks", "automata.tests.unit.symbol.test_symbol_rank.test_prepare_initial_ranks", "automata.experimental.search.symbol_rank.SymbolRank", "automata.experimental.search.symbol_rank.SymbolRank._prepare_graph", "automata.tests.unit.symbol.test_symbol_rank.test_get_ranks", "automata.experimental.search.symbol_rank.SymbolRank._prepare_initial_ranks", "automata.experimental.scripts.run_update_tool_eval.process_symbol_graph", "automata.symbol.graph.symbol_navigator.SymbolGraphNavigator._pre_compute_rankable_bounding_boxes", "automata.tests.unit.symbol.test_symbol_rank.test_get_ranks_small_graph"], "k": 20}
{"task_id": "ContextCodeRetrieval/737", "query": "How do we get dependencies of a symbol in SymbolGraph?", "truth_top_match": "automata.symbol.graph.symbol_graph.SymbolGraph.get_symbol_dependencies", "top_k_matches": ["automata.experimental.code_parsers.py.context_processing.context_handler.PyContextHandler.get_symbol_dependencies", "automata.experimental.scripts.run_update_tool_eval.process_symbol_graph", "automata.symbol.graph.symbol_graph.SymbolGraph.get_symbol_dependencies", "automata.symbol.graph.symbol_navigator.SymbolGraphNavigator.get_symbol_dependencies", "automata.symbol.graph.symbol_navigator.SymbolGraphNavigator.get_symbol_relationships", "automata.symbol.graph.symbol_graph.SymbolGraph", "automata.cli.scripts.run_code_embedding.collect_symbols", "automata.symbol.graph.symbol_graph.SymbolGraph.get_symbol_relationships", "automata.symbol.graph.symbol_caller_callees.CallerCalleeProcessor.process", "automata.symbol.graph.symbol_graph.SymbolGraph.get_references_to_symbol"], "k": 20}
{"task_id": "ContextCodeRetrieval/738", "query": "What function is responsible for logging CLI output messages in the service?", "truth_top_match": "automata.cli.env_operations.log_cli_output", "top_k_matches": ["automata.cli.cli_output_logger.CustomLogger.cli_output", "automata.cli.env_operations.log_cli_output", "automata.cli.cli_output_logger.CustomLogger", "automata.tests.unit.cli.test_cli_commands.test_cli_run_doc_post_process", "automata.cli.commands.run_doc_post_process", "automata.tasks.automata_task.AutomataTask.initialize_logging", "automata.tests.unit.cli.test_cli_commands.mock_logger", "automata.tests.unit.cli.test_cli_utils.mock_logger", "automata.cli.commands.run_tool_eval", "automata.tests.unit.cli.test_cli_commands.test_cli_run_doc_embedding"], "k": 20}
{"task_id": "ContextCodeRetrieval/739", "query": "What method is used to get the latest message in the conversation?", "truth_top_match": "automata.llm.providers.openai_llm.OpenAIConversation.get_latest_message", "top_k_matches": ["automata.llm.providers.openai_llm.OpenAIConversation.get_latest_message", "automata.llm.llm_base.LLMConversation.get_latest_message", "automata.memory_store.conversation_database_providers.OpenAIAutomataConversationDatabase.get_messages", "automata.llm.providers.openai_llm.OpenAIChatCompletionProvider.get_next_assistant_completion", "automata.llm.llm_base.LLMConversation.messages", "automata.llm.llm_base.LLMConversationDatabaseProvider.update", "automata.tests.unit.conversation_database.test_conversation_database.test_get_messages_returns_single_message_for_session", "automata.agent.openai_agent.OpenAIAutomataAgent.__next__", "automata.llm.llm_base.LLMChatCompletionProvider.get_next_assistant_completion", "automata.tests.unit.automata_agent.test_automata_database.test_get_messages"], "k": 20}
{"task_id": "ContextCodeRetrieval/740", "query": "What method is used to execute a function call in the ToolExecution class?", "truth_top_match": "automata.tools.tool_executor.ToolExecution.execute", "top_k_matches": ["automata.tools.tool_executor.ToolExecutor", "automata.tools.tool_executor.ToolExecution", "automata.tests.unit.tool.test_tool.test_tool_execution", "automata.tests.unit.tool.test_tool.test_tool_executor", "automata.tools.tool_executor.ToolExecution.execute", "automata.tools.tool_executor.IToolExecution", "automata.tests.unit.tool.test_tool.test_tool_execution_no_tool_found", "automata.tests.conftest.function_call", "automata.tests.unit.tool_eval.test_symbol_search_eval.function_call", "automata.eval.tool.tool_eval_harness.ToolEvaluationHarness"], "k": 20}
{"task_id": "ContextCodeRetrieval/741", "query": "Which function converts a filepath to a module dotpath?", "truth_top_match": "automata.code_parsers.py.dotpath_map.convert_fpath_to_module_dotpath", "top_k_matches": ["automata.code_parsers.py.dotpath_map.DotPathMap.get_module_fpath_by_dotpath", "automata.code_parsers.py.dotpath_map.DotPathMap.get_module_dotpath_by_fpath", "automata.singletons.py_module_loader.PyModuleLoader.fetch_existing_module_fpath_by_dotpath", "automata.code_parsers.py.dotpath_map.DotPathMap.put_module", "automata.code_parsers.py.dotpath_map.DotPathMap.contains_dotpath", "automata.code_parsers.py.dotpath_map.convert_fpath_to_module_dotpath", "automata.code_parsers.py.dotpath_map.DotPathMap._build_module_dotpath_to_fpath_map", "automata.singletons.py_module_loader.PyModuleLoader.fetch_ast_module", "automata.singletons.py_module_loader.PyModuleLoader.get_module_dotpath_by_fpath", "automata.code_parsers.py.dotpath_map.DotPathMap"], "k": 20}
{"task_id": "ContextCodeRetrieval/742", "query": "Which method sets the max tokens for the agent's configuration?", "truth_top_match": "automata.config.config_base.AgentConfigBuilder.with_abs_max_tokens", "top_k_matches": ["automata.config.config_base.AgentConfigBuilder.with_abs_max_tokens", "automata.config.config_base.AgentConfigBuilder.with_max_token_percentage", "automata.config.config_base.AgentConfigBuilder.with_max_iterations", "automata.agent.error.AgentMaxIterError", "automata.config.openai_config.OpenAIAutomataAgentConfig.setup", "automata.tests.unit.automata_agent.test_automata_agent_builder.test_builder_accepts_all_fields", "automata.tests.unit.automata_agent.test_automata_agent_builder.test_builder_provided_parameters_override_defaults", "automata.config.openai_config.OpenAIAutomataAgentConfig", "automata.config.config_base.AgentConfig.Config", "automata.tests.unit.automata_agent.test_automata_agent.test_run_with_no_completion"], "k": 20}
{"task_id": "ContextCodeRetrieval/743", "query": "What class indicates an error with the task instructions?", "truth_top_match": "automata.tasks.task_error.TaskInstructionsError", "top_k_matches": ["automata.tasks.task_error.TaskInstructionsError", "automata.tasks.task_error.TaskGeneralError", "automata.tasks.task_error.TaskStateError", "automata.eval.eval_error.EvalExecutionError", "automata.tasks.automata_task.AutomataTask.__init__", "automata.eval.tool.tool_eval_harness.EvalExecutionError", "automata.eval.agent.code_writing_eval.CodeExecutionError", "automata.tasks.automata_task.AutomataTask", "automata.eval.tool.tool_eval_harness.EvalLoadingError", "automata.code_writers.py.py_code_writer.PyCodeWriter.InvalidArgumentsError"], "k": 20}
{"task_id": "ContextCodeRetrieval/744", "query": "What method in _SymbolParser is used to accept a character from the `Symbol`?", "truth_top_match": "automata.symbol.symbol_parser._SymbolParser.accept_character", "top_k_matches": ["automata.symbol.symbol_parser._SymbolParser", "automata.symbol.symbol_parser._SymbolParser.accept_character", "automata.symbol.symbol_parser._SymbolParser.parse_descriptor", "automata.symbol.symbol_parser._SymbolParser.accept_escaped_identifier", "automata.symbol.symbol_parser.parse_symbol", "automata.symbol.symbol_base.Symbol", "automata.symbol.symbol_parser._SymbolParser.accept_identifier", "automata.symbol.symbol_parser._SymbolParser.current", "automata.symbol.symbol_parser._SymbolParser.accept_backtick_escaped_identifier", "automata.symbol.symbol_parser._SymbolParser.accept_space_escaped_identifier"], "k": 20}
{"task_id": "ContextCodeRetrieval/745", "query": "What property in SymbolSearch class is utilized to get the symbol rank?", "truth_top_match": "automata.experimental.search.symbol_search.SymbolSearch.symbol_rank", "top_k_matches": ["automata.experimental.search.symbol_search.SymbolSearch.symbol_rank", "automata.experimental.code_parsers.py.context_processing.context_handler.PyContextHandler.get_symbol_rank_matches", "automata.experimental.search.symbol_search.SymbolSearch", "automata.experimental.search.symbol_search.SymbolSearch.get_symbol_rank_results", "automata.experimental.tools.builders.symbol_search_builder.SymbolSearchToolkitBuilder._symbol_rank_search_processor", "automata.experimental.search.symbol_rank.SymbolRank", "automata.singletons.dependency_factory.DependencyFactory.create_symbol_search", "automata.tests.unit.symbol.test_symbol_search.test_symbol_rank_search", "automata.tests.unit.symbol.test_symbol_search_tool.test_symbol_rank_search", "automata.singletons.dependency_factory.DependencyFactory.create_symbol_rank"], "k": 20}
{"task_id": "ContextCodeRetrieval/746", "query": "What method is used to convert a SCIP suffix to a Python kind?", "truth_top_match": "automata.symbol.symbol_base.SymbolDescriptor.convert_scip_to_python_kind", "top_k_matches": ["automata.symbol.symbol_base.SymbolDescriptor.convert_scip_to_python_kind", "automata.symbol.symbol_base.Symbol.py_kind", "automata.symbol.symbol_base.SymbolDescriptor", "automata.symbol.symbol_base.Symbol.is_local", "automata.symbol.symbol_base.Symbol.is_parameter", "automata.symbol.symbol_parser._SymbolParser", "automata.symbol.symbol_parser._SymbolParser.parse_descriptor", "automata.cli.scripts.run_doc_post_process.main", "automata.cli.scripts.run_doc_embedding.main", "automata.symbol.symbol_base.Symbol.is_meta"], "k": 20}
{"task_id": "ContextCodeRetrieval/747", "query": "What method does AutomataTaskEnvironment use to send the results of a task to the remote repository?", "truth_top_match": "automata.tasks.task_environment.AutomataTaskEnvironment.commit_task", "top_k_matches": ["automata.tasks.task_environment.AutomataTaskEnvironment", "automata.tests.unit.task.test_task_executor.test_execute_automata_task_success", "automata.tasks.task_environment.AutomataTaskEnvironment.commit_task", "automata.tests.conftest.task_environment", "automata.tasks.task_executor.IAutomataTaskExecution", "automata.tasks.task_executor.IAutomataTaskExecution.execute", "automata.tests.unit.task.test_task.test_callback", "automata.tasks.task_environment.AutomataTaskEnvironment.setup", "automata.tests.conftest.task_w_agent_matched_session", "automata.tests.conftest.tasks"], "k": 20}
{"task_id": "ContextCodeRetrieval/748", "query": "Which method adds a child node to a directory?", "truth_top_match": "automata.code_parsers.directory.Directory.add_child", "top_k_matches": ["automata.code_parsers.directory.Directory.add_child", "automata.code_parsers.directory.Directory", "automata.code_parsers.directory.DirectoryManager", "automata.code_parsers.directory.DirectoryManager._load_directory_structure", "automata.code_parsers.directory.File", "automata.code_parsers.directory.Node", "automata.tests.unit.context_retriever.test_context_retriever.test_class_inheritance.Child", "automata.tests.unit.context_retriever.test_context_retriever.test_class_inheritance_in_source_code.Child", "automata.tests.unit.context_retriever.test_context_retriever.test_nested_class_detection.Parent.Child", "automata.tests.unit.directory_manager.test_directory_manager.test_get_node_for_path"], "k": 20}
{"task_id": "ContextCodeRetrieval/749", "query": "What function parses the corresponding action from a raw dictionary?", "truth_top_match": "automata.eval.eval_base.parse_action_from_payload", "top_k_matches": ["automata.eval.eval_base.parse_action_from_payload", "automata.eval.tool.search_eval.SymbolSearchEval.extract_action", "automata.eval.agent.openai_function_eval.OpenAIFunctionCallAction.from_payload", "automata.eval.agent.openai_function_eval.OpenAIFunctionCallAction", "automata.eval.tool.tool_eval.ToolEval.extract_action", "automata.eval.agent.openai_function_eval.OpenAIFunctionEval.extract_action", "automata.eval.eval_base.Action.from_payload", "automata.eval.eval_base.Action", "automata.eval.tool.tool_eval_harness.ToolEvalSetLoader.__init__", "automata.eval.agent.code_writing_eval.CodeWritingEval.extract_action"], "k": 20}
{"task_id": "ContextCodeRetrieval/750", "query": "Which method in automata.eval.tool.tool_eval_metrics.ToolEvaluationMetrics calculates the full match rate?", "truth_top_match": "automata.eval.tool.tool_eval_metrics.ToolEvaluationMetrics.full_match_rate", "top_k_matches": ["automata.eval.tool.tool_eval_metrics.ToolEvaluationMetrics.full_match_rate", "automata.eval.tool.tool_eval_metrics.ToolEvaluationMetrics", "automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics.full_match_rate", "automata.tests.unit.tool_eval.test_tool_eval_harness_and_metrics.test_tool_evaluation_harness_and_metrics", "automata.eval.tool.tool_eval_metrics.ToolEvaluationMetrics.partial_match_rate", "automata.eval.eval_base.EvalResult.is_full_match", "automata.eval.tool.tool_eval_metrics.ToolEvaluationMetrics.total_full_matches", "automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics.partial_match_rate", "automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics.total_full_matches", "automata.eval.agent.agent_eval_metrics.AgentEvaluationMetrics.total_partial_matches"], "k": 20}
{"task_id": "ContextCodeRetrieval/751", "query": "What method is used to find all the references to a given symbol within the codebase?", "truth_top_match": "automata.symbol.graph.symbol_graph.SymbolGraph.get_references_to_symbol", "top_k_matches": ["automata.symbol.graph.symbol_graph.SymbolGraph.get_references_to_symbol", "automata.symbol.graph.symbol_navigator.SymbolGraphNavigator._get_symbol_references_in_scope", "automata.experimental.search.symbol_search.SymbolSearch.symbol_references", "automata.symbol.graph.symbol_navigator.SymbolGraphNavigator.get_references_to_symbol", "automata.symbol.graph.symbol_navigator.SymbolGraphNavigator.get_potential_symbol_callees", "automata.symbol.graph.symbol_navigator.SymbolGraphNavigator.get_potential_symbol_callers", "automata.symbol.graph.symbol_graph.SymbolGraph.get_potential_symbol_callers", "automata.symbol.graph.symbol_navigator.SymbolGraphNavigator.get_symbol_dependencies", "automata.tests.regression.test_symbol_searcher_regression.test_source_code_retrieval", "automata.symbol.graph.symbol_graph.SymbolGraph.get_potential_symbol_callees"], "k": 20}
{"task_id": "ContextCodeRetrieval/752", "query": "What abstract method is used to discard a specific entry in the VectorDatabaseProvider?", "truth_top_match": "automata.core.base.database.vector_database.VectorDatabaseProvider.discard", "top_k_matches": ["automata.core.base.database.vector_database.VectorDatabaseProvider", "automata.core.base.database.vector_database.VectorDatabaseProvider.discard", "automata.core.base.database.vector_database.ChromaVectorDatabase", "automata.tests.unit.database.test_database_vector.test_delete_symbol", "automata.core.base.database.vector_database.JSONVectorDatabase", "automata.tests.unit.chroma.test_chroma_vector.test_delete_single_symbol", "automata.core.base.database.vector_database.VectorDatabaseProvider.add", "automata.core.base.database.vector_database.VectorDatabaseProvider.clear", "automata.tests.unit.chroma.test_chroma_vector.test_clear", "automata.core.base.database.vector_database.VectorDatabaseProvider.batch_discard"], "k": 20}
{"task_id": "ContextCodeRetrieval/753", "query": "Which method in the DotPathMap class adds a module with the given dotpath to the local store?", "truth_top_match": "automata.code_parsers.py.dotpath_map.DotPathMap.put_module", "top_k_matches": ["automata.code_parsers.py.dotpath_map.DotPathMap.put_module", "automata.code_parsers.py.dotpath_map.DotPathMap.contains_dotpath", "automata.singletons.py_module_loader.PyModuleLoader.put_module", "automata.code_parsers.py.dotpath_map.DotPathMap.contains_fpath", "automata.code_parsers.py.dotpath_map.DotPathMap.delete_module", "automata.singletons.py_module_loader.PyModuleLoader.delete_module", "automata.code_parsers.py.dotpath_map.DotPathMap", "automata.code_parsers.py.dotpath_map.DotPathMap.get_module_fpath_by_dotpath", "automata.singletons.py_module_loader.PyModuleLoader.fetch_ast_module", "automata.singletons.py_module_loader.PyModuleLoader.fetch_existing_module_fpath_by_dotpath"], "k": 20}
{"task_id": "ContextCodeRetrieval/754", "query": "What method is used to discard a specific entry in ChromaVectorDatabase?", "truth_top_match": "automata.core.base.database.vector_database.ChromaVectorDatabase.discard", "top_k_matches": ["automata.core.base.database.vector_database.ChromaVectorDatabase", "automata.tests.unit.chroma.test_chroma_vector.test_delete_single_symbol", "automata.tests.unit.chroma.test_chroma_vector.test_clear", "automata.tests.unit.chroma.test_chroma_vector.test_update_database", "automata.tests.unit.chroma.test_chroma_vector.test_vector_initialization", "automata.tests.unit.chroma.test_chroma_vector.test_add_and_discard_single_symbol", "automata.tests.unit.database.test_database_vector.test_delete_symbol", "automata.symbol_embedding.vector_databases.ChromaSymbolEmbeddingVectorDatabase", "automata.tests.unit.chroma.test_chroma_vector.test_batch_add_and_remove", "automata.tests.unit.chroma.test_chroma_vector.test_contains"], "k": 20}
{"task_id": "ContextCodeRetrieval/755", "query": "What method is used fetch the supported symbols and sort them?", "truth_top_match": "automata.symbol.graph.symbol_navigator.SymbolGraphNavigator.get_sorted_supported_symbols", "top_k_matches": ["automata.symbol.graph.symbol_graph.SymbolGraph._get_sorted_supported_symbols", "automata.symbol_embedding.symbol_embedding_handler.SymbolEmbeddingHandler._get_sorted_supported_symbols", "automata.symbol.symbol_base.ISymbolProvider.get_sorted_supported_symbols", "automata.symbol.symbol_base.ISymbolProvider._get_sorted_supported_symbols", "automata.context_providers.symbol_synchronization_context.SymbolProviderRegistry.get_sorted_supported_symbols", "automata.symbol.graph.symbol_navigator.SymbolGraphNavigator.get_sorted_supported_symbols", "automata.symbol.symbol_base.ISymbolProvider", "automata.symbol.symbol_base.ISymbolProvider.filter_symbols", "automata.experimental.scripts.run_update_tool_eval.process_symbol_graph", "automata.symbol_embedding.symbol_embedding_handler.SymbolEmbeddingHandler.filter_symbols"], "k": 20}
{"task_id": "ContextCodeRetrieval/756", "query": "What method is used to get the list of symbols in sorted order?", "truth_top_match": "automata.symbol.graph.symbol_graph.SymbolGraph._get_sorted_supported_symbols", "top_k_matches": ["automata.symbol.symbol_base.ISymbolProvider.get_sorted_supported_symbols", "automata.symbol_embedding.symbol_embedding_handler.SymbolEmbeddingHandler._get_sorted_supported_symbols", "automata.context_providers.symbol_synchronization_context.SymbolProviderRegistry.get_sorted_supported_symbols", "automata.symbol.symbol_base.ISymbolProvider._get_sorted_supported_symbols", "automata.symbol.graph.symbol_graph.SymbolGraph._get_sorted_supported_symbols", "automata.symbol.graph.symbol_navigator.SymbolGraphNavigator.get_sorted_supported_symbols", "automata.cli.scripts.run_code_embedding.collect_symbols", "automata.symbol_embedding.vector_databases.JSONSymbolEmbeddingVectorDatabase.get_ordered_keys", "automata.symbol.symbol_base.ISymbolProvider", "automata.experimental.scripts.run_update_tool_eval.process_symbol_graph"], "k": 20}
{"task_id": "ContextCodeRetrieval/757", "query": "What method  builds a suite of tools for writing Python code?", "truth_top_match": "automata.tools.builders.py_writer_builder.PyCodeWriterToolkitBuilder.build", "top_k_matches": ["automata.tools.builders.py_writer_builder.PyCodeWriterToolkitBuilder.build", "automata.tests.unit.code_writers.test_py_writer_tool.test_build", "automata.tools.builders.py_writer_builder.PyCodeWriterToolkitBuilder", "automata.experimental.tools.builders.agentified_search_builder.AgentifiedSearchToolkitBuilder.build", "automata.tests.unit.code_writers.test_py_writer_tool.test_init", "automata.tools.builders.py_reader_builder.PyReaderToolkitBuilder.build", "automata.experimental.tools.builders.py_interpreter.PyInterpreterToolkitBuilder.build", "automata.tests.unit.code_writers.test_py_writer_tool.python_writer_tool_builder", "automata.tools.builders.py_writer_builder.PyCodeWriterOpenAIToolkitBuilder", "automata.tests.unit.code_readers.test_py_reader_tool.python_retriever_tool_builder"], "k": 20}
{"task_id": "ContextCodeRetrieval/758", "query": "Which method of the OpenAI agent is responsible for running the agent?", "truth_top_match": "automata.agent.openai_agent.OpenAIAutomataAgent.run", "top_k_matches": ["automata.agent.openai_agent.OpenAIAutomataAgent", "automata.agent.openai_agent.OpenAIAutomataAgent._get_termination_tool", "automata.cli.scripts.run_agent.main", "automata.config.openai_config.OpenAIAutomataAgentConfig.get_llm_provider", "automata.agent.openai_agent.OpenAIAutomataAgent.__init__", "automata.tests.unit.automata_agent.test_automata_agent.test_chat_provider", "automata.tasks.task_executor.IAutomataTaskExecution._build_agent", "automata.core.run_handlers.run_with_agent", "automata.agent.openai_agent.OpenAIAutomataAgent.run", "automata.agent.agent.Agent"], "k": 20}
{"task_id": "ContextCodeRetrieval/759", "query": "What function returns the logging configuration?", "truth_top_match": "automata.core.utils.get_logging_config", "top_k_matches": ["automata.core.utils.get_logging_config", "automata.core.utils.LoggingConfig", "automata.tests.unit.task.test_task_executor.patch_logging", "automata.tests.unit.task.test_task.mock_logging_config_dict", "automata.cli.cli_utils.get_custom_style", "automata.tasks.automata_task.AutomataTask.initialize_logging", "automata.cli.commands.configure_logging", "automata.config.config_base.AgentConfig.Config", "automata.tasks.task_base.Task._get_log_dir", "automata.cli.scripts.run_agent_config_validation.yaml_schema"], "k": 20}
{"task_id": "ContextCodeRetrieval/760", "query": "What abstract method is used to get all keys stored in VectorDatabaseProvider?", "truth_top_match": "automata.core.base.database.vector_database.VectorDatabaseProvider.get_ordered_keys", "top_k_matches": ["automata.core.base.database.vector_database.VectorDatabaseProvider", "automata.core.base.database.vector_database.VectorDatabaseProvider.get_ordered_keys", "automata.core.base.database.vector_database.ChromaVectorDatabase", "automata.core.base.database.vector_database.JSONVectorDatabase", "automata.core.base.database.vector_database.VectorDatabaseProvider.get_all_ordered_embeddings", "automata.symbol_embedding.vector_databases.ChromaSymbolEmbeddingVectorDatabase", "automata.core.base.database.vector_database.JSONVectorDatabase.get_ordered_keys", "automata.symbol_embedding.vector_databases.JSONSymbolEmbeddingVectorDatabase", "automata.core.base.database.vector_database.VectorDatabaseProvider.batch_get", "automata.symbol_embedding.symbol_embedding_handler.SymbolEmbeddingHandler.__init__"], "k": 20}
{"task_id": "ContextCodeRetrieval/761", "query": "How can an OpenAIFunctionCallAction instance be converted into a storable format or payload?", "truth_top_match": "automata.eval.agent.openai_function_eval.OpenAIFunctionCallAction.to_payload", "top_k_matches": ["automata.eval.agent.openai_function_eval.OpenAIFunctionCallAction.to_payload", "automata.eval.agent.openai_function_eval.OpenAIFunctionCallAction.from_payload", "automata.eval.agent.openai_function_eval.OpenAIFunctionCallAction", "automata.eval.agent.openai_function_eval.OpenAIFunctionCallAction.__repr__", "automata.eval.agent.code_writing_eval.CodeWritingAction.to_payload", "automata.llm.providers.openai_llm.OpenAIFunction", "automata.eval.agent.openai_function_eval.OpenAIFunctionEval", "automata.eval.eval_base.Action", "automata.eval.agent.code_writing_eval.CodeWritingAction.from_payload", "automata.eval.eval_base.Action.to_payload"], "k": 20}
{"task_id": "ContextCodeRetrieval/762", "query": "Which class represents different categories of configuration options?", "truth_top_match": "automata.config.config_base.EmbeddingDataCategory", "top_k_matches": ["automata.config.config_base.ConfigCategory", "automata.config.config_base.EmbeddingDataCategory", "automata.tools.tool_base.Tool.Config", "automata.config.config_base.AgentConfig.Config", "automata.config.config_base.AgentConfig", "automata.config.config_base.SerializedDataCategory", "automata.config.config_base.InstructionConfigVersion", "automata.experimental.code_parsers.py.context_processing.context_retriever.ContextComponent", "automata.experimental.code_parsers.py.context_processing.context_handler.PyContextHandlerConfig", "automata.config.config_base.AgentConfigName"], "k": 20}
{"task_id": "ContextCodeRetrieval/763", "query": "Which abstract class is a base class for providing symbols?", "truth_top_match": "automata.symbol.symbol_base.ISymbolProvider", "top_k_matches": ["automata.symbol.symbol_base.ISymbolProvider", "automata.embedding.embedding_base.EmbeddingBuilder", "automata.symbol_embedding.symbol_embedding_base.SymbolEmbedding", "automata.symbol_embedding.symbol_embedding_handler.SymbolEmbeddingHandler", "automata.embedding.embedding_base.EmbeddingVectorProvider", "automata.symbol_embedding.vector_databases.IEmbeddingLookupProvider", "automata.experimental.code_parsers.py.context_processing.context_retriever.BaseContextComponent", "automata.embedding.embedding_base.EmbeddingBuilder.build", "automata.symbol.symbol_base.Symbol", "automata.symbol.graph.symbol_graph.SymbolGraph"], "k": 20}
{"task_id": "ContextCodeRetrieval/764", "query": "Which class is an abstract base class for building agent tools?", "truth_top_match": "automata.agent.agent.AgentToolkitBuilder", "top_k_matches": ["automata.agent.openai_agent.OpenAIAgentToolkitBuilder", "automata.agent.agent.AgentToolkitBuilder", "automata.agent.agent.Agent.tools", "automata.agent.agent.Agent", "automata.experimental.tools.builders.agentified_search_builder.AgentifiedSearchOpenAIToolkitBuilder", "automata.agent.agent.AgentToolkitNames", "automata.config.config_base.AgentConfig", "automata.experimental.tools.builders.symbol_search_builder.SymbolSearchToolkitBuilder", "automata.tests.unit.sample_modules.sample2.PythonAgentToolkit", "automata.experimental.tools.builders.advanced_context_oracle_builder.AdvancedContextOracleOpenAIToolkitBuilder"], "k": 20}
{"task_id": "ContextCodeRetrieval/765", "query": "Which class raises an exception when the target variable is not found?", "truth_top_match": "automata.eval.agent.code_writing_eval.VariableNotFoundError", "top_k_matches": ["automata.eval.agent.code_writing_eval.VariableNotFoundError", "automata.code_writers.py.py_code_writer.PyCodeWriter.StatementNotFoundError", "automata.eval.tool.tool_eval_harness.EvalExecutionError", "automata.eval.tool.tool_eval_harness.EvalLoadingError", "automata.tests.unit.sample_modules.sample.EmptyClass", "automata.tasks.task_error.TaskStateError", "automata.code_writers.py.py_code_writer.PyCodeWriter.InvalidArgumentsError", "automata.tasks.task_error.TaskGeneralError", "automata.agent.error.AgentResultError", "automata.eval.agent.code_writing_eval.CodeExecutionError"], "k": 20}
{"task_id": "ContextCodeRetrieval/766", "query": "What method is used to commit and push all changes in the repository?", "truth_top_match": "automata.singletons.github_client.RepositoryClient.commit_and_push_changes", "top_k_matches": ["automata.singletons.github_client.GitHubClient.commit_and_push_changes", "automata.singletons.github_client.GitHubClient.stage_all_changes", "automata.tests.unit.singletons.test_singletons_github_client.test_commit_and_push_changes", "automata.singletons.github_client.RepositoryClient.commit_and_push_changes", "automata.tests.unit.singletons.test_singletons_github_client.test_stage_all_changes", "automata.singletons.github_client.RepositoryClient.stage_all_changes", "automata.tests.unit.singletons.test_singletons_github_client.test_clone_repository", "automata.tasks.task_environment.AutomataTaskEnvironment.commit_task", "automata.singletons.github_client.RepositoryClient", "automata.tests.unit.task.test_task_environment.test_commit_task"], "k": 20}
{"task_id": "ContextCodeRetrieval/767", "query": "Which function fetches the return annotation for a specified method?", "truth_top_match": "automata.experimental.code_parsers.py.context_processing.context_utils._get_method_return_annotation", "top_k_matches": ["automata.experimental.code_parsers.py.context_processing.context_utils._get_method_return_annotation", "automata.tests.unit.context_retriever.test_context_retriever.test_get_method_return_annotation", "automata.tests.unit.ast_utils.test_ast_utils_bounding_box.test_fetch_bounding_box_with_function_node", "automata.tests.unit.ast_utils.test_ast_utils_bounding_box.test_fetch_bounding_box_with_function_node_in_file", "automata.tests.unit.ast_utils.test_ast_utils_bounding_box.test_fetch_bounding_box_with_method_node", "automata.experimental.code_parsers.py.context_processing.context_utils.process_method", "automata.code_parsers.py.py_reader.PyReader.get_docstring", "automata.tests.unit.code_readers.test_py_reader.test_get_docstring_function", "automata.embedding.embedding_base.EmbeddingBuilder.fetch_embedding_source_code", "automata.tests.unit.code_writers.test_py_writer.test_create_function_source_function"], "k": 20}
{"task_id": "ContextCodeRetrieval/768", "query": "How is termination message from the conversation handled in FunctionCall?", "truth_top_match": "automata.llm.llm_base.FunctionCall.handle_termination", "top_k_matches": ["automata.tests.unit.agent_eval.conftest.mock_openai_response_with_function_completion_message_final", "automata.tools.tool_executor.ToolExecutor.execute", "automata.llm.llm_base.FunctionCall.handle_termination", "automata.llm.providers.openai_llm.OpenAIChatCompletionResult.get_function_call", "automata.tools.tool_executor.IToolExecution.execute", "automata.llm.llm_base.FunctionCall.from_response_dict", "automata.llm.llm_base.FunctionCall", "automata.llm.providers.openai_llm.OpenAIChatCompletionProvider.standalone_call", "automata.agent.openai_agent.OpenAIAutomataAgent._get_termination_tool", "automata.agent.openai_agent.OpenAIAutomataAgent._get_next_user_response"], "k": 20}
{"task_id": "ContextCodeRetrieval/769", "query": "Which method in the SymbolCodeEmbeddingHandler class processes the embedding for a Symbol by updating if source code has changed?", "truth_top_match": "automata.memory_store.symbol_code_embedding_handler.SymbolCodeEmbeddingHandler.process_embedding", "top_k_matches": ["automata.memory_store.symbol_code_embedding_handler.SymbolCodeEmbeddingHandler", "automata.memory_store.symbol_code_embedding_handler.SymbolCodeEmbeddingHandler.process_embedding", "automata.experimental.memory_store.symbol_doc_embedding_handler.SymbolDocEmbeddingHandler", "automata.memory_store.symbol_code_embedding_handler.SymbolCodeEmbeddingHandler._update_existing_embedding", "automata.experimental.memory_store.symbol_doc_embedding_handler.SymbolDocEmbeddingHandler._update_existing_embedding", "automata.experimental.memory_store.symbol_doc_embedding_handler.SymbolDocEmbeddingHandler.process_embedding", "automata.experimental.memory_store.symbol_doc_embedding_handler.SymbolDocEmbeddingHandler._create_new_embedding", "automata.symbol_embedding.symbol_embedding_builders.SymbolCodeEmbeddingBuilder", "automata.symbol_embedding.symbol_embedding_builders.SymbolCodeEmbeddingBuilder.build", "automata.symbol_embedding.symbol_embedding_handler.SymbolEmbeddingHandler"], "k": 20}
{"task_id": "ContextCodeRetrieval/770", "query": "What class represents a processed chat message TO or FROM the OpenAI LLM Chat API?", "truth_top_match": "automata.llm.providers.openai_llm.OpenAIChatMessage", "top_k_matches": ["automata.llm.providers.openai_llm.OpenAIChatMessage", "automata.llm.providers.openai_llm.OpenAIConversation", "automata.llm.providers.openai_llm.OpenAIChatCompletionResult", "automata.llm.providers.openai_llm.OpenAIChatCompletionProvider", "automata.llm.llm_base.LLMChatMessage", "automata.llm.providers.openai_llm.OpenAIChatMessage.from_completion_result", "automata.llm.llm_base.LLMConversation", "automata.llm.llm_base.LLMChatCompletionProvider", "automata.config.config_base.LLMProvider", "automata.eval.agent.openai_function_eval.OpenAIFunctionEval"], "k": 20}
{"task_id": "ContextCodeRetrieval/771", "query": "Which class in automata.core.base.patterns.singleton is a metaclass ensuring only one instance of a class?", "truth_top_match": "automata.core.base.patterns.singleton.Singleton", "top_k_matches": ["automata.core.base.patterns.singleton.Singleton", "automata.core.base.patterns.singleton.Singleton.__call__", "automata.singletons.py_module_loader.PyModuleLoader", "automata.singletons.toolkit_registry.OpenAIAutomataAgentToolkitRegistry", "automata.tests.unit.sample_modules.sample.EmptyClass", "automata.tests.unit.synchronizer.test_synchronizer.test_synchronize", "automata.symbol.symbol_base.Symbol.is_meta", "automata.context_providers.symbol_synchronization_context.SymbolProviderSynchronizationContext", "automata.tests.unit.context_retriever.test_context_retriever.test_nested_class_detection.Parent", "automata.tests.unit.context_retriever.test_context_retriever.test_dunder_not_private.MyClass"], "k": 20}
{"task_id": "ContextCodeRetrieval/772", "query": "What class evaluates a list of instructions against a list of expected actions?", "truth_top_match": "automata.eval.agent.agent_eval_harness.AgentEvaluationHarness", "top_k_matches": ["automata.tests.regression.test_agent_end_to_end.test_action_based_eval_tasks", "automata.eval.agent.agent_eval_harness.AgentEvaluationHarness", "automata.eval.eval_base.Eval", "automata.eval.tool.tool_eval.ToolEval", "automata.eval.tool.tool_eval_harness.ToolEvaluationHarness", "automata.eval.agent.agent_eval.AgentEval", "automata.tests.regression.test_agent_end_to_end.test_basic_eval_tasks", "automata.eval.agent.code_writing_eval.CodeWritingEval", "automata.eval.tool.tool_eval.ToolEval.generate_eval_result", "automata.eval.agent.agent_eval_harness.AgentEvaluationHarness.evaluate"], "k": 20}
{"task_id": "ContextCodeRetrieval/773", "query": "What method of the ChromaSymbolEmbeddingVectorDatabase class is used to generate a hashkey from a SymbolEmbedding object?", "truth_top_match": "automata.symbol_embedding.vector_databases.ChromaSymbolEmbeddingVectorDatabase.entry_to_key", "top_k_matches": ["automata.symbol_embedding.vector_databases.ChromaSymbolEmbeddingVectorDatabase", "automata.symbol_embedding.vector_databases.JSONSymbolEmbeddingVectorDatabase", "automata.tests.conftest.chroma_vector_db", "automata.experimental.memory_store.symbol_doc_embedding_handler.SymbolDocEmbeddingHandler", "automata.symbol_embedding.symbol_embedding_handler.SymbolEmbeddingHandler", "automata.tests.unit.symbol_embedding.test_persistent_symbol_embedding.test_symbol_embedding", "automata.tests.unit.chroma.test_chroma_vector.test_update_database", "automata.symbol_embedding.symbol_embedding_base.SymbolCodeEmbedding", "automata.memory_store.symbol_code_embedding_handler.SymbolCodeEmbeddingHandler", "automata.tests.unit.symbol_embedding.test_persistent_symbol_embedding._extracted_from_test_symbol_doc_embedding"], "k": 20}
{"task_id": "ContextCodeRetrieval/774", "query": "What class is used to represent a conversation with the OpenAI API?", "truth_top_match": "automata.llm.providers.openai_llm.OpenAIConversation", "top_k_matches": ["automata.llm.providers.openai_llm.OpenAIConversation", "automata.llm.providers.openai_llm.OpenAIChatMessage", "automata.llm.providers.openai_llm.OpenAIChatCompletionProvider", "automata.llm.providers.openai_llm.OpenAIChatCompletionResult", "automata.agent.openai_agent.OpenAIAutomataAgent", "automata.llm.llm_base.LLMConversation", "automata.llm.providers.openai_llm.OpenAIChatCompletionProvider.__init__", "automata.llm.providers.openai_llm.OpenAIFunction", "automata.memory_store.conversation_database_providers.OpenAIAutomataConversationDatabase", "automata.config.config_base.AgentConfig.Config"], "k": 20}
{"task_id": "ContextCodeRetrieval/775", "query": "How can a FunctionCall object be created from a response dictionary?", "truth_top_match": "automata.llm.llm_base.FunctionCall.from_response_dict", "top_k_matches": ["automata.llm.llm_base.FunctionCall.from_response_dict", "automata.llm.llm_base.FunctionCall", "automata.llm.providers.openai_llm.OpenAIChatCompletionResult.get_function_call", "automata.eval.agent.openai_function_eval.OpenAIFunctionCallAction.from_payload", "automata.tests.conftest.function_call", "automata.eval.agent.openai_function_eval.OpenAIFunctionCallAction", "automata.tests.unit.tool_eval.test_symbol_search_eval.function_call", "automata.eval.agent.openai_function_eval.OpenAIFunctionCallAction.__repr__", "automata.llm.providers.openai_llm.OpenAIChatCompletionResult.from_args", "automata.eval.agent.openai_function_eval.OpenAIFunctionCallAction.to_payload"], "k": 20}
{"task_id": "ContextCodeRetrieval/776", "query": "What method in the SymbolCodeEmbeddingHandler class flushes the current batch of embeddings to the database?", "truth_top_match": "automata.memory_store.symbol_code_embedding_handler.SymbolCodeEmbeddingHandler.flush", "top_k_matches": ["automata.memory_store.symbol_code_embedding_handler.SymbolCodeEmbeddingHandler.flush", "automata.memory_store.symbol_code_embedding_handler.SymbolCodeEmbeddingHandler", "automata.symbol_embedding.symbol_embedding_handler.SymbolEmbeddingHandler", "automata.experimental.memory_store.symbol_doc_embedding_handler.SymbolDocEmbeddingHandler", "automata.embedding.embedding_base.EmbeddingHandler", "automata.cli.scripts.run_code_embedding.process_embeddings", "automata.experimental.memory_store.symbol_doc_embedding_handler.SymbolDocEmbeddingHandler.process_embedding", "automata.memory_store.symbol_code_embedding_handler.SymbolCodeEmbeddingHandler._update_existing_embedding", "automata.tests.unit.symbol_embedding.test_symbol_embedding.test_update_embeddings", "automata.memory_store.symbol_code_embedding_handler.SymbolCodeEmbeddingHandler.process_embedding"], "k": 20}
{"task_id": "ContextCodeRetrieval/777", "query": "What command is used to run the document embedding pipeline?", "truth_top_match": "automata.cli.commands.run_doc_embedding", "top_k_matches": ["automata.cli.commands.run_doc_embedding", "automata.tests.unit.cli.test_cli_commands.test_cli_run_doc_embedding", "automata.cli.commands.run_code_embedding", "automata.cli.scripts.run_code_embedding.main", "automata.tests.unit.cli.test_cli_scripts_run_doc_embedding.test_main", "automata.cli.commands.run_doc_post_process", "automata.tests.unit.cli.test_cli_commands.test_cli_run_code_embedding", "automata.cli.scripts.run_doc_post_process.main", "automata.experimental.symbol_embedding.symbol_doc_embedding_builder.SymbolDocEmbeddingBuilder", "automata.tests.unit.cli.test_cli_scripts_run_code_embedding.test_process_embeddings"], "k": 20}
{"task_id": "ContextCodeRetrieval/778", "query": "What method is used to add batch entries to VectorDatabaseProvider?", "truth_top_match": "automata.core.base.database.vector_database.VectorDatabaseProvider.batch_add", "top_k_matches": ["automata.core.base.database.vector_database.VectorDatabaseProvider.batch_add", "automata.symbol_embedding.vector_databases.ChromaSymbolEmbeddingVectorDatabase.batch_add", "automata.core.base.database.vector_database.JSONVectorDatabase", "automata.core.base.database.vector_database.ChromaVectorDatabase.batch_add", "automata.symbol_embedding.vector_databases.ChromaSymbolEmbeddingVectorDatabase.batch_update", "automata.core.base.database.vector_database.JSONVectorDatabase.batch_add", "automata.core.base.database.vector_database.VectorDatabaseProvider", "automata.core.base.database.vector_database.ChromaVectorDatabase", "automata.tests.unit.chroma.test_chroma_vector.test_batch_add_and_remove", "automata.symbol_embedding.vector_databases.ChromaSymbolEmbeddingVectorDatabase"], "k": 20}
{"task_id": "ContextCodeRetrieval/779", "query": "Which private method in the DotPathMap class builds a map from module dotpaths to module filepaths?", "truth_top_match": "automata.code_parsers.py.dotpath_map.DotPathMap._build_module_dotpath_to_fpath_map", "top_k_matches": ["automata.code_parsers.py.dotpath_map.DotPathMap", "automata.code_parsers.py.dotpath_map.DotPathMap.get_module_fpath_by_dotpath", "automata.code_parsers.py.dotpath_map.DotPathMap._build_module_dotpath_to_fpath_map", "automata.code_parsers.py.dotpath_map.DotPathMap.contains_dotpath", "automata.code_parsers.py.dotpath_map.DotPathMap.get_module_dotpath_by_fpath", "automata.singletons.py_module_loader.PyModuleLoader.fetch_existing_module_fpath_by_dotpath", "automata.code_parsers.py.dotpath_map.DotPathMap.contains_fpath", "automata.code_parsers.py.dotpath_map.DotPathMap.put_module", "automata.singletons.py_module_loader.PyModuleLoader.fetch_ast_module", "automata.singletons.py_module_loader.PyModuleLoader.get_module_dotpath_by_fpath"], "k": 20}
{"task_id": "ContextCodeRetrieval/780", "query": "What abstract method is used to update data in a table in RelationalDatabase?", "truth_top_match": "automata.core.base.database.relational_database.RelationalDatabase.update_entry", "top_k_matches": ["automata.llm.llm_base.LLMConversationDatabaseProvider", "automata.core.base.database.relational_database.RelationalDatabase", "automata.core.base.database.relational_database.SQLDatabase", "automata.core.base.database.relational_database.RelationalDatabase.update_entry", "automata.core.base.database.relational_database.SQLDatabase.update_entry", "automata.llm.llm_base.LLMConversationDatabaseProvider.update", "automata.tests.unit.database.test_database_sql.test_update_entry", "automata.core.base.database.vector_database.VectorDatabaseProvider.save", "automata.tests.unit.task.test_task_database.test_update_task_2", "automata.tests.unit.task.test_task_database.test_update_task"], "k": 20}
{"task_id": "ContextCodeRetrieval/781", "query": "Which class creates a local store for all tasks?", "truth_top_match": "automata.tasks.task_database.AutomataAgentTaskDatabase", "top_k_matches": ["automata.tasks.task_database.AutomataAgentTaskDatabase", "automata.tasks.task_registry.AutomataTaskRegistry", "automata.tasks.task_base.Task", "automata.tasks.task_base.TaskEnvironment", "automata.tests.unit.task.test_task_database.task_registry", "automata.tests.conftest.task_registry", "automata.tasks.task_registry.AutomataTaskRegistry.get_all_tasks", "automata.tests.unit.task.test_task_database.test_get_all_tasks", "automata.tasks.task_base.TaskStatus", "automata.tests.conftest.tasks"], "k": 20}
{"task_id": "ContextCodeRetrieval/782", "query": "Which method is used to indicate the batch construction of embeddings for a list of symbols?", "truth_top_match": "automata.embedding.embedding_base.EmbeddingBuilder.batch_build", "top_k_matches": ["automata.symbol_embedding.symbol_embedding_builders.SymbolCodeEmbeddingBuilder.batch_build", "automata.embedding.embedding_base.EmbeddingBuilder.batch_build", "automata.memory_store.symbol_code_embedding_handler.SymbolCodeEmbeddingHandler.__init__", "automata.symbol_embedding.symbol_embedding_handler.SymbolEmbeddingHandler.get_embeddings", "automata.experimental.symbol_embedding.symbol_doc_embedding_builder.SymbolDocEmbeddingBuilder.batch_build", "automata.memory_store.symbol_code_embedding_handler.SymbolCodeEmbeddingHandler._build_and_add_embeddings", "automata.experimental.symbol_embedding.symbol_doc_embedding_builder.SymbolDocEmbeddingBuilder", "automata.memory_store.symbol_code_embedding_handler.SymbolCodeEmbeddingHandler.process_embedding", "automata.embedding.embedding_base.EmbeddingHandler", "automata.memory_store.symbol_code_embedding_handler.SymbolCodeEmbeddingHandler._queue_for_building"], "k": 20}
{"task_id": "ContextCodeRetrieval/783", "query": "What abstract method is used to save data in the VectorDatabaseProvider?", "truth_top_match": "automata.core.base.database.vector_database.VectorDatabaseProvider.save", "top_k_matches": ["automata.core.base.database.vector_database.VectorDatabaseProvider", "automata.core.base.database.vector_database.JSONVectorDatabase", "automata.core.base.database.vector_database.ChromaVectorDatabase", "automata.core.base.database.vector_database.VectorDatabaseProvider.save", "automata.tests.unit.database.test_database_vector.test_save", "automata.core.base.database.vector_database.JSONVectorDatabase.save", "automata.symbol_embedding.vector_databases.JSONSymbolEmbeddingVectorDatabase", "automata.llm.llm_base.LLMConversationDatabaseProvider", "automata.symbol_embedding.vector_databases.ChromaSymbolEmbeddingVectorDatabase", "automata.tests.unit.database.test_database_vector.test_load"], "k": 20}
{"task_id": "ContextCodeRetrieval/784", "query": "Which method of the task database is used to update an existing task?", "truth_top_match": "automata.tasks.task_database.AutomataAgentTaskDatabase.update_task", "top_k_matches": ["automata.tests.unit.task.test_task_database.test_update_task_2", "automata.tests.unit.task.test_task_database.test_update_task", "automata.tests.unit.task.test_task_database.test_register_and_update_task", "automata.tasks.task_database.AutomataAgentTaskDatabase", "automata.tasks.task_registry.AutomataTaskRegistry.update_task", "automata.tasks.task_database.AutomataAgentTaskDatabase.update_task", "automata.tests.unit.task.test_task_database.test_get_tasks_by_query", "automata.tests.unit.task.test_task_database.test_insert_task", "automata.tests.unit.task.test_task_database.test_contains", "automata.tests.unit.task.test_task_database.test_insert_and_contains_task"], "k": 20}
{"task_id": "ContextCodeRetrieval/785", "query": "Which method sets the system template formatter for the Automata OpenAI Agent configuration builder?", "truth_top_match": "automata.config.openai_config.OpenAIAutomataAgentConfigBuilder.with_system_template_formatter", "top_k_matches": ["automata.config.openai_config.OpenAIAutomataAgentConfigBuilder.with_system_template_formatter", "automata.config.openai_config.OpenAIAutomataAgentConfig", "automata.config.openai_config.OpenAIAutomataAgentConfigBuilder", "automata.config.openai_config.OpenAIAutomataAgentConfig.setup", "automata.config.openai_config.OpenAIAutomataAgentConfig._formatted_instruction", "automata.tests.conftest.automata_agent", "automata.tests.unit.automata_agent.test_automata_agent.test_build_initial_messages", "automata.tests.unit.automata_agent.test_automata_agent_builder.test_builder_creates_proper_instance", "automata.config.formatter.TemplateFormatter", "automata.tests.unit.automata_agent.test_automata_agent_builder.test_builder_accepts_all_fields"], "k": 20}
